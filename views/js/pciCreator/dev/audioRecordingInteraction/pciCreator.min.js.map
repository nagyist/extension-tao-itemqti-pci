{"version":3,"sources":["../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/tpl/propertiesForm!tpl","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/widget/states/Question.js","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/widget/states/states.js","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/css/audioRecordingInteraction!css","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/widget/Widget.js","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/creator/tpl/markup!tpl","../../../qtiItemPci/views/js/pciCreator/dev/audioRecordingInteraction/pciCreator.js","../../../../../../../../../onLayerEnd0.js"],"names":["define","hb","template","Handlebars","depth0","helpers","partials","data","program1","program3","program5","program7","this","compilerInfo","merge","stack1","helper","options","buffer","helperMissing","escapeExpression","self","__","hash","call","identifier","serial","allowPlayback","inverse","noop","fn","program","autoStart","unless","delayMinutes","delaySeconds","autoPlayback","maxRecords","maxRecordingTime","maximumRecordingTimeLimit","isCompressed","audioBitrate","isStereo","useMediaStimulus","displayDownloadLink","partialUpdateInterval","_","$","module","stateFactory","Question","formElement","pciMediaManagerFactory","simpleEditor","containerEditor","formTpl","typeCaster","configChangeCallBack","interaction","value","name","prop","triggerPci","getProperties","AudioRecordingInteractionStateQuestion","extend","$container","widget","$prompt","find","element","create","change","text","updateMarkup","markup","markupSelector","related","areaBroker","getAreaBroker","destroy","prototype","initForm","$mediaStimulusForm","$compressedOptions","$uncompressedOptions","$delayOptions","_widget","$form","response","getResponseDeclaration","pciMediaManager","html","defaults","config","attr","strToBool","updateResponsePartially","parseInt","append","getForm","initWidget","setChangeCallbacks","assign","i","id","boundInteraction","show","hide","removeClass","parseFloat","getChangeCallbacks","init","factory","states","createBundle","arguments","Widget","AudioRecordingInteractionWidget","clone","initCreator","$interaction","registerStates","length","addClass","prompt","ciRegistry","markupTpl","audioRecordingInteractionCreator","getTypeIdentifier","getWidget","defaultProperties","beforeStateInit","event","pci","typeIdentifier","getDefaultProperties","forEach","properties","isReviewMode","media","autostart","replayTimeout","maxPlays","afterCreate","getMarkupTemplate","getMarkupData","defaultData","c","d","document","a","s","createElement","type","getElementsByTagName","cssText","createTextNode","PCI"],"mappings":"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","file":"pciCreator.min.js","sourcesContent":["\ndefine('tpl!audioRecordingInteraction/creator/tpl/propertiesForm', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \"checked=\\\"checked\\\"\";\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  return \"style=\\\"display:none\\\"\";\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  return \" selected=\\\"selected\\\"\";\n  }\n\nfunction program7(depth0,data) {\n  \n  \n  return \" hidden\";\n  }\n\n  buffer += \"<div class=\\\"panel\\\">\\n    <label for=\\\"response-identifier\\\" class=\\\"has-icon\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Response identifier\", options) : helperMissing.call(depth0, \"__\", \"Response identifier\", options)))\n    + \"</label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content:first\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <div class=\\\"tooltip-content\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options)))\n    + \"</div>\\n\\n    <input id=\\\"response-identifier\\\"\\n           type=\\\"text\\\"\\n           name=\\\"identifier\\\"\\n           value=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\\n           placeholder=\\\"e.g. RESPONSE\\\"\\n           data-validate=\\\"$notEmpty; $qtiIdentifier; $availableIdentifier(serial=\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\">\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"allowPlayback\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowPlayback), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow playback\", options) : helperMissing.call(depth0, \"__\", \"Allow playback\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Give the possibility to the test taker to playback its own recording.\", options) : helperMissing.call(depth0, \"__\", \"Give the possibility to the test taker to playback its own recording.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"autoStart\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.autoStart), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Auto start recording\", options) : helperMissing.call(depth0, \"__\", \"Auto start recording\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Recording starts automatically once test taker give microphone use authorisation. If a media stimulus is used, then the recording starts automatically after the stimulus has been played.\", options) : helperMissing.call(depth0, \"__\", \"Recording starts automatically once test taker give microphone use authorisation. If a media stimulus is used, then the recording starts automatically after the stimulus has been played.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div data-role=\\\"delayOptions\\\" \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.autoStart), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\n    <div class=\\\"panel\\\">\\n        <label for=\\\"delay-minutes\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Min:\", options) : helperMissing.call(depth0, \"__\", \"Min:\", options)))\n    + \"</label>\\n        <input id=\\\"delay-minutes\\\" name=\\\"delayMinutes\\\" value=\\\"\";\n  if (helper = helpers.delayMinutes) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.delayMinutes); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" data-max=\\\"20\\\" type=\\\"text\\\" />\\n        <label for=\\\"delay-seconds\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Sec:\", options) : helperMissing.call(depth0, \"__\", \"Sec:\", options)))\n    + \"</label>\\n        <input id=\\\"delay-seconds\\\" name=\\\"delaySeconds\\\" value=\\\"\";\n  if (helper = helpers.delaySeconds) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.delaySeconds); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-increment=\\\"15\\\" data-min=\\\"0\\\" data-max=\\\"45\\\" type=\\\"text\\\" />\\n    </div>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"autoPlayback\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.autoPlayback), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Auto playback recording\", options) : helperMissing.call(depth0, \"__\", \"Auto playback recording\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Recorded audio is automatically played back after recording stops. During playback, no user interaction is possible and all buttons are disabled.\", options) : helperMissing.call(depth0, \"__\", \"Recorded audio is automatically played back after recording stops. During playback, no user interaction is possible and all buttons are disabled.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label for=\\\"max-records\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max attempts:\", options) : helperMissing.call(depth0, \"__\", \"Max attempts:\", options)))\n    + \"</label>\\n    <input id=\\\"max-records\\\" name=\\\"maxRecords\\\" value=\\\"\";\n  if (helper = helpers.maxRecords) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maxRecords); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" type=\\\"text\\\" />\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum number of recording attempts allowed to the test taker. Set to 0 to allow unlimited attempts. With a limit of 3, the test taker will be able to click 2 times on the reset button.\", options) : helperMissing.call(depth0, \"__\", \"Maximum number of recording attempts allowed to the test taker. Set to 0 to allow unlimited attempts. With a limit of 3, the test taker will be able to click 2 times on the reset button.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label for=\\\"max-recording-time\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time limit:\", options) : helperMissing.call(depth0, \"__\", \"Time limit:\", options)))\n    + \"</label>\\n    <input id=\\\"max-recording-time\\\" name=\\\"maxRecordingTime\\\" value=\\\"\";\n  if (helper = helpers.maxRecordingTime) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maxRecordingTime); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"5\\\" data-min=\\\"5\\\" data-max=\\\"\";\n  if (helper = helpers.maximumRecordingTimeLimit) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maximumRecordingTimeLimit); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" type=\\\"text\\\" />\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In seconds. Maximum recording time allowed (cannot be less than 5 seconds). Recording will automatically stop once reached.\", options) : helperMissing.call(depth0, \"__\", \"In seconds. Maximum recording time allowed (cannot be less than 5 seconds). Recording will automatically stop once reached.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<hr />\\n<div class=\\\"panel\\\">\\n    <label for=\\\"is-compressed\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Recording format\", options) : helperMissing.call(depth0, \"__\", \"Recording format\", options)))\n    + \"</label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"With compressed recording, the audio is saved as a webm or ogg file (smaller size). With uncompressed, as a lossless Wav file (much bigger size).\", options) : helperMissing.call(depth0, \"__\", \"With compressed recording, the audio is saved as a webm or ogg file (smaller size). With uncompressed, as a lossless Wav file (much bigger size).\", options)))\n    + \"\\n    </span>\\n    <select id=\\\"is-compressed\\\" name=\\\"isCompressed\\\">\\n        <option value=\\\"true\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Compressed\", options) : helperMissing.call(depth0, \"__\", \"Compressed\", options)))\n    + \"</option>\\n        <option value=\\\"false\\\"\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Uncompressed\", options) : helperMissing.call(depth0, \"__\", \"Uncompressed\", options)))\n    + \"</option>\\n    </select>\\n</div>\\n\\n<div data-role=\\\"compressedOptions\\\" \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\n    <div class=\\\"panel\\\">\\n        <label for=\\\"audio-bitrate\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Audio bitrate:\", options) : helperMissing.call(depth0, \"__\", \"Audio bitrate:\", options)))\n    + \"</label>\\n        <input id=\\\"audio-bitrate\\\" name=\\\"audioBitrate\\\" value=\\\"\";\n  if (helper = helpers.audioBitrate) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.audioBitrate); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"1000\\\" data-min=\\\"8000\\\" type=\\\"text\\\" />\\n        <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n        <span class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In bps (bits per second). Set the tradeoff between audio quality and filesize. With the default value (20.000bps), a 2minutes recording weights roughly 300KB.\", options) : helperMissing.call(depth0, \"__\", \"In bps (bits per second). Set the tradeoff between audio quality and filesize. With the default value (20.000bps), a 2minutes recording weights roughly 300KB.\", options)))\n    + \"\\n        </span>\\n    </div>\\n</div>\\n\\n<div data-role=\\\"uncompressedOptions\\\"  \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\n    <div class=\\\"panel\\\">\\n        <label for=\\\"is-stereo\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Channels\", options) : helperMissing.call(depth0, \"__\", \"Channels\", options)))\n    + \"</label>\\n        <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n        <span class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Number of channels for the recording. Allow to cut the record size in half if used in mono.\", options) : helperMissing.call(depth0, \"__\", \"Number of channels for the recording. Allow to cut the record size in half if used in mono.\", options)))\n    + \"\\n        </span>\\n        <select id=\\\"is-stereo\\\" name=\\\"isStereo\\\">\\n            <option value=\\\"false\\\"\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isStereo), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Mono\", options) : helperMissing.call(depth0, \"__\", \"Mono\", options)))\n    + \"</option>\\n            <option value=\\\"true\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isStereo), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Stereo\", options) : helperMissing.call(depth0, \"__\", \"Stereo\", options)))\n    + \"</option>\\n        </select>\\n    </div>\\n</div>\\n\\n<hr />\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"useMediaStimulus\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.useMediaStimulus), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Use media stimulus\", options) : helperMissing.call(depth0, \"__\", \"Use media stimulus\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This options allow to insert a media stimulus that will have to be played before recording can happen.\", options) : helperMissing.call(depth0, \"__\", \"This options allow to insert a media stimulus that will have to be played before recording can happen.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <div class=\\\"media-stimulus-properties-form\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.useMediaStimulus), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"></div>\\n</div>\\n\\n<hr />\\n\\n<h3 class=\\\"txt-error\\\"><strong><span class=\\\"icon-warning\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"For tests only\", options) : helperMissing.call(depth0, \"__\", \"For tests only\", options)))\n    + \"</strong></h3>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"displayDownloadLink\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.displayDownloadLink), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span>\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow download\", options) : helperMissing.call(depth0, \"__\", \"Allow download\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This is for testing purposes only. Displays a link to download the recorded file once the recording stops. This shouldn't be used in a delivery context, as it would allow the test taker to download its own recording.\", options) : helperMissing.call(depth0, \"__\", \"This is for testing purposes only. Displays a link to download the recorded file once the recording stops. This shouldn't be used in a delivery context, as it would allow the test taker to download its own recording.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label for=\\\"partial-update-interval\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Update interval:\", options) : helperMissing.call(depth0, \"__\", \"Update interval:\", options)))\n    + \"</label>\\n    <input id=\\\"partial-update-interval\\\" name=\\\"partialUpdateInterval\\\" value=\\\"\";\n  if (helper = helpers.partialUpdateInterval) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.partialUpdateInterval); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"1\\\" data-min=\\\"1\\\" data-max=\\\"60\\\" type=\\\"text\\\" />\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In seconds. The time interval between partial updates of the recording.\", options) : helperMissing.call(depth0, \"__\", \"In seconds. The time interval between partial updates of the recording.\", options)))\n    + \"\\n    </span>\\n</div>\";\n  return buffer;\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2021 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/creator/widget/states/Question',[\n    'lodash',\n    'i18n',\n    'jquery',\n    'module',\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Question',\n    'taoQtiItem/qtiCreator/widgets/helpers/formElement',\n    'taoQtiItem/qtiCreator/widgets/helpers/pciMediaManager/pciMediaManager',\n    'taoQtiItem/qtiCreator/editor/simpleContentEditableElement',\n    'taoQtiItem/qtiCreator/editor/containerEditor',\n    'tpl!audioRecordingInteraction/creator/tpl/propertiesForm',\n    'util/typeCaster'\n], function (_, __, $, module, stateFactory, Question, formElement, pciMediaManagerFactory, simpleEditor, containerEditor, formTpl, typeCaster) {\n    'use strict';\n\n    var AudioRecordingInteractionStateQuestion = stateFactory.extend(Question, function create(){\n        var $container = this.widget.$container,\n            $prompt = $container.find('.prompt'),\n            interaction = this.widget.element;\n\n        containerEditor.create($prompt, {\n            change : function change(text){\n                interaction.data('prompt', text);\n                interaction.updateMarkup();\n            },\n            markup : interaction.markup,\n            markupSelector : '.prompt',\n            related : interaction,\n            areaBroker: this.widget.getAreaBroker()\n        });\n\n    }, function destroy(){\n        var $container = this.widget.$container,\n            $prompt = $container.find('.prompt');\n\n        simpleEditor.destroy($container);\n        containerEditor.destroy($prompt);\n    });\n\n    /**\n     * Change callback of form values\n     * @param {Object} interaction\n     * @param {*} value\n     * @param {String} name\n     */\n    function configChangeCallBack(interaction, value, name) {\n        interaction.prop(name, value);\n        interaction.triggerPci('configChange', [interaction.getProperties()]);\n    }\n\n    AudioRecordingInteractionStateQuestion.prototype.initForm = function initForm(){\n        var _widget = this.widget,\n            $form = _widget.$form,\n            interaction = _widget.element,\n            response = interaction.getResponseDeclaration(),\n            $mediaStimulusForm,\n            $compressedOptions,\n            $uncompressedOptions,\n            $delayOptions;\n\n        var pciMediaManager = pciMediaManagerFactory(_widget);\n\n        //render the form using the form template\n        $form.html(formTpl(_.defaults({}, module.config(), {\n            serial : response.serial,\n            identifier : interaction.attr('responseIdentifier'),\n\n            allowPlayback:          typeCaster.strToBool(interaction.prop('allowPlayback'), true),\n            autoStart:              typeCaster.strToBool(interaction.prop('autoStart'), false),\n            autoPlayback:           typeCaster.strToBool(interaction.prop('autoPlayback'), false),\n\n            delayMinutes:           interaction.prop('delayMinutes'),\n            delaySeconds:           interaction.prop('delaySeconds'),\n\n            maxRecords:             interaction.prop('maxRecords'),\n            maxRecordingTime:       interaction.prop('maxRecordingTime'),\n\n            isCompressed:           typeCaster.strToBool(interaction.prop('isCompressed'), true),\n            audioBitrate:           interaction.prop('audioBitrate'),\n            isStereo:               typeCaster.strToBool(interaction.prop('isStereo'), false),\n\n            useMediaStimulus:       typeCaster.strToBool(interaction.prop('useMediaStimulus'), false),\n\n            updateResponsePartially: typeCaster.strToBool(interaction.prop('updateResponsePartially'), true),\n            partialUpdateInterval: parseInt(interaction.prop('partialUpdateInterval'), 10) / 1000,\n\n            displayDownloadLink:    typeCaster.strToBool(interaction.prop('displayDownloadLink'), false)\n        })));\n\n        $mediaStimulusForm = $form.find('.media-stimulus-properties-form');\n        $mediaStimulusForm.append(pciMediaManager.getForm());\n\n        $compressedOptions = $form.find('[data-role=\"compressedOptions\"]');\n        $uncompressedOptions = $form.find('[data-role=\"uncompressedOptions\"]');\n\n        $delayOptions = $form.find('[data-role=\"delayOptions\"]');\n\n        //init form javascript\n        formElement.initWidget($form);\n\n        //init data change callbacks\n        formElement.setChangeCallbacks($form, interaction, _.assign({\n            identifier : function identifier(i, value){\n                response.id(value);\n                interaction.attr('responseIdentifier', value);\n            },\n\n            allowPlayback:      configChangeCallBack,\n\n            autoStart: function autoStart(boundInteraction, value, name) {\n                if (value) {\n                    $delayOptions.show();\n                } else {\n                    $delayOptions.hide();\n                }\n                configChangeCallBack(boundInteraction, value, name);\n            },\n\t\t\tautoPlayback:       configChangeCallBack,\n\n            delayMinutes:       configChangeCallBack,\n            delaySeconds:       configChangeCallBack,\n\n            maxRecords:         configChangeCallBack,\n            maxRecordingTime:   configChangeCallBack,\n\n            isCompressed: function isCompressed(boundInteraction, value, name) {\n                if (value === 'true') {\n                    $uncompressedOptions.hide();\n                    $compressedOptions.show();\n                } else {\n                    $uncompressedOptions.show();\n                    $compressedOptions.hide();\n                }\n                configChangeCallBack(boundInteraction, value, name);\n            },\n            audioBitrate:       configChangeCallBack,\n            isStereo:           configChangeCallBack,\n\n            useMediaStimulus: function useMediaStimulusCb(boundInteraction, value, name) {\n                if (value) {\n                    $mediaStimulusForm.removeClass('hidden');\n                    $mediaStimulusForm.show(250);\n                } else {\n                    $mediaStimulusForm.hide(250);\n                }\n                configChangeCallBack(boundInteraction, value, name);\n            },\n\n            partialUpdateInterval: function partialUpdateInterval(boundInteraction, value, name) {\n                value = parseFloat(value) * 1000\n                configChangeCallBack(boundInteraction, value, name);\n            },\n\n            displayDownloadLink: configChangeCallBack\n\n        }, pciMediaManager.getChangeCallbacks()));\n\n        pciMediaManager.init();\n    };\n\n    return AudioRecordingInteractionStateQuestion;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/creator/widget/states/states',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states',\n    'audioRecordingInteraction/creator/widget/states/Question'\n], function(factory, states){\n    'use strict';\n\n    return factory.createBundle(states, arguments, ['answer', 'correct', 'map']);\n});\n","\ndefine('css!audioRecordingInteraction/creator/css/audioRecordingInteraction',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/creator/widget/Widget',[\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget',\n    'audioRecordingInteraction/creator/widget/states/states',\n    'css!audioRecordingInteraction/creator/css/audioRecordingInteraction'\n], function(Widget, states){\n    'use strict';\n\n    var AudioRecordingInteractionWidget = Widget.clone();\n\n    AudioRecordingInteractionWidget.initCreator = function(){\n        var $interaction;\n\n        this.registerStates(states);\n\n        Widget.initCreator.call(this);\n\n        $interaction = this.$container.find('.audioRecordingInteraction');\n        if ($interaction.length) {\n            $interaction.addClass('tao-qti-creator-context');\n        }\n    };\n\n    return AudioRecordingInteractionWidget;\n});\n","\ndefine('tpl!audioRecordingInteraction/creator/tpl/markup', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"audioRecordingInteraction\\\">\\n    <div class=\\\"prompt\\\">\";\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" </div>\\n    <div class=\\\"audio-rec\\\">\\n        <div class=\\\"media-stimulus\\\"> </div>\\n        <div class=\\\"input-meter\\\">\\n            <div class=\\\"countdown-pie-chart\\\"> </div>\\n            <div class=\\\"leds\\\"> </div>\\n            <div class=\\\"mic\\\"> </div>\\n        </div>\\n        <div class=\\\"progress\\\"> </div>\\n        <div class=\\\"controls\\\"> </div>\\n    </div>\\n</div>\";\n  return buffer;\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2021 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/pciCreator',[\n    'lodash',\n    'taoQtiItem/qtiCreator/editor/customInteractionRegistry',\n    'audioRecordingInteraction/creator/widget/Widget',\n    'tpl!audioRecordingInteraction/creator/tpl/markup'\n], function (_, ciRegistry, Widget, markupTpl) {\n    'use strict';\n\n    var _typeIdentifier = 'audioRecordingInteraction';\n\n    var audioRecordingInteractionCreator = {\n        /**\n         * (required) Get the typeIdentifier of the custom interaction\n         *\n         * @returns {String}\n         */\n        getTypeIdentifier: function getTypeIdentifier() {\n            return _typeIdentifier;\n        },\n        /**\n         * (required) Get the widget prototype\n         * Used in the renderer\n         *\n         * @returns {Object} Widget\n         */\n        getWidget: function getWidget() {\n            var defaultProperties;\n            Widget.beforeStateInit(function (event, pci) {\n                if (pci.typeIdentifier && pci.typeIdentifier === _typeIdentifier) {\n                    // ensure all the properties get a default value\n                    defaultProperties = audioRecordingInteractionCreator.getDefaultProperties();\n                    _.forEach(defaultProperties, function(value, name) {\n                        if ((typeof pci.properties[name] === 'undefined') ||\n                            (typeof pci.properties[name] === 'string' && !pci.properties[name] && typeof value !== 'string')) {\n                            pci.properties[name] = value;\n                        }\n                    });\n                }\n            });\n            return Widget;\n        },\n        /**\n         * (optional) Get the default properties values of the pci.\n         * Used on new pci instance creation\n         *\n         * @returns {Object}\n         */\n        getDefaultProperties: function getDefaultProperties() {\n            return {\n                isReviewMode: false,\n                allowPlayback: true,\n                autoStart: false,\n                autoPlayback: false,\n\n                delayMinutes: 0,\n                delaySeconds: 0,\n\n                maxRecords: 2,\n                maxRecordingTime: 120,\n\n                isCompressed: true,\n                audioBitrate: 20000,\n                isStereo: false,\n\n                useMediaStimulus: false,\n                media: {\n                    autostart: true,\n                    replayTimeout: 5,\n                    maxPlays: 2\n                },\n\n                displayDownloadLink: false,\n                updateResponsePartially: true,\n                partialUpdateInterval: 1000\n            };\n        },\n        /**\n         * (optional) Callback to execute on the\n         * Used on new pci instance creation\n         *\n         * @returns {Object}\n         */\n        afterCreate: function afterCreate() {\n            //do some stuff\n        },\n        /**\n         * (required) Gives the qti pci xml template\n         *\n         * @returns {function} handlebar template\n         */\n        getMarkupTemplate: function getMarkupTemplate() {\n            return markupTpl;\n        },\n        /**\n         * (optional) Allows passing additional data to xml template\n         *\n         * @returns {function} handlebar template\n         */\n        getMarkupData: function getMarkupData(pci, defaultData) {\n            defaultData.prompt = pci.data('prompt');\n            return defaultData;\n        }\n    };\n\n    //since we assume we are in a tao context, there is no use to expose the a global object for lib registration\n    //all libs should be declared here\n    return audioRecordingInteractionCreator;\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.item-editor-interaction-related div[data-role=\\\"delayOptions\\\"] .panel{margin-top:-15px}.item-editor-interaction-related div[data-role=\\\"delayOptions\\\"] .panel label[for=\\\"delayMinutes\\\"]{min-width:0}.item-editor-interaction-related div[data-role=\\\"delayOptions\\\"] .panel label[for=\\\"delaySeconds\\\"]{min-width:0;padding-left:18px}\\n\\n/*# sourceMappingURL=audioRecordingInteraction.css.map */');\n"]}