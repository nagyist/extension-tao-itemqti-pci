function _typeof(obj){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}define("tpl!mathEntryInteraction/creator/tpl/propertiesForm",["handlebars"],function(e){return e.template(function(e,t,n,a,o){function l(){return"checked=\"checked\""}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,e.helpers),o=o||{};var s,r,p,c="",_=n.helperMissing,d=this.escapeExpression,h=this;return c+="<div class=\"panel\">\n    <label for=\"\" class=\"has-icon\">"+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Response identifier",p):_.call(t,"__","Response identifier",p)))+"</label>\n    <span class=\"icon-help tooltipstered\" data-tooltip=\"~ .tooltip-content:first\" data-tooltip-theme=\"info\"></span>\n    <div class=\"tooltip-content\">"+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\"_\") and contain only Letters, underscores, hyphens (\"-\"), period (\".\", a.k.a. full-stop), Digits, CombiningChars and Extenders.",p):_.call(t,"__","The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\"_\") and contain only Letters, underscores, hyphens (\"-\"), period (\".\", a.k.a. full-stop), Digits, CombiningChars and Extenders.",p)))+"</div>\n\n    <input type=\"text\"\n           name=\"identifier\"\n           value=\"",(r=n.identifier)?s=r.call(t,{hash:{},data:o}):(r=t&&t.identifier,s="function"==typeof r?r.call(t,{hash:{},data:o}):r),c+=d(s)+"\"\n           placeholder=\"e.g. RESPONSE\"\n           data-validate=\"$notEmpty; $qtiIdentifier; $availableIdentifier(serial=",(r=n.serial)?s=r.call(t,{hash:{},data:o}):(r=t&&t.serial,s="function"==typeof r?r.call(t,{hash:{},data:o}):r),c+=d(s)+");\">\n</div>\n\n<hr />\n\n<h3>"+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Options",p):_.call(t,"__","Options",p)))+"</h3>\n\n<div>\n    <label class=\"panel\">\n        <input name=\"authorizeWhiteSpace\" type=\"checkbox\" ",s=n.if.call(t,t&&t.authorizeWhiteSpace,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"authorize white space",p):_.call(t,"__","authorize white space",p)))+"\n    </label>\n    <label class=\"panel\">\n        <input name=\"useGapExpression\" type=\"checkbox\" ",s=n.if.call(t,t&&t.useGapExpression,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"use expression with gaps",p):_.call(t,"__","use expression with gaps",p)))+"\n    </label>\n    <div class=\"panel mathgap-style-box\" ",s=n.unless.call(t,t&&t.useGapExpression,{hash:{},inverse:h.noop,fn:h.program(3,function(){return"style=\"display:none\""},o),data:o}),(s||0===s)&&(c+=s),c+=">\n        <label for=\"gapStyle\">"+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Gap size",p):_.call(t,"__","Gap size",p)))+"</label>\n        <select name=\"gapStyle\" data-mathgap-style>\n            <option value=\"math-gap-small\">"+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Small",p):_.call(t,"__","Small",p)))+"</option>\n            <option value=\"math-gap-medium\">"+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Medium",p):_.call(t,"__","Medium",p)))+"</option>\n            <option value=\"math-gap-large\">"+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Large",p):_.call(t,"__","Large",p)))+"</option>\n        </select>\n    </div>\n</div>\n\n<hr />\n\n<h3>"+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Functions",p):_.call(t,"__","Functions",p)))+"</h3>\n\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_sqrt\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_sqrt,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" width=\"1em\" viewBox=\"0 0 400 400\" version=\"1.0\">\n            <path d=\"m193.39062 4.859375-50.8125 317.375-79.093743-160.71876-58.781256 29.46875l6.6250007 12.5 38.687495-17.75 96.875003 199.40625 58.6875-366.28124h144.71876v-14h-142.46876-10.21874-4.21876z\"></path>\n            <text class=\"\">\u221A</text>\n        </svg>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"square root",p):_.call(t,"__","square root",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_frac\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_frac,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"fraction",p):_.call(t,"__","fraction",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_exp\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_exp,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        x&#8319; "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"exponent",p):_.call(t,"__","exponent",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_subscript\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_subscript,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        x&#8336; "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"subscript",p):_.call(t,"__","subscript",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_log\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_log,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"log",p):_.call(t,"__","log",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_ln\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_ln,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"ln",p):_.call(t,"__","ln",p)))+"\n    </label>\n</div>\n\n<hr />\n<h3>"+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Symbols",p):_.call(t,"__","Symbols",p)))+"</h3>\n\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_e\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_e,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        e\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_infinity\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_infinity,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        &#8734;\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"roundbkts\" type=\"checkbox\" ",s=n.if.call(t,t&&t.roundbkts,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        ( ) "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"parentheses/round brackets",p):_.call(t,"__","parentheses/round brackets",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"curlybkts\" type=\"checkbox\" ",s=n.if.call(t,t&&t.curlybkts,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        { } "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"braces/curly brackets",p):_.call(t,"__","braces/curly brackets",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"squarebkts\" type=\"checkbox\" ",s=n.if.call(t,t&&t.squarebkts,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        [ ] "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"square brackets",p):_.call(t,"__","square brackets",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_integral\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_integral,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        &#x222b; "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Indefinite integral",p):_.call(t,"__","Indefinite integral",p)))+"\n    </label>\n</div>\n\n<hr />\n<h3>"+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Geometry",p):_.call(t,"__","Geometry",p)))+"</h3>\n\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_angle\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_angle,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        &ang; "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"angle",p):_.call(t,"__","angle",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_integral\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_integral,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Indefinite integral",p):_.call(t,"__","Indefinite integral",p)))+"\n        </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_triangle\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_triangle,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        &#9651; "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"triangle",p):_.call(t,"__","triangle",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_similar\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_similar,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        &sim; "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"similar",p):_.call(t,"__","similar",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_paral\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_paral,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        &#8741; "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"is parallel with",p):_.call(t,"__","is parallel with",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_perp\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_perp,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        &#8869; "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"is perpendicular to",p):_.call(t,"__","is perpendicular to",p)))+"\n    </label>\n</div>\n\n<hr />\n<h3>"+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Trigonometry",p):_.call(t,"__","Trigonometry",p)))+"</h3>\n\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_pi\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_pi,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        &pi;\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_cos\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_cos,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"cosinus",p):_.call(t,"__","cosinus",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_sin\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_sin,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"sinus",p):_.call(t,"__","sinus",p)))+"\n    </label>\n</div>\n\n<hr />\n<h3>"+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Comparison",p):_.call(t,"__","Comparison",p)))+"</h3>\n\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_lower\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_lower,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        &lt; "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"lower than",p):_.call(t,"__","lower than",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_greater\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_greater,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        &gt; "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"greater than",p):_.call(t,"__","greater than",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_lte\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_lte,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"\u2264",p):_.call(t,"__","\u2264",p)))+" "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"lower than or equal",p):_.call(t,"__","lower than or equal",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_gte\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_gte,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"\u2265",p):_.call(t,"__","\u2265",p)))+" "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"greater than or equal",p):_.call(t,"__","greater than or equal",p)))+"\n    </label>\n</div>\n\n<hr />\n<h3>"+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Operands",p):_.call(t,"__","Operands",p)))+"</h3>\n\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_equal\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_equal,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        = "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"equal",p):_.call(t,"__","equal",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_plus\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_plus,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        + "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"plus",p):_.call(t,"__","plus",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_minus\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_minus,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        \u2013 "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"minus",p):_.call(t,"__","minus",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_times\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_times,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        &times; "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"times",p):_.call(t,"__","times",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_timesdot\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_timesdot,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        \xB7 "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"times dot",p):_.call(t,"__","times dot",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_divide\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_divide,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        &divide; "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"divide",p):_.call(t,"__","divide",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_plusminus\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_plusminus,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        &#177; "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Plus/minus",p):_.call(t,"__","Plus/minus",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_inmem\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_inmem,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"is a member of",p):_.call(t,"__","is a member of",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_ninmem\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_ninmem,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"is not a member of",p):_.call(t,"__","is not a member of",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_union\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_union,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"set union",p):_.call(t,"__","set union",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"tool_intersec\" type=\"checkbox\" ",s=n.if.call(t,t&&t.tool_intersec,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"set intersection",p):_.call(t,"__","set intersection",p)))+"\n    </label>\n</div>\n\n<hr />\n\n<h3 class=\"txt-error\"><strong><span class=\"icon-warning\"></span> "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"Experimental only",p):_.call(t,"__","Experimental only",p)))+"</strong></h3>\n\n<div>\n    <label class=\"panel\">\n        <input name=\"allowNewLine\" type=\"checkbox\" ",s=n.if.call(t,t&&t.allowNewLine,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"allow line break",p):_.call(t,"__","allow line break",p)))+"\n    </label>\n</div>\n<div>\n    <label class=\"panel\">\n        <input name=\"enableAutoWrap\" type=\"checkbox\" ",s=n.if.call(t,t&&t.enableAutoWrap,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(s||0===s)&&(c+=s),c+="/>\n        <span class=\"icon-checkbox\"></span>\n        "+d((r=n.__||t&&t.__,p={hash:{},data:o},r?r.call(t,"enable auto wrap",p):_.call(t,"__","enable auto wrap",p)))+"\n    </label>\n</div>"})}),define("tpl!mathEntryInteraction/creator/tpl/addGapBtn",["handlebars"],function(e){return e.template(function(e,t,n,a,o){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,e.helpers),o=o||{};var l,i,s="",r=n.helperMissing;return s+="<div class=\"add-option\">\n    <span class=\"icon-add\"></span> "+(0,this.escapeExpression)((l=n.__||t&&t.__,i={hash:{},data:o},l?l.call(t,"Add gap",i):r.call(t,"__","Add gap",i)))+"\n</div>"})}),define("mathEntryInteraction/creator/widget/states/Question",["jquery","i18n","taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/interactions/states/Question","taoQtiItem/qtiCreator/widgets/helpers/formElement","taoQtiItem/qtiCreator/editor/simpleContentEditableElement","taoQtiItem/qtiCreator/editor/containerEditor","tpl!mathEntryInteraction/creator/tpl/propertiesForm","tpl!mathEntryInteraction/creator/tpl/addGapBtn","mathJax"],function(e,t,n,a,o,l,i,s,r,p){"use strict";function c(e,t){return void 0===e?t:!0===e||"true"===e}function _(e,t,n){e.prop(n,t),e.triggerPci("configChange",[e.getProperties()])}var d=e(r()),h=n.extend(a,function(){var e=this.widget.$container,t=e.find(".prompt"),n=this.widget.element;i.create(t,{change:function change(e){n.data("prompt",e),n.updateMarkup(),void 0!==p&&p&&(p.Hub.processSectionDelay=0);var a=t;void 0!==p&&p&&(window.MathJax||(window.MathJax=p),a.length&&(console.log("typeset-crearor",a),p.Hub.Queue(["Typeset",p.Hub,a[0]])))},markup:n.markup,markupSelector:".prompt",related:n,areaBroker:this.widget.getAreaBroker()}),c(n.prop("useGapExpression"),!1)&&this.createAddGapBtn(),this.addMathFieldListener()},function(){var e=this.widget.$container,t=e.find(".prompt");l.destroy(e),i.destroy(t),this.removeAddGapBtn()});return h.prototype.initForm=function(){var e,t,n=this,a=this.widget,l=a.$form,i=a.element,r=i.getResponseDeclaration();l.html(s({serial:r.serial,identifier:i.attr("responseIdentifier"),authorizeWhiteSpace:c(i.prop("authorizeWhiteSpace"),!1),useGapExpression:c(i.prop("useGapExpression"),!1),focusOnDenominator:c(i.prop("focusOnDenominator"),!1),tool_frac:c(i.prop("tool_frac"),!0),tool_sqrt:c(i.prop("tool_sqrt"),!0),tool_exp:c(i.prop("tool_exp"),!0),tool_log:c(i.prop("tool_log"),!0),tool_ln:c(i.prop("tool_ln"),!0),tool_e:c(i.prop("tool_e"),!0),tool_infinity:c(i.prop("tool_infinity"),!0),squarebkts:c(i.prop("tool_rbrack"),!0)&&c(i.prop("tool_lbrack"),!0),tool_pi:c(i.prop("tool_pi"),!0),tool_cos:c(i.prop("tool_cos"),!0),tool_sin:c(i.prop("tool_sin"),!0),tool_lte:c(i.prop("tool_lte"),!0),tool_gte:c(i.prop("tool_gte"),!0),tool_times:c(i.prop("tool_times"),!0),tool_divide:c(i.prop("tool_divide"),!0),tool_plusminus:c(i.prop("tool_plusminus"),!0),roundbkts:c(i.prop("tool_rparen"),!0)&&c(i.prop("tool_lparen"),!0),curlybkts:c(i.prop("tool_rbrace"),!0)&&c(i.prop("tool_lbrace"),!0),tool_angle:c(i.prop("tool_angle"),!0),tool_minus:c(i.prop("tool_minus"),!0),tool_plus:c(i.prop("tool_plus"),!0),tool_equal:c(i.prop("tool_equal"),!0),tool_lower:c(i.prop("tool_lower"),!0),tool_greater:c(i.prop("tool_greater"),!0),tool_subscript:c(i.prop("tool_subscript"),!0),tool_integral:c(i.prop("tool_integral"),!0),tool_timesdot:c(i.prop("tool_timesdot"),!0),tool_triangle:c(i.prop("tool_triangle"),!0),tool_similar:c(i.prop("tool_similar"),!0),tool_paral:c(i.prop("tool_paral"),!0),tool_perp:c(i.prop("tool_perp"),!0),tool_inmem:c(i.prop("tool_inmem"),!0),tool_ninmem:c(i.prop("tool_ninmem"),!0),tool_union:c(i.prop("tool_union"),!0),tool_intersec:c(i.prop("tool_intersec"),!0),allowNewLine:c(i.prop("allowNewLine"),!1),enableAutoWrap:c(i.prop("enableAutoWrap"),!1)})),o.initWidget(l),o.setChangeCallbacks(l,i,{identifier:function identifier(e,t){r.id(t),i.attr("responseIdentifier",t)},useGapExpression:function useGapExpression(t,a){c(a,!1)?(n.createAddGapBtn(),e.show()):(t.prop("gapExpression",""),n.removeAddGapBtn(),e.hide()),r.attr("cardinality","single"),_(t,a,"useGapExpression")},gapStyle:function gapStyle(e,t){e.prop("gapStyle",t),_(e,t,"gapStyle")},authorizeWhiteSpace:_,focusOnDenominator:_,tool_frac:_,tool_sqrt:_,tool_exp:_,tool_log:_,tool_ln:_,tool_e:_,tool_infinity:_,tool_pi:_,tool_cos:_,tool_sin:_,tool_lte:_,tool_gte:_,tool_times:_,tool_divide:_,tool_plusminus:_,tool_angle:_,tool_minus:_,tool_plus:_,tool_equal:_,tool_lower:_,tool_greater:_,tool_subscript:_,tool_integral:_,tool_timesdot:_,tool_triangle:_,tool_similar:_,tool_paral:_,tool_perp:_,tool_inmem:_,tool_ninmem:_,tool_union:_,tool_intersec:_,squarebkts:function squarebkts(e,t){e.prop("tool_lbrack",t),e.prop("tool_rbrack",t),e.triggerPci("configChange",[e.getProperties()])},roundbkts:function roundbkts(e,t){e.prop("tool_lparen",t),e.prop("tool_rparen",t),e.triggerPci("configChange",[e.getProperties()])},curlybkts:function curlybkts(e,t){e.prop("tool_lbrace",t),e.prop("tool_rbrace",t),e.triggerPci("configChange",[e.getProperties()])},allowNewLine:_,enableAutoWrap:_}),e=l.find(".mathgap-style-box"),t=e.find("[data-mathgap-style]"),t.select2({width:"100%",minimumResultsForSearch:1/0}).val(i.prop("gapStyle")).trigger("change")},h.prototype.addMathFieldListener=function(){var e=this.widget,t=e.element;t.onPci("responseChange",function(e){c(t.prop("useGapExpression"),!1)?t.prop("gapExpression",e):t.prop("gapExpression","")})},h.prototype.createAddGapBtn=function(){var e=this.widget,t=e.$container,n=t.find(".toolbar"),a=e.element;n.length&&(n.after(d),d.on("click",function(){a.getResponseDeclaration().removeMapEntries(),a.triggerPci("addGap")}))},h.prototype.removeAddGapBtn=function(){d.off("click"),d.remove()},h}),define("mathEntryInteraction/creator/widget/states/Correct",["taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/states/Correct"],function(e,t){"use strict";return e.create(t,function(){this.widget.element.getResponseDeclaration().setTemplate("MAP_RESPONSE"),this.widget.changeState("map")},function(){})}),define("tpl!mathEntryInteraction/creator/tpl/answerForm",["handlebars"],function(e){return e.template(function(e,t,n,a,o){function l(e,t){var a,o,l,i="";return i+="\n                <div class=\"correct-answer-entry\" data-index=\""+_((a=null==t||!1===t?t:t.index,_typeof(a)===c?a.apply(e):a))+"\">\n                    <p>"+_((o=n.__||e&&e.__,l={hash:{},data:t},o?o.call(e,"Correct answer option",l):d.call(e,"__","Correct answer option",l)))+" "+_((o=n.increaseIndex||e&&e.increaseIndex,l={hash:{},data:t},o?o.call(e,null==t||!1===t?t:t.index,l):d.call(e,"increaseIndex",null==t||!1===t?t:t.index,l)))+"</p>\n                    <a href=\"#\" class=\"answer-edit\">\n                        <span class=\"icon-edit\"></span>\n                        <span>"+_((o=n.__||e&&e.__,l={hash:{},data:t},o?o.call(e,"edit the answer",l):d.call(e,"__","edit the answer",l)))+"</span>\n                    </a>\n\n                    <br>\n\n                    <a href=\"#\" class=\"answer-delete\">\n                        <span class=\"icon-bin\"></span>\n                        <span>"+_((o=n.__||e&&e.__,l={hash:{},data:t},o?o.call(e,"delete the answer",l):d.call(e,"__","delete the answer",l)))+"</span>\n                    </a>\n                </div>\n                <br>\n                "}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,e.helpers),o=o||{};var i,s,r,p="",c="function",_=this.escapeExpression,d=n.helperMissing,h=this;return p+="<div class=\"panel mathEntryInteraction\">\n    <hr>\n    <h3>"+_((s=n.__||t&&t.__,r={hash:{},data:o},s?s.call(t,"Define correct responses",r):d.call(t,"__","Define correct responses",r)))+":</h3>\n    <div class=\"answer-entries-config\" data-config-for-hot-uid=\""+_((i=null==o||!1===o?o:o.key,_typeof(i)==="function"?i.apply(t):i))+"\">\n        <div class=\"panel\">\n            <div class=\"entry-config\">\n                ",i=n.each.call(t,t&&t.correctAnswerEntries,{hash:{},inverse:h.noop,fn:h.program(1,l,o),data:o}),(i||0===i)&&(p+=i),p+="\n            </div>\n        </div>\n\n    </div>\n\n</div>"})}),define("tpl!mathEntryInteraction/creator/tpl/addAnswerOption",["handlebars"],function(e){return e.template(function(e,t,n,a,o){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,e.helpers),o=o||{};var l,i,s="",r=n.helperMissing;return s+="<button class=\"add-answer-option btn-info\">\n    <i class=\"adder\"> </i> "+(0,this.escapeExpression)((l=n.__||t&&t.__,i={hash:{},data:o},l?l.call(t,"Add answer option",i):r.call(t,"__","Add answer option",i)))+"\n</button>"})}),define("mathEntryInteraction/creator/widget/states/Map",["handlebars","i18n","lodash","jquery","taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/states/Map","taoQtiItem/qtiCreator/widgets/helpers/formElement","tpl!mathEntryInteraction/creator/tpl/answerForm","tpl!mathEntryInteraction/creator/tpl/addAnswerOption"],function(e,t,n,a,o,l,i,s,r){"use strict";e.registerHelper("increaseIndex",function(e,t){return parseInt(e)+1});var p=o.create(l,function(){this.initGlobalVariables(),this.initForm()},function(){this.emptyGapFields(),this.toggleResponseMode(!1),this.saveAnswers(),this.removeResponseChangeEventListener(),this.removeEditDeleteListeners(),this.removeAddButtonListener(),this.destroyForm()});return p.prototype.initGlobalVariables=function(){var e=this,t=e.widget.element;e.activeEditId=null,e.correctResponses=[],!0===this.inGapMode(e)&&(t=e.widget.element,e.gapTemplate=t.prop("gapExpression"))},p.prototype.initForm=function(){var e=this,t=(e.widget.element,e.widget.$responseForm);this.initResponseChangeEventListener(),e.correctResponses=this.getExistingCorrectAnswerOptions(),t.html(r()),this.initAddAnswerButton(),this.renderForm(e.correctResponses)},p.prototype.initAddAnswerButton=function(){var e=this,t=e.widget.element;e.widget.$responseForm.find(a(".add-answer-option")).on("click",function(){var n;if(!0===e.inGapMode()){e.emptyGapFields();var a=t.prop("gapExpression"),o=(a.match(/\\taoGap/g)||[]).length;if(0<o){n=[];for(var l=0;l<o;l++)n.push(" ");n=n.join(",")}else n=""}else n="",e.toggleResponseMode(!1);e.correctResponses.push(n),e.renderForm(e.correctResponses)})},p.prototype.getExistingCorrectAnswerOptions=function(){var e=this,t=e.widget.element,a=t.getResponseDeclaration().getMapEntries();return n.keys(a)||[]},p.prototype.initResponseChangeEventListener=function(){var e=this,t=e.widget.element;t.onPci("responseChange",function(n){if(!1===e.inGapMode(e)&&null!==e.activeEditId)e.correctResponses[e.activeEditId]=n;else if(!0===e.inGapMode(e)&&null!==e.activeEditId){var a=t.getResponse();null!==a&&(e.correctResponses[e.activeEditId]=a.base.string)}})},p.prototype.removeResponseChangeEventListener=function(){this.widget.element.offPci("responseChange")},p.prototype.initEditingOptions=function(){var e=this,t=e.widget.element;e.widget.$responseForm.find(".entry-config").find(".answer-edit").click(function(n){n.preventDefault(),n.stopImmediatePropagation(),e.toggleResponseMode(!0);var o=parseInt(a(n.target).closest("div").attr("data-index"));if(!(e.activeEditId!==o))e.emptyGapFields();else if(!0===e.inGapMode()){e.activeEditId=o;var l=e.getGapResponseObject(e.correctResponses[e.activeEditId]);t.triggerPci("latexGapInput",[l])}else e.activeEditId=o,t.triggerPci("latexInput",[e.correctResponses[e.activeEditId]])})},p.prototype.getGapResponseObject=function(e){return{base:{string:e.split(",")}}},p.prototype.clearMapEntries=function(){var e=this,t=e.widget.element,a=t.getResponseDeclaration(),o=a.getMapEntries();n.keys(o).forEach(function(e){a.removeMapEntry(e,!0)})},p.prototype.initDeletingOptions=function(){var e=this;e.widget.element,e.widget.$responseForm.find(".entry-config").find(".answer-delete").click(function(t){t.preventDefault(),t.stopImmediatePropagation();var n=parseInt(a(t.target).closest("div").attr("data-index"));!0===e.inGapMode()?(e.activeEditId=n,e.emptyGapFields()):(e.activeEditId=null,e.toggleResponseMode(!1)),e.correctResponses.splice(n,1),e.renderForm(e.correctResponses)})},p.prototype.renderForm=function(e){var t=this,n=t.widget.$responseForm;this.removeEditDeleteListeners(),n.find(".mathEntryInteraction").remove(),n.append(s({correctAnswerEntries:e})),this.initDeletingOptions(),this.initEditingOptions()},p.prototype.removeEditDeleteListeners=function(){var e=this,t=e.widget.$responseForm.find(".entry-config");t.find(".answer-edit").off("click"),t.find(".answer-delete").off("click")},p.prototype.removeAddButtonListener=function(){this.widget.$responseForm.find(a(".add-answer-option")).off("click")},p.prototype.destroyForm=function(){this.widget.$responseForm.find(".mathEntryInteraction").remove()},p.prototype.saveAnswers=function(){var e=this,t=e.widget.element,n=t.getResponseDeclaration();this.clearMapEntries(),!0===this.inGapMode()&&(e.correctResponses=e.correctResponses.filter(function(e){return-1===e.split(",").indexOf("")})),e.correctResponses.forEach(function(e){n.setMapEntry(e,1,!1)})},p.prototype.emptyGapFields=function(){var e=this,t=e.widget.element;!0===this.inGapMode()&&(e.activeEditId=null,t.prop("gapExpression",e.gapTemplate),this.toggleResponseMode(!1))},p.prototype.toggleResponseMode=function(e){var t=this,n=t.widget.element;n.prop("inResponseState")!==e&&(n.prop("inResponseState",e),n.triggerPci("configChange",[n.getProperties()]))},p.prototype.inGapMode=function(){return this.widget.element.prop("useGapExpression")},p}),define("mathEntryInteraction/creator/widget/states/states",["taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states","mathEntryInteraction/creator/widget/states/Question","mathEntryInteraction/creator/widget/states/Correct","mathEntryInteraction/creator/widget/states/Map"],function(e,t){"use strict";return e.createBundle(t,arguments)}),define("mathEntryInteraction/creator/widget/Widget",["taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget","mathEntryInteraction/creator/widget/states/states"],function(e,t){"use strict";var n=e.clone();return n.initCreator=function(){var n;this.registerStates(t),e.initCreator.call(this),n=this.$container.find(".mathEntryInteraction"),n.length&&n.addClass("tao-qti-creator-context")},n}),define("tpl!mathEntryInteraction/creator/tpl/markup",["handlebars"],function(e){return e.template(function(e,t,n,a,o){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,e.helpers),o=o||{};var l,i,s="";return s+="<div class=\"mathEntryInteraction\">\n    <div class=\"prompt\">",(i=n.prompt)?l=i.call(t,{hash:{},data:o}):(i=t&&t.prompt,l="function"==typeof i?i.call(t,{hash:{},data:o}):i),(l||0===l)&&(s+=l),s+="</div>\n    <div class=\"math-entry\">\n        <div class=\"toolbar\"></div>\n        <div>\n            <span class=\"math-entry-input\"></span>\n        </div>\n    </div>\n</div>"})}),define("mathEntryInteraction/imsPciCreator",["lodash","mathEntryInteraction/creator/widget/Widget","tpl!mathEntryInteraction/creator/tpl/markup"],function(e,t,n){"use strict";return{getTypeIdentifier:function getTypeIdentifier(){return"mathEntryInteraction"},getWidget:function getWidget(){return t},getDefaultProperties:function getDefaultProperties(){return{authorizeWhiteSpace:"false",useGapExpression:"false",inResponseState:"false",gapExpression:"",gapStyle:"",focusOnDenominator:!1,tool_frac:"true",tool_sqrt:"true",tool_exp:"true",tool_log:"true",tool_ln:"true",tool_e:"true",tool_infinity:"true",tool_lbrack:"true",tool_rbrack:"true",tool_pi:"true",tool_cos:"true",tool_sin:"true",tool_lte:"true",tool_gte:"true",tool_times:"true",tool_divide:"true",tool_plusminus:"true",tool_angle:"true",tool_minus:"true",tool_plus:"true",tool_equal:"true",tool_lower:"true",tool_greater:"true",tool_subscript:"true",tool_lbrace:"true",tool_rbrace:"true",tool_lparen:"true",tool_rparen:"true",tool_integral:"true",tool_timesdot:"true",tool_triangle:"true",tool_similar:"true",tool_paral:"true",tool_perp:"true",tool_inmem:"true",tool_ninmem:"true",tool_union:"true",tool_intersec:"true",allowNewLine:"false",enableAutoWrap:"false"}},afterCreate:function afterCreate(e){},getMarkupTemplate:function getMarkupTemplate(){return n},getMarkupData:function getMarkupData(e,t){return t.prompt=e.data("prompt"),t}}}),define(["mathEntryInteraction/imsPciCreator"],function(e){return e});