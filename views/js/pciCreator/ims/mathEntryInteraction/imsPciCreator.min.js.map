{"version":3,"sources":["../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/tpl/propertiesForm!tpl","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/tpl/addGapBtn!tpl","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/widget/states/Question.js","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/widget/states/Correct.js","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/tpl/answerForm!tpl","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/tpl/addAnswerOption!tpl","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/widget/states/Map.js","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/widget/states/states.js","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/widget/Widget.js","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/creator/tpl/markup!tpl","../../../qtiItemPci/views/js/pciCreator/ims/mathEntryInteraction/imsPciCreator.js"],"names":["define","hb","template","Handlebars","depth0","helpers","partials","data","program1","program3","this","compilerInfo","merge","stack1","helper","options","buffer","helperMissing","escapeExpression","self","__","hash","call","identifier","serial","authorizeWhiteSpace","inverse","noop","fn","program","focusOnDenominator","useGapExpression","unless","tool_sqrt","tool_frac","tool_exp","tool_subscript","tool_log","tool_ln","tool_e","tool_infinity","roundbkts","curlybkts","squarebkts","tool_integral","tool_angle","tool_triangle","tool_similar","tool_paral","tool_perp","tool_pi","tool_cos","tool_sin","tool_lower","tool_greater","tool_lte","tool_gte","tool_equal","tool_plus","tool_minus","tool_times","tool_timesdot","tool_divide","tool_plusminus","tool_inmem","tool_ninmem","tool_union","tool_intersec","allowNewLine","enableAutoWrap","$","stateFactory","Question","formElement","simpleEditor","containerEditor","formTpl","addGapBtnTpl","toBoolean","value","defaultValue","configChangeCallBack","interaction","name","prop","triggerPci","getProperties","$addGapBtn","MathEntryInteractionStateQuestion","extend","$container","widget","$prompt","find","element","create","change","text","updateMarkup","markup","markupSelector","related","areaBroker","getAreaBroker","createAddGapBtn","addMathFieldListener","destroy","removeAddGapBtn","prototype","initForm","$gapStyleBox","$gapStyleSelector","_widget","$form","response","getResponseDeclaration","html","attr","initWidget","setChangeCallbacks","i","id","show","cardinality","hide","gapStyle","newStyle","select2","width","minimumResultsForSearch","Infinity","val","trigger","onPci","latex","$toolbar","length","after","on","removeMapEntries","off","remove","Correct","setTemplate","changeState","functionType","apply","increaseIndex","index","key","each","correctAnswerEntries","_","Map","answerFormTpl","addAnswerOptionBtn","$responseForm","initResponseChangeEventListener","correctResponses","getExistingCorrectAnswerOptions","initAddAnswerButton","renderForm","newCorrectAnswer","inGapMode","emptyGapFields","gapExpression","gapCount","match","push","join","mapEntries","getMapEntries","keys","activeEditId","getResponse","base","string","removeResponseChangeEventListener","offPci","clearMathFieldLatex","initEditingOptions","$entryConfig","$editButtons","click","e","preventDefault","stopImmediatePropagation","parseInt","currentTarget","split","getGapResponseObject","list","clearMapEntries","forEach","mapKey","removeMapEntry","initDeletingOptions","splice","correctAnswerOptions","removeEditDeleteListeners","append","removeAddButtonListener","destroyForm","saveAnswers","responseDeclaration","filter","indexOf","setMapEntry","CORRECT_ANSWER_VALUE","gapTemplateString","responses","responseGap","replace","toString","registerHelper","factory","states","createBundle","arguments","Widget","MathEntryInteractionWidget","clone","initCreator","$interaction","registerStates","addClass","prompt","markupTpl","getTypeIdentifier","getWidget","getDefaultProperties","tool_lbrack","tool_rbrack","tool_lbrace","tool_rbrace","tool_lparen","tool_rparen","afterCreate","pci","getMarkupTemplate","getMarkupData","defaultData","IMSPCI"],"mappings":"AACAA,OAAA,uDAAA,cAAA,SAAAC,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAC,MAKA,QAAAC,UAAAJ,OAAAG,MAGA,MAAA,oBAGA,QAAAE,UAAAL,OAAAG,MAGA,MAAA,uBAbAG,KAAAC,cAAA,EAAA,YACAN,QAAAK,KAAAE,MAAAP,QAAAF,WAAAE,SAAAE,KAAAA,QACA,IAAAM,QAAAC,OAAAC,QAAAC,OAAA,GAAAC,cAAAZ,QAAAY,cAAAC,iBAAAR,KAAAQ,iBAAAC,KAAAT,IA6PA,OA/OAM,SAAA,6DACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,sBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,sBAAAW,WACA,uKACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;uVAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,kUAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,kUAAAW,WACA;+yBACAD,OAAAT,QAAAkB,YAAAV,OAAAC,OAAAQ,KAAAlB;uDAAAiB,QAAAd,KAAAA,QACAO,OAAAV,QAAAA,OAAAmB,WAAAV,OApBA,kBAoBAC,QAAAA,OAAAQ,KAAAlB,QAAAiB,QAAAd,KAAAA,OAAAO,QACAE,QAAAE,iBAAAL,QACA,oIACAC,OAAAT,QAAAmB,QAAAX,OAAAC,OAAAQ,KAAAlB,QAAAiB,QAAAd,KAAAA,QACAO,OAAAV,QAAAA,OAAAoB,OAAAX,OAxBA,kBAwBAC,QAAAA,OAAAQ,KAAAlB,QAAAiB,QAAAd,KAAAA,OAAAO,QACAE,QAAAE,iBAAAL,QACA,2CACAK,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;mIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,UAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,UAAAW,WACA,gHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAqB,qBAAAJ,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;+HAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,wBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,wBAAAW,WACA,6GACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA0B,oBAAAT,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;+HAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,uBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,uBAAAW,WACA,2GACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA2B,kBAAAV,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;+HAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,2BAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,2BAAAW,WACA,gEACAF,OAAAR,QAAA2B,OAAAV,KAAAlB,OAAAA,QAAAA,OAAA2B,kBAAAV,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAApB,SAAAF,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,sCACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,WAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,WAAAW,WACA,iHACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;2QAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,QAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,QAAAW,WACA,4DACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,SAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,SAAAW,WACA,2DACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;iNAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,QAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,QAAAW,WACA,mFACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,YAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,YAAAW,WACA;2MACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA6B,WAAAZ,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,mJACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,cAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,cAAAW,WACA;gOACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA8B,WAAAb,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,WAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,WAAAW,WACA;yNACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA+B,UAAAd,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,yEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,WAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,WAAAW,WACA;+NACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAgC,gBAAAf,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,yEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,YAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,YAAAW,WACA;2NACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAiC,UAAAhB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,MAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,MAAAW,WACA;8MACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAkC,SAAAjB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,KAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,KAAAW,WACA,mDACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;iMAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,UAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,UAAAW,WACA,mGACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAmC,QAAAlB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA;iMACAH,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAoC,eAAAnB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,2LACAH,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAqC,WAAApB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD;iCAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,oEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,6BAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,6BAAAW,WACA,uHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAsC,WAAArB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,oEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;mIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,wBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,wBAAAW,WACA,wHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAuC,YAAAtB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,oEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;mIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,kBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,kBAAAW,WACA,2HACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAwC,eAAAvB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,yEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;wIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,sBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,sBAAAW,WACA,mDACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,WAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,WAAAW,WACA,uGACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAyC;yDAAAxB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,sEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,QAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,QAAAW,WACA,2HACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAwC,eAAAvB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA;aACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,sBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,sBAAAW,WACA,+HACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA0C,eAAAzB,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,wEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;uIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,WAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,WAAAW,WACA,0HACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA2C,cAAA1B,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,sEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;qIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,UAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,UAAAW,WACA,wHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA4C,YAAA3B,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,wEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;uIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,mBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,mBAAAW,WACA,uHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA6C,WAAA5B,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,wEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;uIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,sBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,sBAAAW,WACA,mDACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,eAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,eAAAW,WACA,oGACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA8C;sDAAA7B,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,uLACAH,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA+C,UAAA9B,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA;WAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,UAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,UAAAW,WACA,sHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAgD,UAAA/B,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,QAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,QAAAW,WACA,mDACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;uMAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,aAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,aAAAW,WACA,uGACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAiD,YAAAhC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,qEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;oIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,aAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,aAAAW,WACA,0HACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAkD,cAAAjC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,qEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;oIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,eAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,eAAAW,WACA,sHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAmD,UAAAlC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,qEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;oIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,sBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,sBAAAW,WACA,sHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAoD,UAAAnC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,qEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;oIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,wBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,wBAAAW,WACA,mDACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,WAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,WAAAW,WACA,uGACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAqD;yDAAApC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,kEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,QAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,QAAAW,WACA,uHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAsD,WAAArC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH;uCACAG,QAAA,kEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,OAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,OAAAW,WACA,wHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAuD,YAAAtC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,kEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;iIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,QAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,QAAAW,WACA,wHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAwD,YAAAvC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,wEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;uIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,QAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,QAAAW,WACA,2HACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAyD,eAAAxC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,kEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;iIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,YAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,YAAAW,WACA,yHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA0D,aAAAzC,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,yEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;wIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,SAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,SAAAW,WACA,4HACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA2D,gBAAA1C,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,uEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;sIAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,aAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,aAAAW,WACA,wHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA4D,YAAA3C,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;+HAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,iBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,iBAAAW,WACA,yHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA6D,aAAA5C,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;+HAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,qBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,qBAAAW,WACA,wHACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA8D,YAAA7C,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;+HAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,YAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,YAAAW,WACA,2HACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAA+D,eAAA9C,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;+HAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,mBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,mBAAAW,WACA,oHACAG,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,oBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,oBAAAW,WACA;uOACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAgE,cAAA/C,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,mBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,mBAAAW,WACA;+OACAF,OAAAR,QAAA,GAAAiB,KAAAlB,OAAAA,QAAAA,OAAAiE,gBAAAhD,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,gEACAE,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,mBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,mBAAAW,WACA;oJChQAf,OAAA,kDAAA,cAAA,SAAAC,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAC,MACAG,KAAAC,cAAA,EAAA,YACAN,QAAAK,KAAAE,MAAAP,QAAAF,WAAAE,SAAAE,KAAAA,QACA,IAAAO,QAAAC,QAAAC,OAAA,GAAAC,cAAAZ,QAAAY,aAMA,OAHAD,SAAA,mEACAE,EAJAR,KAAAQ,mBAIAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,UAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,UAAAW,WACA;kHCQAf,OAAA,uDACA,SACA,OACA,+CACA,6DACA,oDACA,4DACA,+CACA,sDACA,kDACA,SAAAsE,EAAAlD,GAAAmD,aAAAC,SAAAC,YAAAC,aAAAC,gBAAAC,QAAAC,cACA;YAoCA,SAAAC,WAAAC,MAAAC,cACA,WAAA,KAAA,MACAA,cAEA,IAAAD,OAAA,SAAAA,MASA,QAAAE,sBAAAC,YAAAH,MAAAI,MACAD,YAAAE,KAAAD,KAAAJ,OACAG,YAAAG,WAAA,gBAAAH,YAAAI,kBAjDA,GAAAC,YAAAjB,EAAAO,gBAEAW,kCAAAjB,aAAAkB,OAAAjB,SAAA,WACA,GAAAkB,YAAAhF,KAAAiF,OAAAD,WACAE,QAAAF,WAAAG,KAAA,WACAX,YAAAxE,KAAAiF,OAAAG,OAEAnB,iBAAAoB,OAAAH,SACAI,OAAA,SAAAC,MACAf,YAAA3E,KAAA,SAAA0F,MACAf,YAAAgB,gBAEAC,OAAAjB,YAAAiB,OACAC,eAAA,UACAC,QAAAnB,YACAoB,WAAA5F,KAAAiF,OAAAY;yCAGAzB,UAAAI,YAAAE,KAAA,qBAAA,IACA1E,KAAA8F,kBAGA9F,KAAA+F,wBAEA,WACA,GAAAf,YAAAhF,KAAAiF,OAAAD,WACAE,QAAAF,WAAAG,KAAA,UAEAnB,cAAAgC,QAAAhB,YACAf,gBAAA+B,QAAAd,SAEAlF,KAAAiG,mBA8NA,OAzMAnB,mCAAAoB,UAAAC,SAAA,WAEA,GAKAC,cACAC,kBANA5F,KAAAT,KACAsG,QAAAtG,KAAAiF,OACAsB,MAAAD,QAAAC,MACA/B,YAAA8B,QAAAlB,QACAoB,SAAAhC,YAAAiC,wBAKAF,OAAAG,KAAAxC,SACApD,OAAA0F,SAAA1F,OACAD,WAAA2D,YAAAmC,KAAA,sBAEA5F,oBAAAqD,UAAAI,YAAAE,KAAA,wBAAA;0EACArD,iBAAA+C,UAAAI,YAAAE,KAAA,qBAAA,GACAtD,mBAAAgD,UAAAI,YAAAE,KAAA,uBAAA,GAEAlD,UAAA4C,UAAAI,YAAAE,KAAA,cAAA,GACAnD,UAAA6C,UAAAI,YAAAE,KAAA,cAAA,GACAjD,SAAA2C,UAAAI,YAAAE,KAAA,aAAA,GACA/C,SAAAyC,UAAAI,YAAAE,KAAA,aAAA,GACA9C,QAAAwC,UAAAI,YAAAE,KAAA,YAAA,GACA7C,OAAAuC,UAAAI,YAAAE,KAAA,WAAA,GACA5C,cAAAsC,UAAAI,YAAAE,KAAA,kBAAA,GACAzC,WAAAmC,UAAAI,YAAAE,KAAA,gBAAA,IAAAN,UAAAI,YAAAE,KAAA,gBAAA;wGACAlC,QAAA4B,UAAAI,YAAAE,KAAA,YAAA,GACAjC,SAAA2B,UAAAI,YAAAE,KAAA,aAAA,GACAhC,SAAA0B,UAAAI,YAAAE,KAAA,aAAA,GACA7B,SAAAuB,UAAAI,YAAAE,KAAA,aAAA,GACA5B,SAAAsB,UAAAI,YAAAE,KAAA,aAAA,GACAxB,WAAAkB,UAAAI,YAAAE,KAAA,eAAA,GACAtB,YAAAgB,UAAAI,YAAAE,KAAA,gBAAA,GACArB,eAAAe,UAAAI,YAAAE,KAAA,mBAAA,GACA3C,UAAAqC,UAAAI,YAAAE,KAAA,gBAAA,IAAAN,UAAAI,YAAAE,KAAA,gBAAA,GACA1C,UAAAoC,UAAAI,YAAAE,KAAA,gBAAA,IAAAN,UAAAI,YAAAE,KAAA,gBAAA;uGACAvC,WAAAiC,UAAAI,YAAAE,KAAA,eAAA,GACAzB,WAAAmB,UAAAI,YAAAE,KAAA,eAAA,GACA1B,UAAAoB,UAAAI,YAAAE,KAAA,cAAA,GACA3B,WAAAqB,UAAAI,YAAAE,KAAA,eAAA,GACA/B,WAAAyB,UAAAI,YAAAE,KAAA,eAAA,GACA9B,aAAAwB,UAAAI,YAAAE,KAAA,iBAAA,GACAhD,eAAA0C,UAAAI,YAAAE,KAAA,mBAAA,GACAxC,cAAAkC,UAAAI,YAAAE,KAAA,kBAAA,GACAvB,cAAAiB,UAAAI,YAAAE,KAAA,kBAAA,GACAtC,cAAAgC,UAAAI,YAAAE,KAAA,kBAAA;8DACArC,aAAA+B,UAAAI,YAAAE,KAAA,iBAAA,GACApC,WAAA8B,UAAAI,YAAAE,KAAA,eAAA,GACAnC,UAAA6B,UAAAI,YAAAE,KAAA,cAAA,GACApB,WAAAc,UAAAI,YAAAE,KAAA,eAAA,GACAnB,YAAAa,UAAAI,YAAAE,KAAA,gBAAA,GACAlB,WAAAY,UAAAI,YAAAE,KAAA,eAAA,GACAjB,cAAAW,UAAAI,YAAAE,KAAA,kBAAA,GACAhB,aAAAU,UAAAI,YAAAE,KAAA,iBAAA,GACAf,eAAAS,UAAAI,YAAAE,KAAA,mBAAA,MAIAX,YAAA6C,WAAAL,OAGAxC,YAAA8C,mBAAAN,MAAA/B;kDACA3D,WAAA,SAAAiG,EAAAzC,OACAmC,SAAAO,GAAA1C,OACAG,YAAAmC,KAAA,qBAAAtC,QAEAhD,iBAAA,SAAAyF,EAAAzC,OACAD,UAAAC,OAAA,IACA5D,KAAAqF,kBACAM,aAAAY,OAEAR,SAAAS,YAAA,aAEAH,EAAApC,KAAA,gBAAA,IACAjE,KAAAwF,kBACAG,aAAAc,OACAV,SAAAS,YAAA,UAIAT,SAAAG,KAAA,cAAA,UACApC,qBAAAuC,EAAAzC,MAAA,qBAEA8C,SAAA,SAAAL,EAAAM,UAEAN,EAAApC,KAAA,WAAA0C,UAEA7C,qBAAAuC,EAAAM,SAAA,aAEArG,oBAAAwD,qBACAnD,mBAAAmD,qBAEA/C,UAAA+C;+BACAhD,UAAAgD,qBACA9C,SAAA8C,qBACA5C,SAAA4C,qBACA3C,QAAA2C,qBACA1C,OAAA0C,qBACAzC,cAAAyC,qBACA/B,QAAA+B,qBACA9B,SAAA8B,qBACA7B,SAAA6B,qBACA1B,SAAA0B,qBACAzB,SAAAyB,qBACArB,WAAAqB,qBACAnB,YAAAmB,qBACAlB,eAAAkB,qBACApC,WAAAoC,qBACAtB,WAAAsB,qBACAvB,UAAAuB,qBACAxB,WAAAwB,qBACA5B,WAAA4B,qBACA3B,aAAA2B,qBACA7C,eAAA6C;oCACArC,cAAAqC,qBACApB,cAAAoB,qBACAnC,cAAAmC,qBACAlC,aAAAkC,qBACAjC,WAAAiC,qBACAhC,UAAAgC,qBACAjB,WAAAiB,qBACAhB,YAAAgB,qBACAf,WAAAe,qBACAd,cAAAc,qBAEAtC,WAAA,SAAA6E,EAAAzC,OACAyC,EAAApC,KAAA,cAAAL,OACAyC,EAAApC,KAAA,cAAAL,OACAyC,EAAAnC,WAAA,gBAAAmC,EAAAlC,mBAEA7C,UAAA,SAAA+E,EAAAzC,OACAyC,EAAApC,KAAA,cAAAL,OACAyC,EAAApC,KAAA,cAAAL,OACAyC,EAAAnC,WAAA,gBAAAmC,EAAAlC,mBAEA5C,UAAA,SAAA8E,EAAAzC;4BACAyC,EAAApC,KAAA,cAAAL,OACAyC,EAAApC,KAAA,cAAAL,OACAyC,EAAAnC,WAAA,gBAAAmC,EAAAlC,mBAGAlB,aAAAa,qBACAZ,eAAAY,uBAIA6B,aAAAG,MAAApB,KAAA,sBACAkB,kBAAAD,aAAAjB,KAAA,wBAEAkB,kBAAAgB,SACAC,MAAA,OACAC,wBAAAC,EAAAA,IAEAC,IAAAjD,YAAAE,KAAA,aACAgD,QAAA,WAOA5C,kCAAAoB,UAAAH,qBAAA,WACA,GAAAO,SAAAtG,KAAAiF,OACAT,YAAA8B,QAAAlB,OAEAZ,aAAAmD,MAAA,iBAAA,SAAAC,OACAxD,UAAAI,YAAAE,KAAA,qBAAA,GACAF,YAAAE,KAAA,gBAAAkD,OAEApD,YAAAE,KAAA,gBAAA;mIAQAI,kCAAAoB,UAAAJ,gBAAA,WACA,GAAAQ,SAAAtG,KAAAiF,OACAD,WAAAsB,QAAAtB,WACA6C,SAAA7C,WAAAG,KAAA,YACAX,YAAA8B,QAAAlB,OAEAyC,UAAAC,SACAD,SAAAE,MAAAlD,YACAA,WAAAmD,GAAA,QAAA,WACAxD,YAAAiC,yBAAAwB,mBACAzD,YAAAG,WAAA,cAQAG,kCAAAoB,UAAAD,gBAAA,WACApB,WAAAqD,IAAA,SACArD,WAAAsD,UAGArD,oCC3QAxF,OAAA,sDACA,+CACA,gDACA,SAAAuE,aAAAuE;2LACA,YAYA,OAVAvE,cAAAwB,OACA+C,QACA,WACApI,KAAAiF,OAAAG,QAAAqB,yBAAA4B,YAAA,gBACArI,KAAAiF,OAAAqD,YAAA,QAEA,gBC5BAhJ,OAAA,mDAAA,cAAA,SAAAC,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAC,MAKA,QAAAC,UAAAJ,OAAAG,MAEA,GAAAM,QAAAC,OAAAC,QAAAC,OAAA,EAgBA,OAfAA,SAAA,8EACAE,uBAAAd,UAAA6I,aAAA7I,OAAA8I,MAAA9I,QAAAA,QACA,gCACAc,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB;gQAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,wBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,wBAAAW,WACA,IACAG,kBAAAJ,OAAAT,QAAA8I,eAAA/I,QAAAA,OAAA+I,cAAApI,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,MAAAG,OAAA,IAAAA,KAAAA,KAAAA,KAAA6I,MAAArI,SAAAE,cAAAK,KAAAlB,OAAA,gBAAA,MAAAG,OAAA,IAAAA,KAAAA,KAAAA,KAAA6I,MAAArI,WACA,wEACAG,kBAAAL,OAAA,MAAAN,OAAA,IAAAA,KAAAA,KAAAA,KAAA6I;iTAAAvI,UAAAoI,aAAApI,OAAAqI,MAAA9I,QAAAS,SACA,kGACAK,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,kBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,kBAAAW,WACA,+IACAG,kBAAAL,OAAA,MAAAN,OAAA,IAAAA,KAAAA,KAAAA,KAAA6I;qUAAAvI,UAAAoI,aAAApI,OAAAqI,MAAA9I,QAAAS,SACA,iGACAK,kBAAAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,oBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,oBAAAW,WACA;iOArBAL,KAAAC,cAAA,EAAA,YACAN,QAAAK,KAAAE,MAAAP,QAAAF,WAAAE,SAAAE,KAAAA,QACA,IAAAM,QAAAG,OAAA,GAAAiI,aAAA,WAAA/H,iBAAAR,KAAAQ,iBAAAD,cAAAZ,QAAAY,cAAAE,KAAAT,IA6BA,OANAM,SAAA,sKACAE,kBAAAL,OAAA,MAAAN,OAAA,IAAAA,KAAAA,KAAAA,KAAA8I;yPAAAxI,UAAAoI,aAAApI,OAAAqI,MAAA9I,QAAAS,SACA,kGACAA,OAAAR,QAAAiJ,KAAAhI,KAAAlB,OAAAA,QAAAA,OAAAmJ,sBAAAlI,QAAAK,QAAAP,KAAAQ,KAAAC,GAAAT,KAAAU,QAAA,EAAArB,SAAAD,MAAAA,KAAAA,QACAM,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA,+EChCAhB,OAAA,wDAAA,cAAA,SAAAC;0FACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAC,MACAG,KAAAC,cAAA,EAAA,YACAN,QAAAK,KAAAE,MAAAP,QAAAF,WAAAE,SAAAE,KAAAA,QACA,IAAAO,QAAAC,QAAAC,OAAA,GAAAC,cAAAZ,QAAAY,aAMA,OAHAD,SAAA,uGACAE,EAJAR,KAAAQ,mBAIAJ,OAAAT,QAAAe,IAAAhB,QAAAA,OAAAgB,GAAAL,SAAAM,QAAAd,KAAAA,MAAAO,OAAAA,OAAAQ,KAAAlB,OAAA,uBAAAW,SAAAE,cAAAK,KAAAlB,OAAA,KAAA,uBAAAW,WACA;KCOAf,OAAA,kDACA,aACA,OACA,SACA,SACA,+CACA,2CACA,oDACA,kDACA,wDACA,SACAC,GACAmB,GACAoI,EACAlF,EACAC,aACAkF,IACAhF,YACAiF,cACAC,oBAEA,YAwBA,SAAA9C,UAAA1F,MACA,GAAA+D,aAAA/D,KAAAwE,OAAAG,QAEA8D,eADA1E,YAAAiC,yBACAhG,KAAAwE,OAAAiE,cAEAC,iCAAA1I,MACAA,KAAA2I,iBAAAC,gCAAA5I;4DACAyI,cAAAxC,KAAAuC,sBACAK,oBAAA7I,MACA8I,WAAA9I,KAAAA,KAAA2I,kBAGA,QAAAE,qBAAA7I,MACAA,KAAAwE,OAAAG,OACA3E,MAAAwE,OAAAiE,cACA/D,KAAAvB,EAAA,uBAEAoE,GAAA,QAAA,WACA,GAAAwB,iBAEA,IAAAC,UAAAhJ,MAAA,CACAiJ,eAAAjJ,KACA,IAAAkJ,eAAAlJ,KAAAwE,OAAAG,QAAAV,KAAA,iBACAkF,UAAAD,cAAAE,MAAA,kBAAA/B,MACA,IAAA8B,SAAA,EAAA,CACAJ,mBACA,KAAA,GAAA1C,GAAA,EAAAA,EAAA8C,SAAA9C,IACA0C,iBAAAM,KAAA,GAGAN,kBAAAA,iBAAAO,KAAA,SAEAP,kBAAA,OAGAA,kBAAA,EAGA/I,MAAA2I,iBAAAU,KAAAN;8CACAD,WAAA9I,KAAAA,KAAA2I,oBAIA,QAAAC,iCAAA5I,MACA,GAAAuJ,YAAAvJ,KAAAwE,OAAAG,QAAAqB,yBAAAwD,eACA,OAAAnB,GAAAoB,KAAAF,gBAGA,QAAAb,iCAAA1I,MACA,GAAA+D,aAAA/D,KAAAwE,OAAAG,OACA3E,MAAAwE,OAAAG,QAAAuC,MAAA,iBAAA,SAAAC,OACA,GAAA6B,UAAAhJ,OAAA,MAAAA,KAAA0J,cAEA,GAAAV,UAAAhJ,OAAA,MAAAA,KAAA0J,aAAA,CACA,GAAA3D,UAAAhC,YAAA4F,aACA3J,MAAA2I,iBAAA3I,KAAA0J,cAAA3D,SAAA6D,KAAAC,YAHA7J,MAAA2I,iBAAA3I,KAAA0J,cAAAvC,QAQA,QAAA2C,mCAAA9J;iDACAA,KAAAwE,OAAAG,QAAAoF,OAAA,kBAGA,QAAAC,qBAAAhK,MACA,GAAA+D,aAAA/D,KAAAwE,OAAAG,OACAqE,WAAAhJ,OACA+D,YAAAG,WAAA,cAAA,KAIA,QAAA+F,oBAAAjK,MACA,GAAA+D,aAAA/D,KAAAwE,OAAAG,QACA8D,cAAAzI,KAAAwE,OAAAiE,cACAyB,aAAAzB,cAAA/D,KAAA,iBACAyF,aAAAD,aAAAxF,KAAA,eAEAsE,WAAAhJ,MACAmK,aAAAC,MAAA,SAAAC,GACAA,EAAAC,iBACAD,EAAAE,4BAEA,KAAAxG,YAAAE,KAAA,qBACAF,YAAAE,KAAA,mBAAA,GACAF,YAAAG,WAAA,gBAAAH,YAAAI;sEAGAnE,KAAA0J,aAAAc,SAAAH,EAAAI,cAAAnE,GAAAoE,MAAA,KAAA,GACA,IAAA3E,UAAA4E,qBAAA3K,KAAA2I,iBAAA3I,KAAA0J,cACA3F,aAAAG,WAAA,iBAAA6B,aAGAoE,aAAAC,MAAA,SAAAC,GACAA,EAAAC,iBACAD,EAAAE,2BACAvK,KAAA0J,aAAAc,SAAAH,EAAAI,cAAAnE,GAAAoE,MAAA,KAAA,IACA3G,YAAAG,WAAA,cAAAlE,KAAA2I,iBAAA3I,KAAA0J,kBAMA,QAAAiB,sBAAA5E,UACA,OACA6E,MACAf,OAAA9D,SAAA2E,MAAA,OAMA,QAAAG,iBAAA7K,MACA,GAAA+D,aAAA/D,KAAAwE,OAAAG,QACAoB,SAAAhC,YAAAiC,yBACAuD,WAAAxD,SAAAyD;qHACAnB,GAAAoB,KAAAF,YAAAuB,QAAA,SAAAC,QACAhF,SAAAiF,eAAAD,QAAA,KAIA,QAAAE,qBAAAjL,MACAA,KAAAwE,OAAAG,OACA3E,MAAAwE,OAAAiE,cACA/D,KAAA,iBACAA,KAAA,kBAEA0F,MAAA,SAAAC,GACAA,EAAAC,iBACAD,EAAAE,0BACA,IAAAjE,IAAAkE,SAAAH,EAAAI,cAAAnE,GAAAoE,MAAA,KAAA,GAEA1B,WAAAhJ,QACAA,KAAA0J,aAAApD,GACA2C,eAAAjJ,OAIAA,KAAA0J,aAAA,KAEA1J,KAAA2I,iBAAAuC,OAAA5E,GAAA,GACAwC,WAAA9I,KAAAA,KAAA2I,oBAIA,QAAAG,YAAA9I,KAAAmL,sBACAC,0BAAApL;+BACA,IAAAyI,eAAAzI,KAAAwE,OAAAiE,aACAA,eAAA/D,KAAA,yBAAAgD,SACAe,cAAA4C,OAAA9C,eAAAH,qBAAA+C,wBACAF,oBAAAjL,MACAiK,mBAAAjK,MAMA,QAAAoL,2BAAApL,MACA,GAAAkK,cAAAlK,KAAAwE,OAAAiE,cAAA/D,KAAA,gBACAwF,cAAAxF,KAAA,gBAAA+C,IAAA,SACAyC,aAAAxF,KAAA,kBAAA+C,IAAA,SAGA,QAAA6D,yBAAAtL,MACAA,KAAAwE,OAAAiE,cACA/D,KAAAvB,EAAA,uBAAAsE,IAAA,SAGA,QAAA8D,aAAAvL,MACAA,KAAAwE,OAAAiE,cAAA/D,KAAA,yBAAAgD,SAGA,QAAA8D,aAAAxL;2BACA,GAAA+D,aAAA/D,KAAAwE,OAAAG,QACA8G,oBAAA1H,YAAAiC,wBACA6E,iBAAA7K,MACAgJ,UAAAhJ,QACAA,KAAA2I,iBAAA3I,KAAA2I,iBAAA+C,OAAA,SAAA3F,UACA,OAAA,IAAAA,SAAA2E,MAAA,KAAAiB,QAAA,OAIA3L,KAAA2I,iBAAAmC,QAAA,SAAA/E,UACA0F,oBAAAG,YAAA7F,SAAA8F,sBAAA,KAOA,QAAA5C,gBAAAjJ,MACA,GAAA+D,aAAA/D,KAAAwE,OAAAG,OAEA,IAAAqE,UAAAhJ,MAAA,CACA,GAAA8L,mBAAA/H,YAAAE,KAAA,gBACA,IAAA,MAAAjE,KAAA0J,aAAA,CACA,GAAAqC,WAAA/L,KAAA2I,iBAAA3I,KAAA0J,cAAAgB,MAAA,IACA1K,MAAA0J,aAAA,KAEAqC,UAAAjB,QAAA,SAAAkB;wCACAF,kBAAAA,kBAAAG,QAAAD,YAAAE,WAAA,cAEAnI,YAAAE,KAAA,gBAAA6H,mBAGA/H,YAAAE,KAAA,mBAAA,GACAF,YAAAG,WAAA,gBAAAH,YAAAI,mBAIA,QAAA6E,WAAAhJ,MACA,QAAAA,KAAAwE,OAAAG,QAAAV,KAAA,oBAzOA,GAAA4H,sBAAA,CA4OA,OA3OA/M,IAAAqN,eAAA,gBAAA,SAAAvI,MAAAhE,SACA,MAAA4K,UAAA5G,OAAA,IAGAR,aAAAwB,OACA0D,IACA,WACA/I,KAAAmK,aAAA,KACAnK,KAAAoJ,oBACAjD,SAAAnG,OAEA,WACA0J,eAAA1J,MACAiM,YAAAjM,MACAuK,kCAAAvK;wCACAyK,oBAAAzK,MACA6L,0BAAA7L,MACA+L,wBAAA/L,MACAgM,YAAAhM,UCxCAV,OAAA,qDACA,+CACA,6EACA,sDACA,qDACA,kDACA,SAAAuN,QAAAC,QACA,YAEA,OAAAD,SAAAE,aAAAD,OAAAE,aCTA1N,OAAA,8CACA,sEACA,qDACA,SAAA2N,OAAAH;wMACA,YAEA,IAAAI,4BAAAD,OAAAE,OAeA,OAbAD,4BAAAE,YAAA,WACA,GAAAC,aAEArN,MAAAsN,eAAAR,QAEAG,OAAAG,YAAAxM,KAAAZ,MAEAqN,aAAArN,KAAAgF,WAAAG,KAAA,yBACAkI,aAAAvF,QACAuF,aAAAE,SAAA,4BAIAL,6BCtCA5N,OAAA,+CAAA,cAAA,SAAAC,IACA,MAAAA,IAAAC,SAAA,SAAAC,WAAAC,OAAAC,QAAAC,SAAAC;qEACAG,KAAAC,cAAA,EAAA,YACAN,QAAAK,KAAAE,MAAAP,QAAAF,WAAAE,SAAAE,KAAAA,QACA,IAAAM,QAAAC,OAAAE,OAAA,EAQA,OALAA,SAAA,kEACAF,OAAAT,QAAA6N,QAAArN,OAAAC,OAAAQ,KAAAlB,QAAAiB,QAAAd,KAAAA,QACAO,OAAAV,QAAAA,OAAA8N,OAAArN,OALA,kBAKAC,QAAAA,OAAAQ,KAAAlB,QAAAiB,QAAAd,KAAAA,OAAAO,SACAD,QAAA,IAAAA,UAAAG,QAAAH,QACAG,QAAA;6MCSAhB,OAAA,sCACA,SACA,6CACA,+CACA,SAAAwJ,EAAAmE,OAAAQ,WACA,YA4GA,QAlGAC,kBAAA,WACA,MATA,wBAiBAC,UAAA,WACA,MAAAV,SAQAW,qBAAA,WACA,OACA7M,oBAAA,QACAM,iBAAA,QACAsI,cAAA,GACAxC,SAAA,GACA/F,oBAAA,EAEAI,UAAA,OACAD,UAAA;iBACAE,SAAA,OACAE,SAAA,OACAC,QAAA,OACAC,OAAA,OACAC,cAAA,OACA+L,YAAA,OACAC,YAAA,OACAtL,QAAA,OACAC,SAAA,OACAC,SAAA,OACAG,SAAA,OACAC,SAAA,OACAI,WAAA,OACAE,YAAA,OACAC,eAAA,OACAlB,WAAA,OACAc,WAAA,OACAD,UAAA,OACAD,WAAA,OACAJ,WAAA,OACAC,aAAA,OACAlB,eAAA,OACAqM,YAAA,OACAC,YAAA,OACAC,YAAA,OACAC,YAAA,OACAhM,cAAA,OACAiB,cAAA,OACAf,cAAA,OACAC,aAAA,OACAC,WAAA,OACAC,UAAA,OACAe,WAAA,OACAC,YAAA,OACAC,WAAA,OACAC,cAAA;qBACAC,aAAA,QACAC,eAAA,UASAwK,YAAA,SAAAC,OAQAC,kBAAA,WACA,MAAAZ,YAOAa,cAAA,SAAAF,IAAAG,aAEA,MADAA,aAAAf,OAAAY,IAAAvO,KAAA,UACA0O,gBASAjP,QAAA,sCAAA,SAAAkP,QAAA,MAAAA","file":"imsPciCreator.min.js","sourcesContent":["\ndefine('tpl!mathEntryInteraction/creator/tpl/propertiesForm', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \"checked=\\\"checked\\\"\";\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  return \"style=\\\"display:none\\\"\";\n  }\n\n  buffer += \"<div class=\\\"panel\\\">\\r\\n    <label for=\\\"\\\" class=\\\"has-icon\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Response identifier\", options) : helperMissing.call(depth0, \"__\", \"Response identifier\", options)))\n    + \"</label>\\r\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content:first\\\" data-tooltip-theme=\\\"info\\\"></span>\\r\\n    <div class=\\\"tooltip-content\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options)))\n    + \"</div>\\r\\n\\r\\n    <input type=\\\"text\\\"\\r\\n           name=\\\"identifier\\\"\\r\\n           value=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\\r\\n           placeholder=\\\"e.g. RESPONSE\\\"\\r\\n           data-validate=\\\"$notEmpty; $qtiIdentifier; $availableIdentifier(serial=\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\">\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n\\r\\n<h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Options\", options) : helperMissing.call(depth0, \"__\", \"Options\", options)))\n    + \"</h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"authorizeWhiteSpace\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.authorizeWhiteSpace), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"authorize white space\", options) : helperMissing.call(depth0, \"__\", \"authorize white space\", options)))\n    + \"\\r\\n    </label>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"focusOnDenominator\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.focusOnDenominator), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"focus on denominator\", options) : helperMissing.call(depth0, \"__\", \"focus on denominator\", options)))\n    + \"\\r\\n    </label>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"useGapExpression\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.useGapExpression), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"use expression with gaps\", options) : helperMissing.call(depth0, \"__\", \"use expression with gaps\", options)))\n    + \"\\r\\n    </label>\\r\\n    <div class=\\\"panel mathgap-style-box\\\" \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.useGapExpression), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\r\\n        <label for=\\\"gapStyle\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Gap size\", options) : helperMissing.call(depth0, \"__\", \"Gap size\", options)))\n    + \"</label>\\r\\n        <select name=\\\"gapStyle\\\" data-mathgap-style>\\r\\n            <option value=\\\"math-gap-small\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Small\", options) : helperMissing.call(depth0, \"__\", \"Small\", options)))\n    + \"</option>\\r\\n            <option value=\\\"math-gap-medium\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Medium\", options) : helperMissing.call(depth0, \"__\", \"Medium\", options)))\n    + \"</option>\\r\\n            <option value=\\\"math-gap-large\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Large\", options) : helperMissing.call(depth0, \"__\", \"Large\", options)))\n    + \"</option>\\r\\n        </select>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n\\r\\n<h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Functions\", options) : helperMissing.call(depth0, \"__\", \"Functions\", options)))\n    + \"</h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_sqrt\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_sqrt), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &radic;<span style=\\\"text-decoration:overline; font-size: 10px\\\">&nbsp;&nbsp;</span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"square root\", options) : helperMissing.call(depth0, \"__\", \"square root\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_frac\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_frac), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"fraction\", options) : helperMissing.call(depth0, \"__\", \"fraction\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_exp\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_exp), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        x&#8319; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"exponent\", options) : helperMissing.call(depth0, \"__\", \"exponent\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_subscript\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_subscript), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        x&#8336; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"subscript\", options) : helperMissing.call(depth0, \"__\", \"subscript\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_log\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_log), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"log\", options) : helperMissing.call(depth0, \"__\", \"log\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_ln\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_ln), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"ln\", options) : helperMissing.call(depth0, \"__\", \"ln\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n<h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Symbols\", options) : helperMissing.call(depth0, \"__\", \"Symbols\", options)))\n    + \"</h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_e\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_e), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        e\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_infinity\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_infinity), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &#8734;\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"roundbkts\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.roundbkts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        ( ) \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"parentheses/round brackets\", options) : helperMissing.call(depth0, \"__\", \"parentheses/round brackets\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"curlybkts\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.curlybkts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        { } \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"braces/curly brackets\", options) : helperMissing.call(depth0, \"__\", \"braces/curly brackets\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"squarebkts\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.squarebkts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        [ ] \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"square brackets\", options) : helperMissing.call(depth0, \"__\", \"square brackets\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_integral\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_integral), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &#x222b; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Indefinite integral\", options) : helperMissing.call(depth0, \"__\", \"Indefinite integral\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n<h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Geometry\", options) : helperMissing.call(depth0, \"__\", \"Geometry\", options)))\n    + \"</h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_angle\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_angle), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &ang; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"angle\", options) : helperMissing.call(depth0, \"__\", \"angle\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_integral\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_integral), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Indefinite integral\", options) : helperMissing.call(depth0, \"__\", \"Indefinite integral\", options)))\n    + \"\\r\\n        </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_triangle\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_triangle), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &#9651; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"triangle\", options) : helperMissing.call(depth0, \"__\", \"triangle\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_similar\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_similar), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &sim; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"similar\", options) : helperMissing.call(depth0, \"__\", \"similar\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_paral\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_paral), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &#8741; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"is parallel with\", options) : helperMissing.call(depth0, \"__\", \"is parallel with\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_perp\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_perp), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &#8869; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"is perpendicular to\", options) : helperMissing.call(depth0, \"__\", \"is perpendicular to\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n<h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Trigonometry\", options) : helperMissing.call(depth0, \"__\", \"Trigonometry\", options)))\n    + \"</h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_pi\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_pi), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &pi;\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_cos\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_cos), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"cosinus\", options) : helperMissing.call(depth0, \"__\", \"cosinus\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_sin\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_sin), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"sinus\", options) : helperMissing.call(depth0, \"__\", \"sinus\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n<h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Comparison\", options) : helperMissing.call(depth0, \"__\", \"Comparison\", options)))\n    + \"</h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_lower\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_lower), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &lt; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"lower than\", options) : helperMissing.call(depth0, \"__\", \"lower than\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_greater\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_greater), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &gt; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"greater than\", options) : helperMissing.call(depth0, \"__\", \"greater than\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_lte\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_lte), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &le; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"lower than or equal\", options) : helperMissing.call(depth0, \"__\", \"lower than or equal\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_gte\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_gte), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &ge; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"greater than or equal\", options) : helperMissing.call(depth0, \"__\", \"greater than or equal\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n<h3>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Operands\", options) : helperMissing.call(depth0, \"__\", \"Operands\", options)))\n    + \"</h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_equal\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_equal), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        = \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"equal\", options) : helperMissing.call(depth0, \"__\", \"equal\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_plus\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_plus), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        + \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"plus\", options) : helperMissing.call(depth0, \"__\", \"plus\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_minus\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_minus), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        – \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"minus\", options) : helperMissing.call(depth0, \"__\", \"minus\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_times\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_times), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &times; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"times\", options) : helperMissing.call(depth0, \"__\", \"times\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_timesdot\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_timesdot), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        · \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"times dot\", options) : helperMissing.call(depth0, \"__\", \"times dot\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_divide\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_divide), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &divide; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"divide\", options) : helperMissing.call(depth0, \"__\", \"divide\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_plusminus\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_plusminus), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        &#177; \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Plus/minus\", options) : helperMissing.call(depth0, \"__\", \"Plus/minus\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_inmem\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_inmem), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"is a member of\", options) : helperMissing.call(depth0, \"__\", \"is a member of\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_ninmem\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_ninmem), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"is not a member of\", options) : helperMissing.call(depth0, \"__\", \"is not a member of\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_union\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_union), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"set union\", options) : helperMissing.call(depth0, \"__\", \"set union\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"tool_intersec\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.tool_intersec), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"set intersection\", options) : helperMissing.call(depth0, \"__\", \"set intersection\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n\\r\\n<hr />\\r\\n\\r\\n<h3 class=\\\"txt-error\\\"><strong><span class=\\\"icon-warning\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Experimental only\", options) : helperMissing.call(depth0, \"__\", \"Experimental only\", options)))\n    + \"</strong></h3>\\r\\n\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"allowNewLine\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowNewLine), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"allow line break\", options) : helperMissing.call(depth0, \"__\", \"allow line break\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\\r\\n<div>\\r\\n    <label class=\\\"panel\\\">\\r\\n        <input name=\\\"enableAutoWrap\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.enableAutoWrap), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\r\\n        <span class=\\\"icon-checkbox\\\"></span>\\r\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"enable auto wrap\", options) : helperMissing.call(depth0, \"__\", \"enable auto wrap\", options)))\n    + \"\\r\\n    </label>\\r\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!mathEntryInteraction/creator/tpl/addGapBtn', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<div class=\\\"add-option\\\">\\r\\n    <span class=\\\"icon-add\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add gap\", options) : helperMissing.call(depth0, \"__\", \"Add gap\", options)))\n    + \"\\r\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016-2017 (original work) Open Assessment Technologies SA;\r\n */\r\n\r\ndefine('mathEntryInteraction/creator/widget/states/Question',[\r\n    'jquery',\r\n    'i18n',\r\n    'taoQtiItem/qtiCreator/widgets/states/factory',\r\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Question',\r\n    'taoQtiItem/qtiCreator/widgets/helpers/formElement',\r\n    'taoQtiItem/qtiCreator/editor/simpleContentEditableElement',\r\n    'taoQtiItem/qtiCreator/editor/containerEditor',\r\n    'tpl!mathEntryInteraction/creator/tpl/propertiesForm',\r\n    'tpl!mathEntryInteraction/creator/tpl/addGapBtn'\r\n], function($, __, stateFactory, Question, formElement, simpleEditor, containerEditor, formTpl, addGapBtnTpl){\r\n    'use strict';\r\n\r\n    var $addGapBtn = $(addGapBtnTpl());\r\n\r\n    var MathEntryInteractionStateQuestion = stateFactory.extend(Question, function create(){\r\n        var $container = this.widget.$container,\r\n            $prompt = $container.find('.prompt'),\r\n            interaction = this.widget.element;\r\n\r\n        containerEditor.create($prompt, {\r\n            change : function(text){\r\n                interaction.data('prompt', text);\r\n                interaction.updateMarkup();\r\n            },\r\n            markup : interaction.markup,\r\n            markupSelector : '.prompt',\r\n            related : interaction,\r\n            areaBroker: this.widget.getAreaBroker()\r\n        });\r\n\r\n        if (toBoolean(interaction.prop('useGapExpression'), false)) {\r\n            this.createAddGapBtn();\r\n        }\r\n\r\n        this.addMathFieldListener();\r\n\r\n    }, function exit(){\r\n        var $container = this.widget.$container,\r\n            $prompt = $container.find('.prompt');\r\n\r\n        simpleEditor.destroy($container);\r\n        containerEditor.destroy($prompt);\r\n\r\n        this.removeAddGapBtn();\r\n    });\r\n\r\n    function toBoolean(value, defaultValue) {\r\n        if (typeof(value) === \"undefined\") {\r\n            return defaultValue;\r\n        } else {\r\n            return (value === true || value === \"true\");\r\n        }\r\n    }\r\n    /**\r\n     * Callback for configuration change\r\n     * @param {Object} interaction - the current interaction\r\n     * @param {String} value - new value of the changed property\r\n     * @param {String} name - changed property\r\n     */\r\n    function configChangeCallBack(interaction, value, name) {\r\n        interaction.prop(name, value);\r\n        interaction.triggerPci('configChange', [interaction.getProperties()]);\r\n    }\r\n\r\n    MathEntryInteractionStateQuestion.prototype.initForm = function initForm(){\r\n\r\n        var self = this,\r\n            _widget = this.widget,\r\n            $form = _widget.$form,\r\n            interaction = _widget.element,\r\n            response = interaction.getResponseDeclaration(),\r\n            $gapStyleBox,\r\n            $gapStyleSelector;\r\n\r\n        //render the form using the form template\r\n        $form.html(formTpl({\r\n            serial : response.serial,\r\n            identifier : interaction.attr('responseIdentifier'),\r\n\r\n            authorizeWhiteSpace: toBoolean(interaction.prop('authorizeWhiteSpace'), false),\r\n            useGapExpression: toBoolean(interaction.prop('useGapExpression'), false),\r\n            focusOnDenominator: toBoolean(interaction.prop('focusOnDenominator'), false),\r\n\r\n            tool_frac:      toBoolean(interaction.prop('tool_frac'),    true),\r\n            tool_sqrt:      toBoolean(interaction.prop('tool_sqrt'),    true),\r\n            tool_exp:       toBoolean(interaction.prop('tool_exp'),     true),\r\n            tool_log:       toBoolean(interaction.prop('tool_log'),     true),\r\n            tool_ln:        toBoolean(interaction.prop('tool_ln'),      true),\r\n            tool_e:         toBoolean(interaction.prop('tool_e'),       true),\r\n            tool_infinity:  toBoolean(interaction.prop('tool_infinity'),true),\r\n            squarebkts:     toBoolean(interaction.prop('tool_rbrack'),  true) && toBoolean(interaction.prop('tool_lbrack'), true),\r\n            tool_pi:        toBoolean(interaction.prop('tool_pi'),      true),\r\n            tool_cos:       toBoolean(interaction.prop('tool_cos'),     true),\r\n            tool_sin:       toBoolean(interaction.prop('tool_sin'),     true),\r\n            tool_lte:       toBoolean(interaction.prop('tool_lte'),     true),\r\n            tool_gte:       toBoolean(interaction.prop('tool_gte'),     true),\r\n            tool_times:     toBoolean(interaction.prop('tool_times'),   true),\r\n            tool_divide:    toBoolean(interaction.prop('tool_divide'),  true),\r\n            tool_plusminus: toBoolean(interaction.prop('tool_plusminus'),true),\r\n            roundbkts:      toBoolean(interaction.prop('tool_rparen'),  true) && toBoolean(interaction.prop('tool_lparen'), true),\r\n            curlybkts:      toBoolean(interaction.prop('tool_rbrace'),  true) && toBoolean(interaction.prop('tool_lbrace'), true),\r\n            tool_angle:     toBoolean(interaction.prop('tool_angle'),   true),\r\n            tool_minus:     toBoolean(interaction.prop('tool_minus'),   true),\r\n            tool_plus:      toBoolean(interaction.prop('tool_plus'),    true),\r\n            tool_equal:     toBoolean(interaction.prop('tool_equal'),   true),\r\n            tool_lower:     toBoolean(interaction.prop('tool_lower'),   true),\r\n            tool_greater:   toBoolean(interaction.prop('tool_greater'), true),\r\n            tool_subscript: toBoolean(interaction.prop('tool_subscript'),true),\r\n            tool_integral:  toBoolean(interaction.prop('tool_integral'),true),\r\n            tool_timesdot:  toBoolean(interaction.prop('tool_timesdot'),true),\r\n            tool_triangle:  toBoolean(interaction.prop('tool_triangle'),true),\r\n            tool_similar:   toBoolean(interaction.prop('tool_similar'), true),\r\n            tool_paral:     toBoolean(interaction.prop('tool_paral'),   true),\r\n            tool_perp:      toBoolean(interaction.prop('tool_perp'),    true),\r\n            tool_inmem:     toBoolean(interaction.prop('tool_inmem'),   true),\r\n            tool_ninmem:    toBoolean(interaction.prop('tool_ninmem'),  true),\r\n            tool_union:     toBoolean(interaction.prop('tool_union'),   true),\r\n            tool_intersec:  toBoolean(interaction.prop('tool_intersec'),true),\r\n            allowNewLine:   toBoolean(interaction.prop('allowNewLine'), false),\r\n            enableAutoWrap: toBoolean(interaction.prop('enableAutoWrap'), false)\r\n        }));\r\n\r\n        //init form javascript\r\n        formElement.initWidget($form);\r\n\r\n            //init data change callbacks\r\n            formElement.setChangeCallbacks($form, interaction, {\r\n                identifier: function(i, value){\r\n                response.id(value);\r\n                interaction.attr('responseIdentifier', value);\r\n            },\r\n            useGapExpression: function gapChangeCallback(i, value) {\r\n                if (toBoolean(value, false)) {\r\n                    self.createAddGapBtn();\r\n                    $gapStyleBox.show();\r\n                    // response.attr('cardinality', 'multiple');\r\n                    response.cardinality = 'multiple';\r\n                } else {\r\n                    i.prop('gapExpression', '');\r\n                    self.removeAddGapBtn();\r\n                    $gapStyleBox.hide();\r\n                    response.cardinality = 'single';\r\n                    // response.attr('cardinality', 'single');\r\n                }\r\n\r\n                response.attr('cardinality', 'single');\r\n                configChangeCallBack(i, value, 'useGapExpression');\r\n            },\r\n            gapStyle: function gapStyleChangeCallback(i, newStyle) {\r\n\r\n                i.prop('gapStyle', newStyle);\r\n\r\n                configChangeCallBack(i, newStyle, 'gapStyle');\r\n            },\r\n            authorizeWhiteSpace: configChangeCallBack,\r\n            focusOnDenominator: configChangeCallBack,\r\n\r\n            tool_frac:      configChangeCallBack,\r\n            tool_sqrt:      configChangeCallBack,\r\n            tool_exp:       configChangeCallBack,\r\n            tool_log:       configChangeCallBack,\r\n            tool_ln:        configChangeCallBack,\r\n            tool_e:         configChangeCallBack,\r\n            tool_infinity:  configChangeCallBack,\r\n            tool_pi:        configChangeCallBack,\r\n            tool_cos:       configChangeCallBack,\r\n            tool_sin:       configChangeCallBack,\r\n            tool_lte:       configChangeCallBack,\r\n            tool_gte:       configChangeCallBack,\r\n            tool_times:     configChangeCallBack,\r\n            tool_divide:    configChangeCallBack,\r\n            tool_plusminus: configChangeCallBack,\r\n            tool_angle:     configChangeCallBack,\r\n            tool_minus:     configChangeCallBack,\r\n            tool_plus:      configChangeCallBack,\r\n            tool_equal:     configChangeCallBack,\r\n            tool_lower:     configChangeCallBack,\r\n            tool_greater:   configChangeCallBack,\r\n            tool_subscript: configChangeCallBack,\r\n            tool_integral:  configChangeCallBack,\r\n            tool_timesdot:  configChangeCallBack,\r\n            tool_triangle:  configChangeCallBack,\r\n            tool_similar:   configChangeCallBack,\r\n            tool_paral:     configChangeCallBack,\r\n            tool_perp:      configChangeCallBack,\r\n            tool_inmem:     configChangeCallBack,\r\n            tool_ninmem:    configChangeCallBack,\r\n            tool_union:     configChangeCallBack,\r\n            tool_intersec:  configChangeCallBack,\r\n\r\n            squarebkts: function squarebktsChangeCallBack(i, value) {\r\n                i.prop('tool_lbrack', value);\r\n                i.prop('tool_rbrack', value);\r\n                i.triggerPci('configChange', [i.getProperties()]);\r\n            },\r\n            roundbkts: function roundbktsChangeCallBack(i, value) {\r\n                i.prop('tool_lparen', value);\r\n                i.prop('tool_rparen', value);\r\n                i.triggerPci('configChange', [i.getProperties()]);\r\n            },\r\n            curlybkts: function curlybktsChangeCallBack(i, value) {\r\n                i.prop('tool_lbrace', value);\r\n                i.prop('tool_rbrace', value);\r\n                i.triggerPci('configChange', [i.getProperties()]);\r\n            },\r\n\r\n            allowNewLine: configChangeCallBack,\r\n            enableAutoWrap: configChangeCallBack\r\n        });\r\n\r\n\r\n        $gapStyleBox = $form.find('.mathgap-style-box');\r\n        $gapStyleSelector = $gapStyleBox.find('[data-mathgap-style]');\r\n\r\n        $gapStyleSelector.select2({\r\n            width: '100%',\r\n            minimumResultsForSearch: Infinity\r\n        })\r\n        .val(interaction.prop('gapStyle'))\r\n        .trigger('change');\r\n    };\r\n\r\n    /**\r\n     * Change callback for editable math field\r\n     */\r\n\r\n    MathEntryInteractionStateQuestion.prototype.addMathFieldListener = function addMathFieldListener() {\r\n        var _widget = this.widget,\r\n            interaction = _widget.element;\r\n\r\n        interaction.onPci('responseChange', function(latex) {\r\n            if (toBoolean(interaction.prop('useGapExpression'), false)) {\r\n                interaction.prop('gapExpression', latex);\r\n            } else {\r\n                interaction.prop('gapExpression', '');\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Display the \"Add Gap\" button\r\n     */\r\n    MathEntryInteractionStateQuestion.prototype.createAddGapBtn = function createAddGapBtn() {\r\n        var _widget = this.widget,\r\n            $container = _widget.$container,\r\n            $toolbar = $container.find('.toolbar'),\r\n            interaction =_widget.element;\r\n\r\n        if ($toolbar.length) {\r\n            $toolbar.after($addGapBtn);\r\n            $addGapBtn.on('click', function() {\r\n                interaction.getResponseDeclaration().removeMapEntries();\r\n                interaction.triggerPci('addGap');\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Remove the \"Add Gap\" button from the DOM\r\n     */\r\n    MathEntryInteractionStateQuestion.prototype.removeAddGapBtn = function removeAddGapBtn() {\r\n        $addGapBtn.off('click');\r\n        $addGapBtn.remove();\r\n    };\r\n\r\n    return MathEntryInteractionStateQuestion;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2021 (original work) Open Assessment Technologies SA;\r\n */\r\ndefine('mathEntryInteraction/creator/widget/states/Correct',[\r\n    'taoQtiItem/qtiCreator/widgets/states/factory',\r\n    'taoQtiItem/qtiCreator/widgets/states/Correct'\r\n], function (stateFactory, Correct) {\r\n    'use strict';\r\n\r\n    var InteractionStateCorrect = stateFactory.create(\r\n        Correct,\r\n        function init() {\r\n            this.widget.element.getResponseDeclaration().setTemplate('MAP_RESPONSE');\r\n            this.widget.changeState('map');\r\n        },\r\n        function exit() {\r\n        }\r\n    );\r\n\r\n    return InteractionStateCorrect;\r\n});\r\n\n","\ndefine('tpl!mathEntryInteraction/creator/tpl/answerForm', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper, options;\n  buffer += \"\\r\\n                <div class=\\\"correct-answer-entry\\\" data-correct-answer=\\\"\"\n    + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))\n    + \"\\\">\\r\\n                    <p>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Correct answer option\", options) : helperMissing.call(depth0, \"__\", \"Correct answer option\", options)))\n    + \" \"\n    + escapeExpression((helper = helpers.increaseIndex || (depth0 && depth0.increaseIndex),options={hash:{},data:data},helper ? helper.call(depth0, (data == null || data === false ? data : data.index), options) : helperMissing.call(depth0, \"increaseIndex\", (data == null || data === false ? data : data.index), options)))\n    + \"</p>\\r\\n                    <a href=\\\"#\\\" class=\\\"answer-edit\\\" id=\\\"edit_\"\n    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\">\\r\\n                        <span class=\\\"icon-edit\\\"></span>\\r\\n                        <span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"edit the answer\", options) : helperMissing.call(depth0, \"__\", \"edit the answer\", options)))\n    + \"</span>\\r\\n                    </a>\\r\\n\\r\\n                    <br>\\r\\n\\r\\n                    <a href=\\\"#\\\" class=\\\"answer-delete\\\" id=\\\"delete_\"\n    + escapeExpression(((stack1 = (data == null || data === false ? data : data.index)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\">\\r\\n                        <span class=\\\"icon-bin\\\"></span>\\r\\n                        <span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"delete the answer\", options) : helperMissing.call(depth0, \"__\", \"delete the answer\", options)))\n    + \"</span>\\r\\n                    </a>\\r\\n                </div>\\r\\n                <br>\\r\\n                \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"panel mathEntryInteraction\\\">\\r\\n    <hr>\\r\\n    <h3>Define correct responses: </h3>\\r\\n    <div class=\\\"answer-entries-config\\\" data-config-for-hot-uid=\\\"\"\n    + escapeExpression(((stack1 = (data == null || data === false ? data : data.key)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + \"\\\">\\r\\n        <div class=\\\"panel\\\">\\r\\n            <div class=\\\"entry-config\\\">\\r\\n                \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.correctAnswerEntries), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!mathEntryInteraction/creator/tpl/addAnswerOption', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<button class=\\\"add-answer-option\\\" style=\\\"background-color: #3e7da7\\\">\\r\\n    <i class=\\\"adder\\\"> </i> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Add an answer option\", options) : helperMissing.call(depth0, \"__\", \"Add an answer option\", options)))\n    + \"\\r\\n</button>\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2021 (original work) Open Assessment Technologies SA;\r\n */\r\ndefine('mathEntryInteraction/creator/widget/states/Map',[\r\n    'handlebars',\r\n    'i18n',\r\n    'lodash',\r\n    'jquery',\r\n    'taoQtiItem/qtiCreator/widgets/states/factory',\r\n    'taoQtiItem/qtiCreator/widgets/states/Map',\r\n    'taoQtiItem/qtiCreator/widgets/helpers/formElement',\r\n    'tpl!mathEntryInteraction/creator/tpl/answerForm',\r\n    'tpl!mathEntryInteraction/creator/tpl/addAnswerOption',\r\n], function (\r\n    hb,\r\n    __,\r\n    _,\r\n    $,\r\n    stateFactory,\r\n    Map,\r\n    formElement,\r\n    answerFormTpl,\r\n    addAnswerOptionBtn\r\n) {\r\n    'use strict';\r\n    var CORRECT_ANSWER_VALUE = 1;\r\n    hb.registerHelper('increaseIndex', function (value, options) {\r\n        return parseInt(value) + 1;\r\n    });\r\n\r\n    var InteractionStateMap = stateFactory.create(\r\n        Map,\r\n        function init() {\r\n            this.activeEditId = null;\r\n            this.correctResponses = [];\r\n            initForm(this);\r\n        },\r\n        function exit() {\r\n            emptyGapFields(this);\r\n            saveAnswers(this);\r\n            removeResponseChangeEventListener(this);\r\n            clearMathFieldLatex(this);\r\n            removeEditDeleteListeners(this);\r\n            removeAddButtonListener(this);\r\n            destroyForm(this);\r\n        }\r\n    );\r\n\r\n    function initForm(self) {\r\n        var interaction = self.widget.element,\r\n            responseDeclaration = interaction.getResponseDeclaration(),\r\n            $responseForm = self.widget.$responseForm;\r\n\r\n        initResponseChangeEventListener(self);\r\n        self.correctResponses = getExistingCorrectAnswerOptions(self);\r\n        $responseForm.html(addAnswerOptionBtn());\r\n        initAddAnswerButton(self);\r\n        renderForm(self, self.correctResponses);\r\n    }\r\n\r\n    function initAddAnswerButton(self) {\r\n        var interaction = self.widget.element,\r\n            $responseForm = self.widget.$responseForm,\r\n            $addAnswerBtn = $responseForm.find($('.add-answer-option'));\r\n\r\n        $addAnswerBtn.on('click', function () {\r\n            var newCorrectAnswer;\r\n\r\n            if (inGapMode(self)) {\r\n                emptyGapFields(self);\r\n                var gapExpression = self.widget.element.prop('gapExpression');\r\n                var gapCount = (gapExpression.match(/\\\\taoGap/g) || []).length;\r\n                if (gapCount > 0) {\r\n                    newCorrectAnswer = [];\r\n                    for (var i = 0; i < gapCount; i++) {\r\n                        newCorrectAnswer.push('');\r\n                    }\r\n\r\n                    newCorrectAnswer = newCorrectAnswer.join(',');\r\n                } else {\r\n                    newCorrectAnswer = '';\r\n                }\r\n            } else {\r\n                newCorrectAnswer = '';\r\n            }\r\n\r\n            self.correctResponses.push(newCorrectAnswer);\r\n            renderForm(self, self.correctResponses);\r\n        });\r\n    }\r\n\r\n    function getExistingCorrectAnswerOptions(self) {\r\n        var mapEntries = self.widget.element.getResponseDeclaration().getMapEntries();\r\n        return _.keys(mapEntries) || [];\r\n    }\r\n\r\n    function initResponseChangeEventListener(self) {\r\n        var interaction = self.widget.element;\r\n        self.widget.element.onPci('responseChange', function (latex) {\r\n            if (!inGapMode(self) && self.activeEditId != null) {\r\n                self.correctResponses[self.activeEditId] = latex;\r\n            } else if (inGapMode(self) && self.activeEditId != null) {\r\n                var response = interaction.getResponse();\r\n                self.correctResponses[self.activeEditId] = response.base.string;\r\n            }\r\n        });\r\n    }\r\n\r\n    function removeResponseChangeEventListener(self) {\r\n        self.widget.element.offPci('responseChange');\r\n    }\r\n\r\n    function clearMathFieldLatex(self) {\r\n        var interaction = self.widget.element;\r\n        if (!inGapMode(self)) {\r\n            interaction.triggerPci('latexInput', ['']);\r\n        }\r\n    }\r\n\r\n    function initEditingOptions(self) {\r\n        var interaction = self.widget.element,\r\n            $responseForm = self.widget.$responseForm,\r\n            $entryConfig = $responseForm.find('.entry-config'),\r\n            $editButtons = $entryConfig.find('.answer-edit');\r\n\r\n        if (inGapMode(self)) {\r\n            $editButtons.click(function (e) {\r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n\r\n                if (!!interaction.prop('inResponseState') === false) {\r\n                    interaction.prop('inResponseState', true);\r\n                    interaction.triggerPci('configChange', [interaction.getProperties()]);\r\n                }\r\n\r\n                self.activeEditId = parseInt(e.currentTarget.id.split('_')[1]);\r\n                var response = getGapResponseObject(self.correctResponses[self.activeEditId]);\r\n                interaction.triggerPci('latexGapInput', [response]);\r\n            });\r\n        } else {\r\n            $editButtons.click(function (e) {\r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n                self.activeEditId = parseInt(e.currentTarget.id.split('_')[1]);\r\n                interaction.triggerPci('latexInput', [self.correctResponses[self.activeEditId]]);\r\n            });\r\n        }\r\n    }\r\n\r\n    // forming gap response object to be further processed by the latexGapInput event\r\n    function getGapResponseObject(response) {\r\n        return {\r\n            list: {\r\n                string: response.split(',')\r\n            }\r\n        }\r\n    }\r\n\r\n    // removing all saved map entries\r\n    function clearMapEntries(self) {\r\n        var interaction = self.widget.element;\r\n        var response = interaction.getResponseDeclaration();\r\n        var mapEntries = response.getMapEntries();\r\n        _.keys(mapEntries).forEach(function (mapKey) {\r\n            response.removeMapEntry(mapKey, true);\r\n        });\r\n    }\r\n\r\n    function initDeletingOptions(self) {\r\n        var interaction = self.widget.element;\r\n        var $responseForm = self.widget.$responseForm;\r\n        var $entryConfig = $responseForm.find('.entry-config');\r\n        var $deleteButtons = $entryConfig.find('.answer-delete');\r\n\r\n        $deleteButtons.click(function (e) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n            var id = parseInt(e.currentTarget.id.split('_')[1]);\r\n\r\n            if (inGapMode(self)) {\r\n                self.activeEditId = id;\r\n                emptyGapFields(self);\r\n            }\r\n            // setting active editing id to null in order to\r\n            // prevent the editing of the next answer option that could take its place\r\n            self.activeEditId = null;\r\n\r\n            self.correctResponses.splice(id, 1);\r\n            renderForm(self, self.correctResponses);\r\n        });\r\n    }\r\n\r\n    function renderForm(self, correctAnswerOptions) {\r\n        removeEditDeleteListeners(self);\r\n        var $responseForm = self.widget.$responseForm;\r\n        $responseForm.find('.mathEntryInteraction').remove();\r\n        $responseForm.append(answerFormTpl({correctAnswerEntries: correctAnswerOptions}));\r\n        initDeletingOptions(self);\r\n        initEditingOptions(self);\r\n    }\r\n\r\n    /**\r\n     *   remove all event listeners to avoid any potential memory leaks\r\n     */\r\n    function removeEditDeleteListeners(self) {\r\n        var $entryConfig = self.widget.$responseForm.find('.entry-config');\r\n        $entryConfig.find('.answer-edit').off('click');\r\n        $entryConfig.find('.answer-delete').off('click');\r\n    }\r\n\r\n    function removeAddButtonListener(self) {\r\n        var $responseForm = self.widget.$responseForm;\r\n        $responseForm.find($('.add-answer-option')).off('click');\r\n    }\r\n\r\n    function destroyForm(self) {\r\n        self.widget.$responseForm.find('.mathEntryInteraction').remove();\r\n    }\r\n\r\n    function saveAnswers(self) {\r\n        var interaction = self.widget.element;\r\n        var responseDeclaration = interaction.getResponseDeclaration();\r\n        clearMapEntries(self);\r\n        if (inGapMode(self)){\r\n            self.correctResponses = self.correctResponses.filter(function (response) {\r\n                return response.split(',').indexOf('') === -1;\r\n            });\r\n        }\r\n\r\n        self.correctResponses.forEach(function (response) {\r\n            responseDeclaration.setMapEntry(response, CORRECT_ANSWER_VALUE, false);\r\n        });\r\n    }\r\n\r\n    /**\r\n     *   if in gap mode: will empty all the gap fields\r\n     */\r\n    function emptyGapFields(self) {\r\n        var interaction = self.widget.element;\r\n\r\n        if (inGapMode(self)){\r\n            var gapTemplateString = interaction.prop('gapExpression');\r\n            if (self.activeEditId != null) {\r\n                var responses = self.correctResponses[self.activeEditId].split(',');\r\n                self.activeEditId = null;\r\n\r\n                responses.forEach(function (responseGap) {\r\n                    gapTemplateString = gapTemplateString.replace(responseGap.toString(), '\\\\taoGap');\r\n                });\r\n                interaction.prop('gapExpression', gapTemplateString);\r\n            }\r\n\r\n            interaction.prop('inResponseState', false);\r\n            interaction.triggerPci('configChange', [interaction.getProperties()]);\r\n        }\r\n    }\r\n\r\n    function inGapMode(self) {\r\n        return !!(self.widget.element.prop('useGapExpression'));\r\n    }\r\n\r\n    return InteractionStateMap;\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n */\r\n\r\ndefine('mathEntryInteraction/creator/widget/states/states',[\r\n    'taoQtiItem/qtiCreator/widgets/states/factory',\r\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states',\r\n    'mathEntryInteraction/creator/widget/states/Question',\r\n    'mathEntryInteraction/creator/widget/states/Correct',\r\n    'mathEntryInteraction/creator/widget/states/Map'\r\n], function(factory, states){\r\n    'use strict';\r\n\r\n    return factory.createBundle(states, arguments);\r\n});\r\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA;\r\n */\r\n\r\ndefine('mathEntryInteraction/creator/widget/Widget',[\r\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget',\r\n    'mathEntryInteraction/creator/widget/states/states'\r\n], function(Widget, states){\r\n    'use strict';\r\n\r\n    var MathEntryInteractionWidget = Widget.clone();\r\n\r\n    MathEntryInteractionWidget.initCreator = function initCreator() {\r\n        var $interaction;\r\n\r\n        this.registerStates(states);\r\n\r\n        Widget.initCreator.call(this);\r\n\r\n        $interaction = this.$container.find('.mathEntryInteraction');\r\n        if ($interaction.length) {\r\n            $interaction.addClass('tao-qti-creator-context');\r\n        }\r\n    };\r\n\r\n    return MathEntryInteractionWidget;\r\n});\n","\ndefine('tpl!mathEntryInteraction/creator/tpl/markup', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\";\n\n\n  buffer += \"<div class=\\\"mathEntryInteraction\\\">\\r\\n    <div class=\\\"prompt\\\">\";\n  if (helper = helpers.prompt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.prompt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\r\\n    <div class=\\\"math-entry\\\">\\r\\n        <div class=\\\"toolbar\\\"></div>\\r\\n        <div>\\r\\n            <span class=\\\"math-entry-input\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";\n  return buffer;\n  });\n});\n\n","/**\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; under version 2\r\n * of the License (non-upgradable).\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n *\r\n * Copyright (c) 2016-2021 (original work) Open Assessment Technologies SA;\r\n *\r\n * @author Christophe Noël <christophe@taotesting.com>\r\n *\r\n */\r\n\r\ndefine('mathEntryInteraction/imsPciCreator',[\r\n    'lodash',\r\n    'mathEntryInteraction/creator/widget/Widget',\r\n    'tpl!mathEntryInteraction/creator/tpl/markup'\r\n], function (_, Widget, markupTpl) {\r\n    'use strict';\r\n\r\n    var _typeIdentifier = 'mathEntryInteraction';\r\n\r\n    var mathEntryInteractionCreator = {\r\n        /**\r\n         * (required) Get the typeIdentifier of the custom interaction\r\n         *\r\n         * @returns {String}\r\n         */\r\n        getTypeIdentifier: function getTypeIdentifier() {\r\n            return _typeIdentifier;\r\n        },\r\n        /**\r\n         * (required) Get the widget prototype\r\n         * Used in the renderer\r\n         *\r\n         * @returns {Object} Widget\r\n         */\r\n        getWidget: function getWidget() {\r\n            return Widget;\r\n        },\r\n        /**\r\n         * (optional) Get the default properties values of the pci.\r\n         * Used on new pci instance creation\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        getDefaultProperties: function getDefaultProperties() {\r\n            return {\r\n                authorizeWhiteSpace: 'false',\r\n                useGapExpression: 'false',\r\n                gapExpression: '',\r\n                gapStyle: '',\r\n                focusOnDenominator: false,\r\n\r\n                tool_frac: 'true',\r\n                tool_sqrt: 'true',\r\n                tool_exp: 'true',\r\n                tool_log: 'true',\r\n                tool_ln: 'true',\r\n                tool_e: 'true',\r\n                tool_infinity: 'true',\r\n                tool_lbrack: 'true',\r\n                tool_rbrack: 'true',\r\n                tool_pi: 'true',\r\n                tool_cos: 'true',\r\n                tool_sin: 'true',\r\n                tool_lte: 'true',\r\n                tool_gte: 'true',\r\n                tool_times: 'true',\r\n                tool_divide: 'true',\r\n                tool_plusminus: 'true',\r\n                tool_angle: 'true',\r\n                tool_minus: 'true',\r\n                tool_plus: 'true',\r\n                tool_equal: 'true',\r\n                tool_lower: 'true',\r\n                tool_greater: 'true',\r\n                tool_subscript: 'true',\r\n                tool_lbrace: 'true',\r\n                tool_rbrace: 'true',\r\n                tool_lparen: 'true',\r\n                tool_rparen: 'true',\r\n                tool_integral: 'true',\r\n                tool_timesdot: 'true',\r\n                tool_triangle: 'true',\r\n                tool_similar: 'true',\r\n                tool_paral: 'true',\r\n                tool_perp: 'true',\r\n                tool_inmem: 'true',\r\n                tool_ninmem: 'true',\r\n                tool_union: 'true',\r\n                tool_intersec: 'true',\r\n                allowNewLine: 'false',\r\n                enableAutoWrap: 'false'\r\n            };\r\n        },\r\n        /**\r\n         * (optional) Callback to execute on the\r\n         * Used on new pci instance creation\r\n         *\r\n         * @returns {Object}\r\n         */\r\n        afterCreate: function afterCreate(pci) {\r\n            //do some stuff\r\n        },\r\n        /**\r\n         * (required) Gives the qti pci xml template\r\n         *\r\n         * @returns {function} handlebar template\r\n         */\r\n        getMarkupTemplate: function getMarkupTemplate() {\r\n            return markupTpl;\r\n        },\r\n        /**\r\n         * (optional) Allows passing additional data to xml template\r\n         *\r\n         * @returns {function} handlebar template\r\n         */\r\n        getMarkupData: function getMarkupData(pci, defaultData) {\r\n            defaultData.prompt = pci.data('prompt');\r\n            return defaultData;\r\n        }\r\n    };\r\n\r\n    //since we assume we are in a tao context, there is no use to expose the a global object for lib registration\r\n    //all libs should be declared here\r\n    return mathEntryInteractionCreator;\r\n});\r\n\n"]}