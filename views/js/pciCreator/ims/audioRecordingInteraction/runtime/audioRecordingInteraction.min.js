define('taoQtiItem/portableLib/jquery_2_1_1', [], function () {
  (function (global, factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
      module.exports = global.document ? factory(global, true) : function (w) {
        if (!w.document) {
          throw new Error("jQuery requires a window with a document");
        }
        return factory(w);
      };
    } else {
      factory(global);
    }
  })(typeof window !== "undefined" ? window : this, function (window, noGlobal) {
    var arr = [];
    var slice = arr.slice;
    var concat = arr.concat;
    var push = arr.push;
    var indexOf = arr.indexOf;
    var class2type = {};
    var toString = class2type.toString;
    var hasOwn = class2type.hasOwnProperty;
    var support = {};
    var document = window.document,
      version = "2.1.1",
      jQuery = function (selector, context) {
        return new jQuery.fn.init(selector, context);
      },
      rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
      rmsPrefix = /^-ms-/,
      rdashAlpha = /-([\da-z])/gi,
      fcamelCase = function (all, letter) {
        return letter.toUpperCase();
      };
    jQuery.fn = jQuery.prototype = {
      jquery: version,
      constructor: jQuery,
      selector: "",
      length: 0,
      toArray: function () {
        return slice.call(this);
      },
      get: function (num) {
        return num != null ? num < 0 ? this[num + this.length] : this[num] : slice.call(this);
      },
      pushStack: function (elems) {
        var ret = jQuery.merge(this.constructor(), elems);
        ret.prevObject = this;
        ret.context = this.context;
        return ret;
      },
      each: function (callback, args) {
        return jQuery.each(this, callback, args);
      },
      map: function (callback) {
        return this.pushStack(jQuery.map(this, function (elem, i) {
          return callback.call(elem, i, elem);
        }));
      },
      slice: function () {
        return this.pushStack(slice.apply(this, arguments));
      },
      first: function () {
        return this.eq(0);
      },
      last: function () {
        return this.eq(-1);
      },
      eq: function (i) {
        var len = this.length,
          j = +i + (i < 0 ? len : 0);
        return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
      },
      end: function () {
        return this.prevObject || this.constructor(null);
      },
      push: push,
      sort: arr.sort,
      splice: arr.splice
    };
    jQuery.extend = jQuery.fn.extend = function () {
      var options,
        name,
        src,
        copy,
        copyIsArray,
        clone,
        target = arguments[0] || {},
        i = 1,
        length = arguments.length,
        deep = false;
      if (typeof target === "boolean") {
        deep = target;
        target = arguments[i] || {};
        i++;
      }
      if (typeof target !== "object" && !jQuery.isFunction(target)) {
        target = {};
      }
      if (i === length) {
        target = this;
        i--;
      }
      for (; i < length; i++) {
        if ((options = arguments[i]) != null) {
          for (name in options) {
            src = target[name];
            copy = options[name];
            if (target === copy) {
              continue;
            }
            if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {
              if (copyIsArray) {
                copyIsArray = false;
                clone = src && jQuery.isArray(src) ? src : [];
              } else {
                clone = src && jQuery.isPlainObject(src) ? src : {};
              }
              target[name] = jQuery.extend(deep, clone, copy);
            } else if (copy !== undefined) {
              target[name] = copy;
            }
          }
        }
      }
      return target;
    };
    jQuery.extend({
      expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
      isReady: true,
      error: function (msg) {
        throw new Error(msg);
      },
      noop: function () {},
      isFunction: function (obj) {
        return jQuery.type(obj) === "function";
      },
      isArray: Array.isArray,
      isWindow: function (obj) {
        return obj != null && obj === obj.window;
      },
      isNumeric: function (obj) {
        return !jQuery.isArray(obj) && obj - parseFloat(obj) >= 0;
      },
      isPlainObject: function (obj) {
        if (jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow(obj)) {
          return false;
        }
        if (obj.constructor && !hasOwn.call(obj.constructor.prototype, "isPrototypeOf")) {
          return false;
        }
        return true;
      },
      isEmptyObject: function (obj) {
        var name;
        for (name in obj) {
          return false;
        }
        return true;
      },
      type: function (obj) {
        if (obj == null) {
          return obj + "";
        }
        return typeof obj === "object" || typeof obj === "function" ? class2type[toString.call(obj)] || "object" : typeof obj;
      },
      globalEval: function (code) {
        var script,
          indirect = eval;
        code = jQuery.trim(code);
        if (code) {
          if (code.indexOf("use strict") === 1) {
            script = document.createElement("script");
            script.text = code;
            document.head.appendChild(script).parentNode.removeChild(script);
          } else {
            indirect(code);
          }
        }
      },
      camelCase: function (string) {
        return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
      },
      nodeName: function (elem, name) {
        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
      },
      each: function (obj, callback, args) {
        var value,
          i = 0,
          length = obj.length,
          isArray = isArraylike(obj);
        if (args) {
          if (isArray) {
            for (; i < length; i++) {
              value = callback.apply(obj[i], args);
              if (value === false) {
                break;
              }
            }
          } else {
            for (i in obj) {
              value = callback.apply(obj[i], args);
              if (value === false) {
                break;
              }
            }
          }
        } else {
          if (isArray) {
            for (; i < length; i++) {
              value = callback.call(obj[i], i, obj[i]);
              if (value === false) {
                break;
              }
            }
          } else {
            for (i in obj) {
              value = callback.call(obj[i], i, obj[i]);
              if (value === false) {
                break;
              }
            }
          }
        }
        return obj;
      },
      trim: function (text) {
        return text == null ? "" : (text + "").replace(rtrim, "");
      },
      makeArray: function (arr, results) {
        var ret = results || [];
        if (arr != null) {
          if (isArraylike(Object(arr))) {
            jQuery.merge(ret, typeof arr === "string" ? [arr] : arr);
          } else {
            push.call(ret, arr);
          }
        }
        return ret;
      },
      inArray: function (elem, arr, i) {
        return arr == null ? -1 : indexOf.call(arr, elem, i);
      },
      merge: function (first, second) {
        var len = +second.length,
          j = 0,
          i = first.length;
        for (; j < len; j++) {
          first[i++] = second[j];
        }
        first.length = i;
        return first;
      },
      grep: function (elems, callback, invert) {
        var callbackInverse,
          matches = [],
          i = 0,
          length = elems.length,
          callbackExpect = !invert;
        for (; i < length; i++) {
          callbackInverse = !callback(elems[i], i);
          if (callbackInverse !== callbackExpect) {
            matches.push(elems[i]);
          }
        }
        return matches;
      },
      map: function (elems, callback, arg) {
        var value,
          i = 0,
          length = elems.length,
          isArray = isArraylike(elems),
          ret = [];
        if (isArray) {
          for (; i < length; i++) {
            value = callback(elems[i], i, arg);
            if (value != null) {
              ret.push(value);
            }
          }
        } else {
          for (i in elems) {
            value = callback(elems[i], i, arg);
            if (value != null) {
              ret.push(value);
            }
          }
        }
        return concat.apply([], ret);
      },
      guid: 1,
      proxy: function (fn, context) {
        var tmp, args, proxy;
        if (typeof context === "string") {
          tmp = fn[context];
          context = fn;
          fn = tmp;
        }
        if (!jQuery.isFunction(fn)) {
          return undefined;
        }
        args = slice.call(arguments, 2);
        proxy = function () {
          return fn.apply(context || this, args.concat(slice.call(arguments)));
        };
        proxy.guid = fn.guid = fn.guid || jQuery.guid++;
        return proxy;
      },
      now: Date.now,
      support: support
    });
    jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function (i, name) {
      class2type["[object " + name + "]"] = name.toLowerCase();
    });
    function isArraylike(obj) {
      var length = obj.length,
        type = jQuery.type(obj);
      if (type === "function" || jQuery.isWindow(obj)) {
        return false;
      }
      if (obj.nodeType === 1 && length) {
        return true;
      }
      return type === "array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj;
    }
    var Sizzle = function (window) {
      var i,
        support,
        Expr,
        getText,
        isXML,
        tokenize,
        compile,
        select,
        outermostContext,
        sortInput,
        hasDuplicate,
        setDocument,
        document,
        docElem,
        documentIsHTML,
        rbuggyQSA,
        rbuggyMatches,
        matches,
        contains,
        expando = "sizzle" + -new Date(),
        preferredDoc = window.document,
        dirruns = 0,
        done = 0,
        classCache = createCache(),
        tokenCache = createCache(),
        compilerCache = createCache(),
        sortOrder = function (a, b) {
          if (a === b) {
            hasDuplicate = true;
          }
          return 0;
        },
        strundefined = typeof undefined,
        MAX_NEGATIVE = 1 << 31,
        hasOwn = {}.hasOwnProperty,
        arr = [],
        pop = arr.pop,
        push_native = arr.push,
        push = arr.push,
        slice = arr.slice,
        indexOf = arr.indexOf || function (elem) {
          var i = 0,
            len = this.length;
          for (; i < len; i++) {
            if (this[i] === elem) {
              return i;
            }
          }
          return -1;
        },
        booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
        whitespace = "[\\x20\\t\\r\\n\\f]",
        characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
        identifier = characterEncoding.replace("w", "w#"),
        attributes = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace + "*([*^$|!~]?=)" + whitespace + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]",
        pseudos = ":(" + characterEncoding + ")(?:\\((" + "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" + "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" + ".*" + ")\\)|)",
        rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"),
        rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"),
        rcombinators = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"),
        rattributeQuotes = new RegExp("=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g"),
        rpseudo = new RegExp(pseudos),
        ridentifier = new RegExp("^" + identifier + "$"),
        matchExpr = {
          "ID": new RegExp("^#(" + characterEncoding + ")"),
          "CLASS": new RegExp("^\\.(" + characterEncoding + ")"),
          "TAG": new RegExp("^(" + characterEncoding.replace("w", "w*") + ")"),
          "ATTR": new RegExp("^" + attributes),
          "PSEUDO": new RegExp("^" + pseudos),
          "CHILD": new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
          "bool": new RegExp("^(?:" + booleans + ")$", "i"),
          "needsContext": new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
        },
        rinputs = /^(?:input|select|textarea|button)$/i,
        rheader = /^h\d$/i,
        rnative = /^[^{]+\{\s*\[native \w/,
        rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
        rsibling = /[+~]/,
        rescape = /'|\\/g,
        runescape = new RegExp("\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig"),
        funescape = function (_, escaped, escapedWhitespace) {
          var high = "0x" + escaped - 0x10000;
          return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);
        };
      try {
        push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes);
        arr[preferredDoc.childNodes.length].nodeType;
      } catch (e) {
        push = {
          apply: arr.length ? function (target, els) {
            push_native.apply(target, slice.call(els));
          } : function (target, els) {
            var j = target.length,
              i = 0;
            while (target[j++] = els[i++]) {}
            target.length = j - 1;
          }
        };
      }
      function Sizzle(selector, context, results, seed) {
        var match, elem, m, nodeType, i, groups, old, nid, newContext, newSelector;
        if ((context ? context.ownerDocument || context : preferredDoc) !== document) {
          setDocument(context);
        }
        context = context || document;
        results = results || [];
        if (!selector || typeof selector !== "string") {
          return results;
        }
        if ((nodeType = context.nodeType) !== 1 && nodeType !== 9) {
          return [];
        }
        if (documentIsHTML && !seed) {
          if (match = rquickExpr.exec(selector)) {
            if (m = match[1]) {
              if (nodeType === 9) {
                elem = context.getElementById(m);
                if (elem && elem.parentNode) {
                  if (elem.id === m) {
                    results.push(elem);
                    return results;
                  }
                } else {
                  return results;
                }
              } else {
                if (context.ownerDocument && (elem = context.ownerDocument.getElementById(m)) && contains(context, elem) && elem.id === m) {
                  results.push(elem);
                  return results;
                }
              }
            } else if (match[2]) {
              push.apply(results, context.getElementsByTagName(selector));
              return results;
            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {
              push.apply(results, context.getElementsByClassName(m));
              return results;
            }
          }
          if (support.qsa && (!rbuggyQSA || !rbuggyQSA.test(selector))) {
            nid = old = expando;
            newContext = context;
            newSelector = nodeType === 9 && selector;
            if (nodeType === 1 && context.nodeName.toLowerCase() !== "object") {
              groups = tokenize(selector);
              if (old = context.getAttribute("id")) {
                nid = old.replace(rescape, "\\$&");
              } else {
                context.setAttribute("id", nid);
              }
              nid = "[id='" + nid + "'] ";
              i = groups.length;
              while (i--) {
                groups[i] = nid + toSelector(groups[i]);
              }
              newContext = rsibling.test(selector) && testContext(context.parentNode) || context;
              newSelector = groups.join(",");
            }
            if (newSelector) {
              try {
                push.apply(results, newContext.querySelectorAll(newSelector));
                return results;
              } catch (qsaError) {} finally {
                if (!old) {
                  context.removeAttribute("id");
                }
              }
            }
          }
        }
        return select(selector.replace(rtrim, "$1"), context, results, seed);
      }
      function createCache() {
        var keys = [];
        function cache(key, value) {
          if (keys.push(key + " ") > Expr.cacheLength) {
            delete cache[keys.shift()];
          }
          return cache[key + " "] = value;
        }
        return cache;
      }
      function markFunction(fn) {
        fn[expando] = true;
        return fn;
      }
      function assert(fn) {
        var div = document.createElement("div");
        try {
          return !!fn(div);
        } catch (e) {
          return false;
        } finally {
          if (div.parentNode) {
            div.parentNode.removeChild(div);
          }
          div = null;
        }
      }
      function addHandle(attrs, handler) {
        var arr = attrs.split("|"),
          i = attrs.length;
        while (i--) {
          Expr.attrHandle[arr[i]] = handler;
        }
      }
      function siblingCheck(a, b) {
        var cur = b && a,
          diff = cur && a.nodeType === 1 && b.nodeType === 1 && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE);
        if (diff) {
          return diff;
        }
        if (cur) {
          while (cur = cur.nextSibling) {
            if (cur === b) {
              return -1;
            }
          }
        }
        return a ? 1 : -1;
      }
      function createInputPseudo(type) {
        return function (elem) {
          var name = elem.nodeName.toLowerCase();
          return name === "input" && elem.type === type;
        };
      }
      function createButtonPseudo(type) {
        return function (elem) {
          var name = elem.nodeName.toLowerCase();
          return (name === "input" || name === "button") && elem.type === type;
        };
      }
      function createPositionalPseudo(fn) {
        return markFunction(function (argument) {
          argument = +argument;
          return markFunction(function (seed, matches) {
            var j,
              matchIndexes = fn([], seed.length, argument),
              i = matchIndexes.length;
            while (i--) {
              if (seed[j = matchIndexes[i]]) {
                seed[j] = !(matches[j] = seed[j]);
              }
            }
          });
        });
      }
      function testContext(context) {
        return context && typeof context.getElementsByTagName !== strundefined && context;
      }
      support = Sizzle.support = {};
      isXML = Sizzle.isXML = function (elem) {
        var documentElement = elem && (elem.ownerDocument || elem).documentElement;
        return documentElement ? documentElement.nodeName !== "HTML" : false;
      };
      setDocument = Sizzle.setDocument = function (node) {
        var hasCompare,
          doc = node ? node.ownerDocument || node : preferredDoc,
          parent = doc.defaultView;
        if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {
          return document;
        }
        document = doc;
        docElem = doc.documentElement;
        documentIsHTML = !isXML(doc);
        if (parent && parent !== parent.top) {
          if (parent.addEventListener) {
            parent.addEventListener("unload", function () {
              setDocument();
            }, false);
          } else if (parent.attachEvent) {
            parent.attachEvent("onunload", function () {
              setDocument();
            });
          }
        }
        support.attributes = assert(function (div) {
          div.className = "i";
          return !div.getAttribute("className");
        });
        support.getElementsByTagName = assert(function (div) {
          div.appendChild(doc.createComment(""));
          return !div.getElementsByTagName("*").length;
        });
        support.getElementsByClassName = rnative.test(doc.getElementsByClassName) && assert(function (div) {
          div.innerHTML = "<div class='a'></div><div class='a i'></div>";
          div.firstChild.className = "i";
          return div.getElementsByClassName("i").length === 2;
        });
        support.getById = assert(function (div) {
          docElem.appendChild(div).id = expando;
          return !doc.getElementsByName || !doc.getElementsByName(expando).length;
        });
        if (support.getById) {
          Expr.find["ID"] = function (id, context) {
            if (typeof context.getElementById !== strundefined && documentIsHTML) {
              var m = context.getElementById(id);
              return m && m.parentNode ? [m] : [];
            }
          };
          Expr.filter["ID"] = function (id) {
            var attrId = id.replace(runescape, funescape);
            return function (elem) {
              return elem.getAttribute("id") === attrId;
            };
          };
        } else {
          delete Expr.find["ID"];
          Expr.filter["ID"] = function (id) {
            var attrId = id.replace(runescape, funescape);
            return function (elem) {
              var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
              return node && node.value === attrId;
            };
          };
        }
        Expr.find["TAG"] = support.getElementsByTagName ? function (tag, context) {
          if (typeof context.getElementsByTagName !== strundefined) {
            return context.getElementsByTagName(tag);
          }
        } : function (tag, context) {
          var elem,
            tmp = [],
            i = 0,
            results = context.getElementsByTagName(tag);
          if (tag === "*") {
            while (elem = results[i++]) {
              if (elem.nodeType === 1) {
                tmp.push(elem);
              }
            }
            return tmp;
          }
          return results;
        };
        Expr.find["CLASS"] = support.getElementsByClassName && function (className, context) {
          if (typeof context.getElementsByClassName !== strundefined && documentIsHTML) {
            return context.getElementsByClassName(className);
          }
        };
        rbuggyMatches = [];
        rbuggyQSA = [];
        if (support.qsa = rnative.test(doc.querySelectorAll)) {
          assert(function (div) {
            div.innerHTML = "<select msallowclip=''><option selected=''></option></select>";
            if (div.querySelectorAll("[msallowclip^='']").length) {
              rbuggyQSA.push("[*^$]=" + whitespace + "*(?:''|\"\")");
            }
            if (!div.querySelectorAll("[selected]").length) {
              rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")");
            }
            if (!div.querySelectorAll(":checked").length) {
              rbuggyQSA.push(":checked");
            }
          });
          assert(function (div) {
            var input = doc.createElement("input");
            input.setAttribute("type", "hidden");
            div.appendChild(input).setAttribute("name", "D");
            if (div.querySelectorAll("[name=d]").length) {
              rbuggyQSA.push("name" + whitespace + "*[*^$|!~]?=");
            }
            if (!div.querySelectorAll(":enabled").length) {
              rbuggyQSA.push(":enabled", ":disabled");
            }
            div.querySelectorAll("*,:x");
            rbuggyQSA.push(",.*:");
          });
        }
        if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {
          assert(function (div) {
            support.disconnectedMatch = matches.call(div, "div");
            matches.call(div, "[s!='']:x");
            rbuggyMatches.push("!=", pseudos);
          });
        }
        rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
        rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join("|"));
        hasCompare = rnative.test(docElem.compareDocumentPosition);
        contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {
          var adown = a.nodeType === 9 ? a.documentElement : a,
            bup = b && b.parentNode;
          return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
        } : function (a, b) {
          if (b) {
            while (b = b.parentNode) {
              if (b === a) {
                return true;
              }
            }
          }
          return false;
        };
        sortOrder = hasCompare ? function (a, b) {
          if (a === b) {
            hasDuplicate = true;
            return 0;
          }
          var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
          if (compare) {
            return compare;
          }
          compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;
          if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {
            if (a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {
              return -1;
            }
            if (b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {
              return 1;
            }
            return sortInput ? indexOf.call(sortInput, a) - indexOf.call(sortInput, b) : 0;
          }
          return compare & 4 ? -1 : 1;
        } : function (a, b) {
          if (a === b) {
            hasDuplicate = true;
            return 0;
          }
          var cur,
            i = 0,
            aup = a.parentNode,
            bup = b.parentNode,
            ap = [a],
            bp = [b];
          if (!aup || !bup) {
            return a === doc ? -1 : b === doc ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf.call(sortInput, a) - indexOf.call(sortInput, b) : 0;
          } else if (aup === bup) {
            return siblingCheck(a, b);
          }
          cur = a;
          while (cur = cur.parentNode) {
            ap.unshift(cur);
          }
          cur = b;
          while (cur = cur.parentNode) {
            bp.unshift(cur);
          }
          while (ap[i] === bp[i]) {
            i++;
          }
          return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;
        };
        return doc;
      };
      Sizzle.matches = function (expr, elements) {
        return Sizzle(expr, null, null, elements);
      };
      Sizzle.matchesSelector = function (elem, expr) {
        if ((elem.ownerDocument || elem) !== document) {
          setDocument(elem);
        }
        expr = expr.replace(rattributeQuotes, "='$1']");
        if (support.matchesSelector && documentIsHTML && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
          try {
            var ret = matches.call(elem, expr);
            if (ret || support.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {
              return ret;
            }
          } catch (e) {}
        }
        return Sizzle(expr, document, null, [elem]).length > 0;
      };
      Sizzle.contains = function (context, elem) {
        if ((context.ownerDocument || context) !== document) {
          setDocument(context);
        }
        return contains(context, elem);
      };
      Sizzle.attr = function (elem, name) {
        if ((elem.ownerDocument || elem) !== document) {
          setDocument(elem);
        }
        var fn = Expr.attrHandle[name.toLowerCase()],
          val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;
        return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
      };
      Sizzle.error = function (msg) {
        throw new Error("Syntax error, unrecognized expression: " + msg);
      };
      Sizzle.uniqueSort = function (results) {
        var elem,
          duplicates = [],
          j = 0,
          i = 0;
        hasDuplicate = !support.detectDuplicates;
        sortInput = !support.sortStable && results.slice(0);
        results.sort(sortOrder);
        if (hasDuplicate) {
          while (elem = results[i++]) {
            if (elem === results[i]) {
              j = duplicates.push(i);
            }
          }
          while (j--) {
            results.splice(duplicates[j], 1);
          }
        }
        sortInput = null;
        return results;
      };
      getText = Sizzle.getText = function (elem) {
        var node,
          ret = "",
          i = 0,
          nodeType = elem.nodeType;
        if (!nodeType) {
          while (node = elem[i++]) {
            ret += getText(node);
          }
        } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {
          if (typeof elem.textContent === "string") {
            return elem.textContent;
          } else {
            for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
              ret += getText(elem);
            }
          }
        } else if (nodeType === 3 || nodeType === 4) {
          return elem.nodeValue;
        }
        return ret;
      };
      Expr = Sizzle.selectors = {
        cacheLength: 50,
        createPseudo: markFunction,
        match: matchExpr,
        attrHandle: {},
        find: {},
        relative: {
          ">": {
            dir: "parentNode",
            first: true
          },
          " ": {
            dir: "parentNode"
          },
          "+": {
            dir: "previousSibling",
            first: true
          },
          "~": {
            dir: "previousSibling"
          }
        },
        preFilter: {
          "ATTR": function (match) {
            match[1] = match[1].replace(runescape, funescape);
            match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);
            if (match[2] === "~=") {
              match[3] = " " + match[3] + " ";
            }
            return match.slice(0, 4);
          },
          "CHILD": function (match) {
            match[1] = match[1].toLowerCase();
            if (match[1].slice(0, 3) === "nth") {
              if (!match[3]) {
                Sizzle.error(match[0]);
              }
              match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
              match[5] = +(match[7] + match[8] || match[3] === "odd");
            } else if (match[3]) {
              Sizzle.error(match[0]);
            }
            return match;
          },
          "PSEUDO": function (match) {
            var excess,
              unquoted = !match[6] && match[2];
            if (matchExpr["CHILD"].test(match[0])) {
              return null;
            }
            if (match[3]) {
              match[2] = match[4] || match[5] || "";
            } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
              match[0] = match[0].slice(0, excess);
              match[2] = unquoted.slice(0, excess);
            }
            return match.slice(0, 3);
          }
        },
        filter: {
          "TAG": function (nodeNameSelector) {
            var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
            return nodeNameSelector === "*" ? function () {
              return true;
            } : function (elem) {
              return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
            };
          },
          "CLASS": function (className) {
            var pattern = classCache[className + " "];
            return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function (elem) {
              return pattern.test(typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute("class") || "");
            });
          },
          "ATTR": function (name, operator, check) {
            return function (elem) {
              var result = Sizzle.attr(elem, name);
              if (result == null) {
                return operator === "!=";
              }
              if (!operator) {
                return true;
              }
              result += "";
              return operator === "=" ? result === check : operator === "!=" ? result !== check : operator === "^=" ? check && result.indexOf(check) === 0 : operator === "*=" ? check && result.indexOf(check) > -1 : operator === "$=" ? check && result.slice(-check.length) === check : operator === "~=" ? (" " + result + " ").indexOf(check) > -1 : operator === "|=" ? result === check || result.slice(0, check.length + 1) === check + "-" : false;
            };
          },
          "CHILD": function (type, what, argument, first, last) {
            var simple = type.slice(0, 3) !== "nth",
              forward = type.slice(-4) !== "last",
              ofType = what === "of-type";
            return first === 1 && last === 0 ? function (elem) {
              return !!elem.parentNode;
            } : function (elem, context, xml) {
              var cache,
                outerCache,
                node,
                diff,
                nodeIndex,
                start,
                dir = simple !== forward ? "nextSibling" : "previousSibling",
                parent = elem.parentNode,
                name = ofType && elem.nodeName.toLowerCase(),
                useCache = !xml && !ofType;
              if (parent) {
                if (simple) {
                  while (dir) {
                    node = elem;
                    while (node = node[dir]) {
                      if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {
                        return false;
                      }
                    }
                    start = dir = type === "only" && !start && "nextSibling";
                  }
                  return true;
                }
                start = [forward ? parent.firstChild : parent.lastChild];
                if (forward && useCache) {
                  outerCache = parent[expando] || (parent[expando] = {});
                  cache = outerCache[type] || [];
                  nodeIndex = cache[0] === dirruns && cache[1];
                  diff = cache[0] === dirruns && cache[2];
                  node = nodeIndex && parent.childNodes[nodeIndex];
                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
                    if (node.nodeType === 1 && ++diff && node === elem) {
                      outerCache[type] = [dirruns, nodeIndex, diff];
                      break;
                    }
                  }
                } else if (useCache && (cache = (elem[expando] || (elem[expando] = {}))[type]) && cache[0] === dirruns) {
                  diff = cache[1];
                } else {
                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {
                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {
                      if (useCache) {
                        (node[expando] || (node[expando] = {}))[type] = [dirruns, diff];
                      }
                      if (node === elem) {
                        break;
                      }
                    }
                  }
                }
                diff -= last;
                return diff === first || diff % first === 0 && diff / first >= 0;
              }
            };
          },
          "PSEUDO": function (pseudo, argument) {
            var args,
              fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);
            if (fn[expando]) {
              return fn(argument);
            }
            if (fn.length > 1) {
              args = [pseudo, pseudo, "", argument];
              return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {
                var idx,
                  matched = fn(seed, argument),
                  i = matched.length;
                while (i--) {
                  idx = indexOf.call(seed, matched[i]);
                  seed[idx] = !(matches[idx] = matched[i]);
                }
              }) : function (elem) {
                return fn(elem, 0, args);
              };
            }
            return fn;
          }
        },
        pseudos: {
          "not": markFunction(function (selector) {
            var input = [],
              results = [],
              matcher = compile(selector.replace(rtrim, "$1"));
            return matcher[expando] ? markFunction(function (seed, matches, context, xml) {
              var elem,
                unmatched = matcher(seed, null, xml, []),
                i = seed.length;
              while (i--) {
                if (elem = unmatched[i]) {
                  seed[i] = !(matches[i] = elem);
                }
              }
            }) : function (elem, context, xml) {
              input[0] = elem;
              matcher(input, null, xml, results);
              return !results.pop();
            };
          }),
          "has": markFunction(function (selector) {
            return function (elem) {
              return Sizzle(selector, elem).length > 0;
            };
          }),
          "contains": markFunction(function (text) {
            return function (elem) {
              return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;
            };
          }),
          "lang": markFunction(function (lang) {
            if (!ridentifier.test(lang || "")) {
              Sizzle.error("unsupported lang: " + lang);
            }
            lang = lang.replace(runescape, funescape).toLowerCase();
            return function (elem) {
              var elemLang;
              do {
                if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) {
                  elemLang = elemLang.toLowerCase();
                  return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
                }
              } while ((elem = elem.parentNode) && elem.nodeType === 1);
              return false;
            };
          }),
          "target": function (elem) {
            var hash = window.location && window.location.hash;
            return hash && hash.slice(1) === elem.id;
          },
          "root": function (elem) {
            return elem === docElem;
          },
          "focus": function (elem) {
            return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
          },
          "enabled": function (elem) {
            return elem.disabled === false;
          },
          "disabled": function (elem) {
            return elem.disabled === true;
          },
          "checked": function (elem) {
            var nodeName = elem.nodeName.toLowerCase();
            return nodeName === "input" && !!elem.checked || nodeName === "option" && !!elem.selected;
          },
          "selected": function (elem) {
            if (elem.parentNode) {
              elem.parentNode.selectedIndex;
            }
            return elem.selected === true;
          },
          "empty": function (elem) {
            for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
              if (elem.nodeType < 6) {
                return false;
              }
            }
            return true;
          },
          "parent": function (elem) {
            return !Expr.pseudos["empty"](elem);
          },
          "header": function (elem) {
            return rheader.test(elem.nodeName);
          },
          "input": function (elem) {
            return rinputs.test(elem.nodeName);
          },
          "button": function (elem) {
            var name = elem.nodeName.toLowerCase();
            return name === "input" && elem.type === "button" || name === "button";
          },
          "text": function (elem) {
            var attr;
            return elem.nodeName.toLowerCase() === "input" && elem.type === "text" && ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");
          },
          "first": createPositionalPseudo(function () {
            return [0];
          }),
          "last": createPositionalPseudo(function (matchIndexes, length) {
            return [length - 1];
          }),
          "eq": createPositionalPseudo(function (matchIndexes, length, argument) {
            return [argument < 0 ? argument + length : argument];
          }),
          "even": createPositionalPseudo(function (matchIndexes, length) {
            var i = 0;
            for (; i < length; i += 2) {
              matchIndexes.push(i);
            }
            return matchIndexes;
          }),
          "odd": createPositionalPseudo(function (matchIndexes, length) {
            var i = 1;
            for (; i < length; i += 2) {
              matchIndexes.push(i);
            }
            return matchIndexes;
          }),
          "lt": createPositionalPseudo(function (matchIndexes, length, argument) {
            var i = argument < 0 ? argument + length : argument;
            for (; --i >= 0;) {
              matchIndexes.push(i);
            }
            return matchIndexes;
          }),
          "gt": createPositionalPseudo(function (matchIndexes, length, argument) {
            var i = argument < 0 ? argument + length : argument;
            for (; ++i < length;) {
              matchIndexes.push(i);
            }
            return matchIndexes;
          })
        }
      };
      Expr.pseudos["nth"] = Expr.pseudos["eq"];
      for (i in {
        radio: true,
        checkbox: true,
        file: true,
        password: true,
        image: true
      }) {
        Expr.pseudos[i] = createInputPseudo(i);
      }
      for (i in {
        submit: true,
        reset: true
      }) {
        Expr.pseudos[i] = createButtonPseudo(i);
      }
      function setFilters() {}
      setFilters.prototype = Expr.filters = Expr.pseudos;
      Expr.setFilters = new setFilters();
      tokenize = Sizzle.tokenize = function (selector, parseOnly) {
        var matched,
          match,
          tokens,
          type,
          soFar,
          groups,
          preFilters,
          cached = tokenCache[selector + " "];
        if (cached) {
          return parseOnly ? 0 : cached.slice(0);
        }
        soFar = selector;
        groups = [];
        preFilters = Expr.preFilter;
        while (soFar) {
          if (!matched || (match = rcomma.exec(soFar))) {
            if (match) {
              soFar = soFar.slice(match[0].length) || soFar;
            }
            groups.push(tokens = []);
          }
          matched = false;
          if (match = rcombinators.exec(soFar)) {
            matched = match.shift();
            tokens.push({
              value: matched,
              type: match[0].replace(rtrim, " ")
            });
            soFar = soFar.slice(matched.length);
          }
          for (type in Expr.filter) {
            if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
              matched = match.shift();
              tokens.push({
                value: matched,
                type: type,
                matches: match
              });
              soFar = soFar.slice(matched.length);
            }
          }
          if (!matched) {
            break;
          }
        }
        return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);
      };
      function toSelector(tokens) {
        var i = 0,
          len = tokens.length,
          selector = "";
        for (; i < len; i++) {
          selector += tokens[i].value;
        }
        return selector;
      }
      function addCombinator(matcher, combinator, base) {
        var dir = combinator.dir,
          checkNonElements = base && dir === "parentNode",
          doneName = done++;
        return combinator.first ? function (elem, context, xml) {
          while (elem = elem[dir]) {
            if (elem.nodeType === 1 || checkNonElements) {
              return matcher(elem, context, xml);
            }
          }
        } : function (elem, context, xml) {
          var oldCache,
            outerCache,
            newCache = [dirruns, doneName];
          if (xml) {
            while (elem = elem[dir]) {
              if (elem.nodeType === 1 || checkNonElements) {
                if (matcher(elem, context, xml)) {
                  return true;
                }
              }
            }
          } else {
            while (elem = elem[dir]) {
              if (elem.nodeType === 1 || checkNonElements) {
                outerCache = elem[expando] || (elem[expando] = {});
                if ((oldCache = outerCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                  return newCache[2] = oldCache[2];
                } else {
                  outerCache[dir] = newCache;
                  if (newCache[2] = matcher(elem, context, xml)) {
                    return true;
                  }
                }
              }
            }
          }
        };
      }
      function elementMatcher(matchers) {
        return matchers.length > 1 ? function (elem, context, xml) {
          var i = matchers.length;
          while (i--) {
            if (!matchers[i](elem, context, xml)) {
              return false;
            }
          }
          return true;
        } : matchers[0];
      }
      function multipleContexts(selector, contexts, results) {
        var i = 0,
          len = contexts.length;
        for (; i < len; i++) {
          Sizzle(selector, contexts[i], results);
        }
        return results;
      }
      function condense(unmatched, map, filter, context, xml) {
        var elem,
          newUnmatched = [],
          i = 0,
          len = unmatched.length,
          mapped = map != null;
        for (; i < len; i++) {
          if (elem = unmatched[i]) {
            if (!filter || filter(elem, context, xml)) {
              newUnmatched.push(elem);
              if (mapped) {
                map.push(i);
              }
            }
          }
        }
        return newUnmatched;
      }
      function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
        if (postFilter && !postFilter[expando]) {
          postFilter = setMatcher(postFilter);
        }
        if (postFinder && !postFinder[expando]) {
          postFinder = setMatcher(postFinder, postSelector);
        }
        return markFunction(function (seed, results, context, xml) {
          var temp,
            i,
            elem,
            preMap = [],
            postMap = [],
            preexisting = results.length,
            elems = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),
            matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,
            matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
          if (matcher) {
            matcher(matcherIn, matcherOut, context, xml);
          }
          if (postFilter) {
            temp = condense(matcherOut, postMap);
            postFilter(temp, [], context, xml);
            i = temp.length;
            while (i--) {
              if (elem = temp[i]) {
                matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);
              }
            }
          }
          if (seed) {
            if (postFinder || preFilter) {
              if (postFinder) {
                temp = [];
                i = matcherOut.length;
                while (i--) {
                  if (elem = matcherOut[i]) {
                    temp.push(matcherIn[i] = elem);
                  }
                }
                postFinder(null, matcherOut = [], temp, xml);
              }
              i = matcherOut.length;
              while (i--) {
                if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i]) > -1) {
                  seed[temp] = !(results[temp] = elem);
                }
              }
            }
          } else {
            matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);
            if (postFinder) {
              postFinder(null, results, matcherOut, xml);
            } else {
              push.apply(results, matcherOut);
            }
          }
        });
      }
      function matcherFromTokens(tokens) {
        var checkContext,
          matcher,
          j,
          len = tokens.length,
          leadingRelative = Expr.relative[tokens[0].type],
          implicitRelative = leadingRelative || Expr.relative[" "],
          i = leadingRelative ? 1 : 0,
          matchContext = addCombinator(function (elem) {
            return elem === checkContext;
          }, implicitRelative, true),
          matchAnyContext = addCombinator(function (elem) {
            return indexOf.call(checkContext, elem) > -1;
          }, implicitRelative, true),
          matchers = [function (elem, context, xml) {
            return !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
          }];
        for (; i < len; i++) {
          if (matcher = Expr.relative[tokens[i].type]) {
            matchers = [addCombinator(elementMatcher(matchers), matcher)];
          } else {
            matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);
            if (matcher[expando]) {
              j = ++i;
              for (; j < len; j++) {
                if (Expr.relative[tokens[j].type]) {
                  break;
                }
              }
              return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({
                value: tokens[i - 2].type === " " ? "*" : ""
              })).replace(rtrim, "$1"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));
            }
            matchers.push(matcher);
          }
        }
        return elementMatcher(matchers);
      }
      function matcherFromGroupMatchers(elementMatchers, setMatchers) {
        var bySet = setMatchers.length > 0,
          byElement = elementMatchers.length > 0,
          superMatcher = function (seed, context, xml, results, outermost) {
            var elem,
              j,
              matcher,
              matchedCount = 0,
              i = "0",
              unmatched = seed && [],
              setMatched = [],
              contextBackup = outermostContext,
              elems = seed || byElement && Expr.find["TAG"]("*", outermost),
              dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,
              len = elems.length;
            if (outermost) {
              outermostContext = context !== document && context;
            }
            for (; i !== len && (elem = elems[i]) != null; i++) {
              if (byElement && elem) {
                j = 0;
                while (matcher = elementMatchers[j++]) {
                  if (matcher(elem, context, xml)) {
                    results.push(elem);
                    break;
                  }
                }
                if (outermost) {
                  dirruns = dirrunsUnique;
                }
              }
              if (bySet) {
                if (elem = !matcher && elem) {
                  matchedCount--;
                }
                if (seed) {
                  unmatched.push(elem);
                }
              }
            }
            matchedCount += i;
            if (bySet && i !== matchedCount) {
              j = 0;
              while (matcher = setMatchers[j++]) {
                matcher(unmatched, setMatched, context, xml);
              }
              if (seed) {
                if (matchedCount > 0) {
                  while (i--) {
                    if (!(unmatched[i] || setMatched[i])) {
                      setMatched[i] = pop.call(results);
                    }
                  }
                }
                setMatched = condense(setMatched);
              }
              push.apply(results, setMatched);
              if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {
                Sizzle.uniqueSort(results);
              }
            }
            if (outermost) {
              dirruns = dirrunsUnique;
              outermostContext = contextBackup;
            }
            return unmatched;
          };
        return bySet ? markFunction(superMatcher) : superMatcher;
      }
      compile = Sizzle.compile = function (selector, match) {
        var i,
          setMatchers = [],
          elementMatchers = [],
          cached = compilerCache[selector + " "];
        if (!cached) {
          if (!match) {
            match = tokenize(selector);
          }
          i = match.length;
          while (i--) {
            cached = matcherFromTokens(match[i]);
            if (cached[expando]) {
              setMatchers.push(cached);
            } else {
              elementMatchers.push(cached);
            }
          }
          cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
          cached.selector = selector;
        }
        return cached;
      };
      select = Sizzle.select = function (selector, context, results, seed) {
        var i,
          tokens,
          token,
          type,
          find,
          compiled = typeof selector === "function" && selector,
          match = !seed && tokenize(selector = compiled.selector || selector);
        results = results || [];
        if (match.length === 1) {
          tokens = match[0] = match[0].slice(0);
          if (tokens.length > 2 && (token = tokens[0]).type === "ID" && support.getById && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
            context = (Expr.find["ID"](token.matches[0].replace(runescape, funescape), context) || [])[0];
            if (!context) {
              return results;
            } else if (compiled) {
              context = context.parentNode;
            }
            selector = selector.slice(tokens.shift().value.length);
          }
          i = matchExpr["needsContext"].test(selector) ? 0 : tokens.length;
          while (i--) {
            token = tokens[i];
            if (Expr.relative[type = token.type]) {
              break;
            }
            if (find = Expr.find[type]) {
              if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {
                tokens.splice(i, 1);
                selector = seed.length && toSelector(tokens);
                if (!selector) {
                  push.apply(results, seed);
                  return results;
                }
                break;
              }
            }
          }
        }
        (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, rsibling.test(selector) && testContext(context.parentNode) || context);
        return results;
      };
      support.sortStable = expando.split("").sort(sortOrder).join("") === expando;
      support.detectDuplicates = !!hasDuplicate;
      setDocument();
      support.sortDetached = assert(function (div1) {
        return div1.compareDocumentPosition(document.createElement("div")) & 1;
      });
      if (!assert(function (div) {
        div.innerHTML = "<a href='#'></a>";
        return div.firstChild.getAttribute("href") === "#";
      })) {
        addHandle("type|href|height|width", function (elem, name, isXML) {
          if (!isXML) {
            return elem.getAttribute(name, name.toLowerCase() === "type" ? 1 : 2);
          }
        });
      }
      if (!support.attributes || !assert(function (div) {
        div.innerHTML = "<input/>";
        div.firstChild.setAttribute("value", "");
        return div.firstChild.getAttribute("value") === "";
      })) {
        addHandle("value", function (elem, name, isXML) {
          if (!isXML && elem.nodeName.toLowerCase() === "input") {
            return elem.defaultValue;
          }
        });
      }
      if (!assert(function (div) {
        return div.getAttribute("disabled") == null;
      })) {
        addHandle(booleans, function (elem, name, isXML) {
          var val;
          if (!isXML) {
            return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;
          }
        });
      }
      return Sizzle;
    }(window);
    jQuery.find = Sizzle;
    jQuery.expr = Sizzle.selectors;
    jQuery.expr[":"] = jQuery.expr.pseudos;
    jQuery.unique = Sizzle.uniqueSort;
    jQuery.text = Sizzle.getText;
    jQuery.isXMLDoc = Sizzle.isXML;
    jQuery.contains = Sizzle.contains;
    var rneedsContext = jQuery.expr.match.needsContext;
    var rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/;
    var risSimple = /^.[^:#\[\.,]*$/;
    function winnow(elements, qualifier, not) {
      if (jQuery.isFunction(qualifier)) {
        return jQuery.grep(elements, function (elem, i) {
          return !!qualifier.call(elem, i, elem) !== not;
        });
      }
      if (qualifier.nodeType) {
        return jQuery.grep(elements, function (elem) {
          return elem === qualifier !== not;
        });
      }
      if (typeof qualifier === "string") {
        if (risSimple.test(qualifier)) {
          return jQuery.filter(qualifier, elements, not);
        }
        qualifier = jQuery.filter(qualifier, elements);
      }
      return jQuery.grep(elements, function (elem) {
        return indexOf.call(qualifier, elem) >= 0 !== not;
      });
    }
    jQuery.filter = function (expr, elems, not) {
      var elem = elems[0];
      if (not) {
        expr = ":not(" + expr + ")";
      }
      return elems.length === 1 && elem.nodeType === 1 ? jQuery.find.matchesSelector(elem, expr) ? [elem] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {
        return elem.nodeType === 1;
      }));
    };
    jQuery.fn.extend({
      find: function (selector) {
        var i,
          len = this.length,
          ret = [],
          self = this;
        if (typeof selector !== "string") {
          return this.pushStack(jQuery(selector).filter(function () {
            for (i = 0; i < len; i++) {
              if (jQuery.contains(self[i], this)) {
                return true;
              }
            }
          }));
        }
        for (i = 0; i < len; i++) {
          jQuery.find(selector, self[i], ret);
        }
        ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret);
        ret.selector = this.selector ? this.selector + " " + selector : selector;
        return ret;
      },
      filter: function (selector) {
        return this.pushStack(winnow(this, selector || [], false));
      },
      not: function (selector) {
        return this.pushStack(winnow(this, selector || [], true));
      },
      is: function (selector) {
        return !!winnow(this, typeof selector === "string" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;
      }
    });
    var rootjQuery,
      rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
      init = jQuery.fn.init = function (selector, context) {
        var match, elem;
        if (!selector) {
          return this;
        }
        if (typeof selector === "string") {
          if (selector[0] === "<" && selector[selector.length - 1] === ">" && selector.length >= 3) {
            match = [null, selector, null];
          } else {
            match = rquickExpr.exec(selector);
          }
          if (match && (match[1] || !context)) {
            if (match[1]) {
              context = context instanceof jQuery ? context[0] : context;
              jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));
              if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {
                for (match in context) {
                  if (jQuery.isFunction(this[match])) {
                    this[match](context[match]);
                  } else {
                    this.attr(match, context[match]);
                  }
                }
              }
              return this;
            } else {
              elem = document.getElementById(match[2]);
              if (elem && elem.parentNode) {
                this.length = 1;
                this[0] = elem;
              }
              this.context = document;
              this.selector = selector;
              return this;
            }
          } else if (!context || context.jquery) {
            return (context || rootjQuery).find(selector);
          } else {
            return this.constructor(context).find(selector);
          }
        } else if (selector.nodeType) {
          this.context = this[0] = selector;
          this.length = 1;
          return this;
        } else if (jQuery.isFunction(selector)) {
          return typeof rootjQuery.ready !== "undefined" ? rootjQuery.ready(selector) : selector(jQuery);
        }
        if (selector.selector !== undefined) {
          this.selector = selector.selector;
          this.context = selector.context;
        }
        return jQuery.makeArray(selector, this);
      };
    init.prototype = jQuery.fn;
    rootjQuery = jQuery(document);
    var rparentsprev = /^(?:parents|prev(?:Until|All))/,
      guaranteedUnique = {
        children: true,
        contents: true,
        next: true,
        prev: true
      };
    jQuery.extend({
      dir: function (elem, dir, until) {
        var matched = [],
          truncate = until !== undefined;
        while ((elem = elem[dir]) && elem.nodeType !== 9) {
          if (elem.nodeType === 1) {
            if (truncate && jQuery(elem).is(until)) {
              break;
            }
            matched.push(elem);
          }
        }
        return matched;
      },
      sibling: function (n, elem) {
        var matched = [];
        for (; n; n = n.nextSibling) {
          if (n.nodeType === 1 && n !== elem) {
            matched.push(n);
          }
        }
        return matched;
      }
    });
    jQuery.fn.extend({
      has: function (target) {
        var targets = jQuery(target, this),
          l = targets.length;
        return this.filter(function () {
          var i = 0;
          for (; i < l; i++) {
            if (jQuery.contains(this, targets[i])) {
              return true;
            }
          }
        });
      },
      closest: function (selectors, context) {
        var cur,
          i = 0,
          l = this.length,
          matched = [],
          pos = rneedsContext.test(selectors) || typeof selectors !== "string" ? jQuery(selectors, context || this.context) : 0;
        for (; i < l; i++) {
          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {
            if (cur.nodeType < 11 && (pos ? pos.index(cur) > -1 : cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {
              matched.push(cur);
              break;
            }
          }
        }
        return this.pushStack(matched.length > 1 ? jQuery.unique(matched) : matched);
      },
      index: function (elem) {
        if (!elem) {
          return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        }
        if (typeof elem === "string") {
          return indexOf.call(jQuery(elem), this[0]);
        }
        return indexOf.call(this, elem.jquery ? elem[0] : elem);
      },
      add: function (selector, context) {
        return this.pushStack(jQuery.unique(jQuery.merge(this.get(), jQuery(selector, context))));
      },
      addBack: function (selector) {
        return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));
      }
    });
    function sibling(cur, dir) {
      while ((cur = cur[dir]) && cur.nodeType !== 1) {}
      return cur;
    }
    jQuery.each({
      parent: function (elem) {
        var parent = elem.parentNode;
        return parent && parent.nodeType !== 11 ? parent : null;
      },
      parents: function (elem) {
        return jQuery.dir(elem, "parentNode");
      },
      parentsUntil: function (elem, i, until) {
        return jQuery.dir(elem, "parentNode", until);
      },
      next: function (elem) {
        return sibling(elem, "nextSibling");
      },
      prev: function (elem) {
        return sibling(elem, "previousSibling");
      },
      nextAll: function (elem) {
        return jQuery.dir(elem, "nextSibling");
      },
      prevAll: function (elem) {
        return jQuery.dir(elem, "previousSibling");
      },
      nextUntil: function (elem, i, until) {
        return jQuery.dir(elem, "nextSibling", until);
      },
      prevUntil: function (elem, i, until) {
        return jQuery.dir(elem, "previousSibling", until);
      },
      siblings: function (elem) {
        return jQuery.sibling((elem.parentNode || {}).firstChild, elem);
      },
      children: function (elem) {
        return jQuery.sibling(elem.firstChild);
      },
      contents: function (elem) {
        return elem.contentDocument || jQuery.merge([], elem.childNodes);
      }
    }, function (name, fn) {
      jQuery.fn[name] = function (until, selector) {
        var matched = jQuery.map(this, fn, until);
        if (name.slice(-5) !== "Until") {
          selector = until;
        }
        if (selector && typeof selector === "string") {
          matched = jQuery.filter(selector, matched);
        }
        if (this.length > 1) {
          if (!guaranteedUnique[name]) {
            jQuery.unique(matched);
          }
          if (rparentsprev.test(name)) {
            matched.reverse();
          }
        }
        return this.pushStack(matched);
      };
    });
    var rnotwhite = /\S+/g;
    var optionsCache = {};
    function createOptions(options) {
      var object = optionsCache[options] = {};
      jQuery.each(options.match(rnotwhite) || [], function (_, flag) {
        object[flag] = true;
      });
      return object;
    }
    jQuery.Callbacks = function (options) {
      options = typeof options === "string" ? optionsCache[options] || createOptions(options) : jQuery.extend({}, options);
      var memory,
        fired,
        firing,
        firingStart,
        firingLength,
        firingIndex,
        list = [],
        stack = !options.once && [],
        fire = function (data) {
          memory = options.memory && data;
          fired = true;
          firingIndex = firingStart || 0;
          firingStart = 0;
          firingLength = list.length;
          firing = true;
          for (; list && firingIndex < firingLength; firingIndex++) {
            if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {
              memory = false;
              break;
            }
          }
          firing = false;
          if (list) {
            if (stack) {
              if (stack.length) {
                fire(stack.shift());
              }
            } else if (memory) {
              list = [];
            } else {
              self.disable();
            }
          }
        },
        self = {
          add: function () {
            if (list) {
              var start = list.length;
              (function add(args) {
                jQuery.each(args, function (_, arg) {
                  var type = jQuery.type(arg);
                  if (type === "function") {
                    if (!options.unique || !self.has(arg)) {
                      list.push(arg);
                    }
                  } else if (arg && arg.length && type !== "string") {
                    add(arg);
                  }
                });
              })(arguments);
              if (firing) {
                firingLength = list.length;
              } else if (memory) {
                firingStart = start;
                fire(memory);
              }
            }
            return this;
          },
          remove: function () {
            if (list) {
              jQuery.each(arguments, function (_, arg) {
                var index;
                while ((index = jQuery.inArray(arg, list, index)) > -1) {
                  list.splice(index, 1);
                  if (firing) {
                    if (index <= firingLength) {
                      firingLength--;
                    }
                    if (index <= firingIndex) {
                      firingIndex--;
                    }
                  }
                }
              });
            }
            return this;
          },
          has: function (fn) {
            return fn ? jQuery.inArray(fn, list) > -1 : !!(list && list.length);
          },
          empty: function () {
            list = [];
            firingLength = 0;
            return this;
          },
          disable: function () {
            list = stack = memory = undefined;
            return this;
          },
          disabled: function () {
            return !list;
          },
          lock: function () {
            stack = undefined;
            if (!memory) {
              self.disable();
            }
            return this;
          },
          locked: function () {
            return !stack;
          },
          fireWith: function (context, args) {
            if (list && (!fired || stack)) {
              args = args || [];
              args = [context, args.slice ? args.slice() : args];
              if (firing) {
                stack.push(args);
              } else {
                fire(args);
              }
            }
            return this;
          },
          fire: function () {
            self.fireWith(this, arguments);
            return this;
          },
          fired: function () {
            return !!fired;
          }
        };
      return self;
    };
    jQuery.extend({
      Deferred: function (func) {
        var tuples = [["resolve", "done", jQuery.Callbacks("once memory"), "resolved"], ["reject", "fail", jQuery.Callbacks("once memory"), "rejected"], ["notify", "progress", jQuery.Callbacks("memory")]],
          state = "pending",
          promise = {
            state: function () {
              return state;
            },
            always: function () {
              deferred.done(arguments).fail(arguments);
              return this;
            },
            then: function () {
              var fns = arguments;
              return jQuery.Deferred(function (newDefer) {
                jQuery.each(tuples, function (i, tuple) {
                  var fn = jQuery.isFunction(fns[i]) && fns[i];
                  deferred[tuple[1]](function () {
                    var returned = fn && fn.apply(this, arguments);
                    if (returned && jQuery.isFunction(returned.promise)) {
                      returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify);
                    } else {
                      newDefer[tuple[0] + "With"](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);
                    }
                  });
                });
                fns = null;
              }).promise();
            },
            promise: function (obj) {
              return obj != null ? jQuery.extend(obj, promise) : promise;
            }
          },
          deferred = {};
        promise.pipe = promise.then;
        jQuery.each(tuples, function (i, tuple) {
          var list = tuple[2],
            stateString = tuple[3];
          promise[tuple[1]] = list.add;
          if (stateString) {
            list.add(function () {
              state = stateString;
            }, tuples[i ^ 1][2].disable, tuples[2][2].lock);
          }
          deferred[tuple[0]] = function () {
            deferred[tuple[0] + "With"](this === deferred ? promise : this, arguments);
            return this;
          };
          deferred[tuple[0] + "With"] = list.fireWith;
        });
        promise.promise(deferred);
        if (func) {
          func.call(deferred, deferred);
        }
        return deferred;
      },
      when: function (subordinate) {
        var i = 0,
          resolveValues = slice.call(arguments),
          length = resolveValues.length,
          remaining = length !== 1 || subordinate && jQuery.isFunction(subordinate.promise) ? length : 0,
          deferred = remaining === 1 ? subordinate : jQuery.Deferred(),
          updateFunc = function (i, contexts, values) {
            return function (value) {
              contexts[i] = this;
              values[i] = arguments.length > 1 ? slice.call(arguments) : value;
              if (values === progressValues) {
                deferred.notifyWith(contexts, values);
              } else if (! --remaining) {
                deferred.resolveWith(contexts, values);
              }
            };
          },
          progressValues,
          progressContexts,
          resolveContexts;
        if (length > 1) {
          progressValues = new Array(length);
          progressContexts = new Array(length);
          resolveContexts = new Array(length);
          for (; i < length; i++) {
            if (resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)) {
              resolveValues[i].promise().done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject).progress(updateFunc(i, progressContexts, progressValues));
            } else {
              --remaining;
            }
          }
        }
        if (!remaining) {
          deferred.resolveWith(resolveContexts, resolveValues);
        }
        return deferred.promise();
      }
    });
    var readyList;
    jQuery.fn.ready = function (fn) {
      jQuery.ready.promise().done(fn);
      return this;
    };
    jQuery.extend({
      isReady: false,
      readyWait: 1,
      holdReady: function (hold) {
        if (hold) {
          jQuery.readyWait++;
        } else {
          jQuery.ready(true);
        }
      },
      ready: function (wait) {
        if (wait === true ? --jQuery.readyWait : jQuery.isReady) {
          return;
        }
        jQuery.isReady = true;
        if (wait !== true && --jQuery.readyWait > 0) {
          return;
        }
        readyList.resolveWith(document, [jQuery]);
        if (jQuery.fn.triggerHandler) {
          jQuery(document).triggerHandler("ready");
          jQuery(document).off("ready");
        }
      }
    });
    function completed() {
      document.removeEventListener("DOMContentLoaded", completed, false);
      window.removeEventListener("load", completed, false);
      jQuery.ready();
    }
    jQuery.ready.promise = function (obj) {
      if (!readyList) {
        readyList = jQuery.Deferred();
        if (document.readyState === "complete") {
          setTimeout(jQuery.ready);
        } else {
          document.addEventListener("DOMContentLoaded", completed, false);
          window.addEventListener("load", completed, false);
        }
      }
      return readyList.promise(obj);
    };
    jQuery.ready.promise();
    var access = jQuery.access = function (elems, fn, key, value, chainable, emptyGet, raw) {
      var i = 0,
        len = elems.length,
        bulk = key == null;
      if (jQuery.type(key) === "object") {
        chainable = true;
        for (i in key) {
          jQuery.access(elems, fn, i, key[i], true, emptyGet, raw);
        }
      } else if (value !== undefined) {
        chainable = true;
        if (!jQuery.isFunction(value)) {
          raw = true;
        }
        if (bulk) {
          if (raw) {
            fn.call(elems, value);
            fn = null;
          } else {
            bulk = fn;
            fn = function (elem, key, value) {
              return bulk.call(jQuery(elem), value);
            };
          }
        }
        if (fn) {
          for (; i < len; i++) {
            fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
          }
        }
      }
      return chainable ? elems : bulk ? fn.call(elems) : len ? fn(elems[0], key) : emptyGet;
    };
    jQuery.acceptData = function (owner) {
      return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;
    };
    function Data() {
      Object.defineProperty(this.cache = {}, 0, {
        get: function () {
          return {};
        }
      });
      this.expando = jQuery.expando + Math.random();
    }
    Data.uid = 1;
    Data.accepts = jQuery.acceptData;
    Data.prototype = {
      key: function (owner) {
        if (!Data.accepts(owner)) {
          return 0;
        }
        var descriptor = {},
          unlock = owner[this.expando];
        if (!unlock) {
          unlock = Data.uid++;
          try {
            descriptor[this.expando] = {
              value: unlock
            };
            Object.defineProperties(owner, descriptor);
          } catch (e) {
            descriptor[this.expando] = unlock;
            jQuery.extend(owner, descriptor);
          }
        }
        if (!this.cache[unlock]) {
          this.cache[unlock] = {};
        }
        return unlock;
      },
      set: function (owner, data, value) {
        var prop,
          unlock = this.key(owner),
          cache = this.cache[unlock];
        if (typeof data === "string") {
          cache[data] = value;
        } else {
          if (jQuery.isEmptyObject(cache)) {
            jQuery.extend(this.cache[unlock], data);
          } else {
            for (prop in data) {
              cache[prop] = data[prop];
            }
          }
        }
        return cache;
      },
      get: function (owner, key) {
        var cache = this.cache[this.key(owner)];
        return key === undefined ? cache : cache[key];
      },
      access: function (owner, key, value) {
        var stored;
        if (key === undefined || key && typeof key === "string" && value === undefined) {
          stored = this.get(owner, key);
          return stored !== undefined ? stored : this.get(owner, jQuery.camelCase(key));
        }
        this.set(owner, key, value);
        return value !== undefined ? value : key;
      },
      remove: function (owner, key) {
        var i,
          name,
          camel,
          unlock = this.key(owner),
          cache = this.cache[unlock];
        if (key === undefined) {
          this.cache[unlock] = {};
        } else {
          if (jQuery.isArray(key)) {
            name = key.concat(key.map(jQuery.camelCase));
          } else {
            camel = jQuery.camelCase(key);
            if (key in cache) {
              name = [key, camel];
            } else {
              name = camel;
              name = name in cache ? [name] : name.match(rnotwhite) || [];
            }
          }
          i = name.length;
          while (i--) {
            delete cache[name[i]];
          }
        }
      },
      hasData: function (owner) {
        return !jQuery.isEmptyObject(this.cache[owner[this.expando]] || {});
      },
      discard: function (owner) {
        if (owner[this.expando]) {
          delete this.cache[owner[this.expando]];
        }
      }
    };
    var data_priv = new Data();
    var data_user = new Data();
    var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      rmultiDash = /([A-Z])/g;
    function dataAttr(elem, key, data) {
      var name;
      if (data === undefined && elem.nodeType === 1) {
        name = "data-" + key.replace(rmultiDash, "-$1").toLowerCase();
        data = elem.getAttribute(name);
        if (typeof data === "string") {
          try {
            data = data === "true" ? true : data === "false" ? false : data === "null" ? null : +data + "" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data;
          } catch (e) {}
          data_user.set(elem, key, data);
        } else {
          data = undefined;
        }
      }
      return data;
    }
    jQuery.extend({
      hasData: function (elem) {
        return data_user.hasData(elem) || data_priv.hasData(elem);
      },
      data: function (elem, name, data) {
        return data_user.access(elem, name, data);
      },
      removeData: function (elem, name) {
        data_user.remove(elem, name);
      },
      _data: function (elem, name, data) {
        return data_priv.access(elem, name, data);
      },
      _removeData: function (elem, name) {
        data_priv.remove(elem, name);
      }
    });
    jQuery.fn.extend({
      data: function (key, value) {
        var i,
          name,
          data,
          elem = this[0],
          attrs = elem && elem.attributes;
        if (key === undefined) {
          if (this.length) {
            data = data_user.get(elem);
            if (elem.nodeType === 1 && !data_priv.get(elem, "hasDataAttrs")) {
              i = attrs.length;
              while (i--) {
                if (attrs[i]) {
                  name = attrs[i].name;
                  if (name.indexOf("data-") === 0) {
                    name = jQuery.camelCase(name.slice(5));
                    dataAttr(elem, name, data[name]);
                  }
                }
              }
              data_priv.set(elem, "hasDataAttrs", true);
            }
          }
          return data;
        }
        if (typeof key === "object") {
          return this.each(function () {
            data_user.set(this, key);
          });
        }
        return access(this, function (value) {
          var data,
            camelKey = jQuery.camelCase(key);
          if (elem && value === undefined) {
            data = data_user.get(elem, key);
            if (data !== undefined) {
              return data;
            }
            data = data_user.get(elem, camelKey);
            if (data !== undefined) {
              return data;
            }
            data = dataAttr(elem, camelKey, undefined);
            if (data !== undefined) {
              return data;
            }
            return;
          }
          this.each(function () {
            var data = data_user.get(this, camelKey);
            data_user.set(this, camelKey, value);
            if (key.indexOf("-") !== -1 && data !== undefined) {
              data_user.set(this, key, value);
            }
          });
        }, null, value, arguments.length > 1, null, true);
      },
      removeData: function (key) {
        return this.each(function () {
          data_user.remove(this, key);
        });
      }
    });
    jQuery.extend({
      queue: function (elem, type, data) {
        var queue;
        if (elem) {
          type = (type || "fx") + "queue";
          queue = data_priv.get(elem, type);
          if (data) {
            if (!queue || jQuery.isArray(data)) {
              queue = data_priv.access(elem, type, jQuery.makeArray(data));
            } else {
              queue.push(data);
            }
          }
          return queue || [];
        }
      },
      dequeue: function (elem, type) {
        type = type || "fx";
        var queue = jQuery.queue(elem, type),
          startLength = queue.length,
          fn = queue.shift(),
          hooks = jQuery._queueHooks(elem, type),
          next = function () {
            jQuery.dequeue(elem, type);
          };
        if (fn === "inprogress") {
          fn = queue.shift();
          startLength--;
        }
        if (fn) {
          if (type === "fx") {
            queue.unshift("inprogress");
          }
          delete hooks.stop;
          fn.call(elem, next, hooks);
        }
        if (!startLength && hooks) {
          hooks.empty.fire();
        }
      },
      _queueHooks: function (elem, type) {
        var key = type + "queueHooks";
        return data_priv.get(elem, key) || data_priv.access(elem, key, {
          empty: jQuery.Callbacks("once memory").add(function () {
            data_priv.remove(elem, [type + "queue", key]);
          })
        });
      }
    });
    jQuery.fn.extend({
      queue: function (type, data) {
        var setter = 2;
        if (typeof type !== "string") {
          data = type;
          type = "fx";
          setter--;
        }
        if (arguments.length < setter) {
          return jQuery.queue(this[0], type);
        }
        return data === undefined ? this : this.each(function () {
          var queue = jQuery.queue(this, type, data);
          jQuery._queueHooks(this, type);
          if (type === "fx" && queue[0] !== "inprogress") {
            jQuery.dequeue(this, type);
          }
        });
      },
      dequeue: function (type) {
        return this.each(function () {
          jQuery.dequeue(this, type);
        });
      },
      clearQueue: function (type) {
        return this.queue(type || "fx", []);
      },
      promise: function (type, obj) {
        var tmp,
          count = 1,
          defer = jQuery.Deferred(),
          elements = this,
          i = this.length,
          resolve = function () {
            if (! --count) {
              defer.resolveWith(elements, [elements]);
            }
          };
        if (typeof type !== "string") {
          obj = type;
          type = undefined;
        }
        type = type || "fx";
        while (i--) {
          tmp = data_priv.get(elements[i], type + "queueHooks");
          if (tmp && tmp.empty) {
            count++;
            tmp.empty.add(resolve);
          }
        }
        resolve();
        return defer.promise(obj);
      }
    });
    var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
    var cssExpand = ["Top", "Right", "Bottom", "Left"];
    var isHidden = function (elem, el) {
      elem = el || elem;
      return jQuery.css(elem, "display") === "none" || !jQuery.contains(elem.ownerDocument, elem);
    };
    var rcheckableType = /^(?:checkbox|radio)$/i;
    (function () {
      var fragment = document.createDocumentFragment(),
        div = fragment.appendChild(document.createElement("div")),
        input = document.createElement("input");
      input.setAttribute("type", "radio");
      input.setAttribute("checked", "checked");
      input.setAttribute("name", "t");
      div.appendChild(input);
      support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;
      div.innerHTML = "<textarea>x</textarea>";
      support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;
    })();
    var strundefined = typeof undefined;
    support.focusinBubbles = "onfocusin" in window;
    var rkeyEvent = /^key/,
      rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,
      rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
      rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;
    function returnTrue() {
      return true;
    }
    function returnFalse() {
      return false;
    }
    function safeActiveElement() {
      try {
        return document.activeElement;
      } catch (err) {}
    }
    jQuery.event = {
      global: {},
      add: function (elem, types, handler, data, selector) {
        var handleObjIn,
          eventHandle,
          tmp,
          events,
          t,
          handleObj,
          special,
          handlers,
          type,
          namespaces,
          origType,
          elemData = data_priv.get(elem);
        if (!elemData) {
          return;
        }
        if (handler.handler) {
          handleObjIn = handler;
          handler = handleObjIn.handler;
          selector = handleObjIn.selector;
        }
        if (!handler.guid) {
          handler.guid = jQuery.guid++;
        }
        if (!(events = elemData.events)) {
          events = elemData.events = {};
        }
        if (!(eventHandle = elemData.handle)) {
          eventHandle = elemData.handle = function (e) {
            return typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;
          };
        }
        types = (types || "").match(rnotwhite) || [""];
        t = types.length;
        while (t--) {
          tmp = rtypenamespace.exec(types[t]) || [];
          type = origType = tmp[1];
          namespaces = (tmp[2] || "").split(".").sort();
          if (!type) {
            continue;
          }
          special = jQuery.event.special[type] || {};
          type = (selector ? special.delegateType : special.bindType) || type;
          special = jQuery.event.special[type] || {};
          handleObj = jQuery.extend({
            type: type,
            origType: origType,
            data: data,
            handler: handler,
            guid: handler.guid,
            selector: selector,
            needsContext: selector && jQuery.expr.match.needsContext.test(selector),
            namespace: namespaces.join(".")
          }, handleObjIn);
          if (!(handlers = events[type])) {
            handlers = events[type] = [];
            handlers.delegateCount = 0;
            if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
              if (elem.addEventListener) {
                elem.addEventListener(type, eventHandle, false);
              }
            }
          }
          if (special.add) {
            special.add.call(elem, handleObj);
            if (!handleObj.handler.guid) {
              handleObj.handler.guid = handler.guid;
            }
          }
          if (selector) {
            handlers.splice(handlers.delegateCount++, 0, handleObj);
          } else {
            handlers.push(handleObj);
          }
          jQuery.event.global[type] = true;
        }
      },
      remove: function (elem, types, handler, selector, mappedTypes) {
        var j,
          origCount,
          tmp,
          events,
          t,
          handleObj,
          special,
          handlers,
          type,
          namespaces,
          origType,
          elemData = data_priv.hasData(elem) && data_priv.get(elem);
        if (!elemData || !(events = elemData.events)) {
          return;
        }
        types = (types || "").match(rnotwhite) || [""];
        t = types.length;
        while (t--) {
          tmp = rtypenamespace.exec(types[t]) || [];
          type = origType = tmp[1];
          namespaces = (tmp[2] || "").split(".").sort();
          if (!type) {
            for (type in events) {
              jQuery.event.remove(elem, type + types[t], handler, selector, true);
            }
            continue;
          }
          special = jQuery.event.special[type] || {};
          type = (selector ? special.delegateType : special.bindType) || type;
          handlers = events[type] || [];
          tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");
          origCount = j = handlers.length;
          while (j--) {
            handleObj = handlers[j];
            if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === "**" && handleObj.selector)) {
              handlers.splice(j, 1);
              if (handleObj.selector) {
                handlers.delegateCount--;
              }
              if (special.remove) {
                special.remove.call(elem, handleObj);
              }
            }
          }
          if (origCount && !handlers.length) {
            if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {
              jQuery.removeEvent(elem, type, elemData.handle);
            }
            delete events[type];
          }
        }
        if (jQuery.isEmptyObject(events)) {
          delete elemData.handle;
          data_priv.remove(elem, "events");
        }
      },
      trigger: function (event, data, elem, onlyHandlers) {
        var i,
          cur,
          tmp,
          bubbleType,
          ontype,
          handle,
          special,
          eventPath = [elem || document],
          type = hasOwn.call(event, "type") ? event.type : event,
          namespaces = hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
        cur = tmp = elem = elem || document;
        if (elem.nodeType === 3 || elem.nodeType === 8) {
          return;
        }
        if (rfocusMorph.test(type + jQuery.event.triggered)) {
          return;
        }
        if (type.indexOf(".") >= 0) {
          namespaces = type.split(".");
          type = namespaces.shift();
          namespaces.sort();
        }
        ontype = type.indexOf(":") < 0 && "on" + type;
        event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === "object" && event);
        event.isTrigger = onlyHandlers ? 2 : 3;
        event.namespace = namespaces.join(".");
        event.namespace_re = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
        event.result = undefined;
        if (!event.target) {
          event.target = elem;
        }
        data = data == null ? [event] : jQuery.makeArray(data, [event]);
        special = jQuery.event.special[type] || {};
        if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
          return;
        }
        if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
          bubbleType = special.delegateType || type;
          if (!rfocusMorph.test(bubbleType + type)) {
            cur = cur.parentNode;
          }
          for (; cur; cur = cur.parentNode) {
            eventPath.push(cur);
            tmp = cur;
          }
          if (tmp === (elem.ownerDocument || document)) {
            eventPath.push(tmp.defaultView || tmp.parentWindow || window);
          }
        }
        i = 0;
        while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {
          event.type = i > 1 ? bubbleType : special.bindType || type;
          handle = (data_priv.get(cur, "events") || {})[event.type] && data_priv.get(cur, "handle");
          if (handle) {
            handle.apply(cur, data);
          }
          handle = ontype && cur[ontype];
          if (handle && handle.apply && jQuery.acceptData(cur)) {
            event.result = handle.apply(cur, data);
            if (event.result === false) {
              event.preventDefault();
            }
          }
        }
        event.type = type;
        if (!onlyHandlers && !event.isDefaultPrevented()) {
          if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && jQuery.acceptData(elem)) {
            if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {
              tmp = elem[ontype];
              if (tmp) {
                elem[ontype] = null;
              }
              jQuery.event.triggered = type;
              elem[type]();
              jQuery.event.triggered = undefined;
              if (tmp) {
                elem[ontype] = tmp;
              }
            }
          }
        }
        return event.result;
      },
      dispatch: function (event) {
        event = jQuery.event.fix(event);
        var i,
          j,
          ret,
          matched,
          handleObj,
          handlerQueue = [],
          args = slice.call(arguments),
          handlers = (data_priv.get(this, "events") || {})[event.type] || [],
          special = jQuery.event.special[event.type] || {};
        args[0] = event;
        event.delegateTarget = this;
        if (special.preDispatch && special.preDispatch.call(this, event) === false) {
          return;
        }
        handlerQueue = jQuery.event.handlers.call(this, event, handlers);
        i = 0;
        while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {
          event.currentTarget = matched.elem;
          j = 0;
          while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {
            if (!event.namespace_re || event.namespace_re.test(handleObj.namespace)) {
              event.handleObj = handleObj;
              event.data = handleObj.data;
              ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
              if (ret !== undefined) {
                if ((event.result = ret) === false) {
                  event.preventDefault();
                  event.stopPropagation();
                }
              }
            }
          }
        }
        if (special.postDispatch) {
          special.postDispatch.call(this, event);
        }
        return event.result;
      },
      handlers: function (event, handlers) {
        var i,
          matches,
          sel,
          handleObj,
          handlerQueue = [],
          delegateCount = handlers.delegateCount,
          cur = event.target;
        if (delegateCount && cur.nodeType && (!event.button || event.type !== "click")) {
          for (; cur !== this; cur = cur.parentNode || this) {
            if (cur.disabled !== true || event.type !== "click") {
              matches = [];
              for (i = 0; i < delegateCount; i++) {
                handleObj = handlers[i];
                sel = handleObj.selector + " ";
                if (matches[sel] === undefined) {
                  matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) >= 0 : jQuery.find(sel, this, null, [cur]).length;
                }
                if (matches[sel]) {
                  matches.push(handleObj);
                }
              }
              if (matches.length) {
                handlerQueue.push({
                  elem: cur,
                  handlers: matches
                });
              }
            }
          }
        }
        if (delegateCount < handlers.length) {
          handlerQueue.push({
            elem: this,
            handlers: handlers.slice(delegateCount)
          });
        }
        return handlerQueue;
      },
      props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
      fixHooks: {},
      keyHooks: {
        props: "char charCode key keyCode".split(" "),
        filter: function (event, original) {
          if (event.which == null) {
            event.which = original.charCode != null ? original.charCode : original.keyCode;
          }
          return event;
        }
      },
      mouseHooks: {
        props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
        filter: function (event, original) {
          var eventDoc,
            doc,
            body,
            button = original.button;
          if (event.pageX == null && original.clientX != null) {
            eventDoc = event.target.ownerDocument || document;
            doc = eventDoc.documentElement;
            body = eventDoc.body;
            event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
            event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
          }
          if (!event.which && button !== undefined) {
            event.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;
          }
          return event;
        }
      },
      fix: function (event) {
        if (event[jQuery.expando]) {
          return event;
        }
        var i,
          prop,
          copy,
          type = event.type,
          originalEvent = event,
          fixHook = this.fixHooks[type];
        if (!fixHook) {
          this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {};
        }
        copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;
        event = new jQuery.Event(originalEvent);
        i = copy.length;
        while (i--) {
          prop = copy[i];
          event[prop] = originalEvent[prop];
        }
        if (!event.target) {
          event.target = document;
        }
        if (event.target.nodeType === 3) {
          event.target = event.target.parentNode;
        }
        return fixHook.filter ? fixHook.filter(event, originalEvent) : event;
      },
      special: {
        load: {
          noBubble: true
        },
        focus: {
          trigger: function () {
            if (this !== safeActiveElement() && this.focus) {
              this.focus();
              return false;
            }
          },
          delegateType: "focusin"
        },
        blur: {
          trigger: function () {
            if (this === safeActiveElement() && this.blur) {
              this.blur();
              return false;
            }
          },
          delegateType: "focusout"
        },
        click: {
          trigger: function () {
            if (this.type === "checkbox" && this.click && jQuery.nodeName(this, "input")) {
              this.click();
              return false;
            }
          },
          _default: function (event) {
            return jQuery.nodeName(event.target, "a");
          }
        },
        beforeunload: {
          postDispatch: function (event) {
            if (event.result !== undefined && event.originalEvent) {
              event.originalEvent.returnValue = event.result;
            }
          }
        }
      },
      simulate: function (type, elem, event, bubble) {
        var e = jQuery.extend(new jQuery.Event(), event, {
          type: type,
          isSimulated: true,
          originalEvent: {}
        });
        if (bubble) {
          jQuery.event.trigger(e, null, elem);
        } else {
          jQuery.event.dispatch.call(elem, e);
        }
        if (e.isDefaultPrevented()) {
          event.preventDefault();
        }
      }
    };
    jQuery.removeEvent = function (elem, type, handle) {
      if (elem.removeEventListener) {
        elem.removeEventListener(type, handle, false);
      }
    };
    jQuery.Event = function (src, props) {
      if (!(this instanceof jQuery.Event)) {
        return new jQuery.Event(src, props);
      }
      if (src && src.type) {
        this.originalEvent = src;
        this.type = src.type;
        this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && src.returnValue === false ? returnTrue : returnFalse;
      } else {
        this.type = src;
      }
      if (props) {
        jQuery.extend(this, props);
      }
      this.timeStamp = src && src.timeStamp || jQuery.now();
      this[jQuery.expando] = true;
    };
    jQuery.Event.prototype = {
      isDefaultPrevented: returnFalse,
      isPropagationStopped: returnFalse,
      isImmediatePropagationStopped: returnFalse,
      preventDefault: function () {
        var e = this.originalEvent;
        this.isDefaultPrevented = returnTrue;
        if (e && e.preventDefault) {
          e.preventDefault();
        }
      },
      stopPropagation: function () {
        var e = this.originalEvent;
        this.isPropagationStopped = returnTrue;
        if (e && e.stopPropagation) {
          e.stopPropagation();
        }
      },
      stopImmediatePropagation: function () {
        var e = this.originalEvent;
        this.isImmediatePropagationStopped = returnTrue;
        if (e && e.stopImmediatePropagation) {
          e.stopImmediatePropagation();
        }
        this.stopPropagation();
      }
    };
    jQuery.each({
      mouseenter: "mouseover",
      mouseleave: "mouseout",
      pointerenter: "pointerover",
      pointerleave: "pointerout"
    }, function (orig, fix) {
      jQuery.event.special[orig] = {
        delegateType: fix,
        bindType: fix,
        handle: function (event) {
          var ret,
            target = this,
            related = event.relatedTarget,
            handleObj = event.handleObj;
          if (!related || related !== target && !jQuery.contains(target, related)) {
            event.type = handleObj.origType;
            ret = handleObj.handler.apply(this, arguments);
            event.type = fix;
          }
          return ret;
        }
      };
    });
    if (!support.focusinBubbles) {
      jQuery.each({
        focus: "focusin",
        blur: "focusout"
      }, function (orig, fix) {
        var handler = function (event) {
          jQuery.event.simulate(fix, event.target, jQuery.event.fix(event), true);
        };
        jQuery.event.special[fix] = {
          setup: function () {
            var doc = this.ownerDocument || this,
              attaches = data_priv.access(doc, fix);
            if (!attaches) {
              doc.addEventListener(orig, handler, true);
            }
            data_priv.access(doc, fix, (attaches || 0) + 1);
          },
          teardown: function () {
            var doc = this.ownerDocument || this,
              attaches = data_priv.access(doc, fix) - 1;
            if (!attaches) {
              doc.removeEventListener(orig, handler, true);
              data_priv.remove(doc, fix);
            } else {
              data_priv.access(doc, fix, attaches);
            }
          }
        };
      });
    }
    jQuery.fn.extend({
      on: function (types, selector, data, fn, one) {
        var origFn, type;
        if (typeof types === "object") {
          if (typeof selector !== "string") {
            data = data || selector;
            selector = undefined;
          }
          for (type in types) {
            this.on(type, selector, data, types[type], one);
          }
          return this;
        }
        if (data == null && fn == null) {
          fn = selector;
          data = selector = undefined;
        } else if (fn == null) {
          if (typeof selector === "string") {
            fn = data;
            data = undefined;
          } else {
            fn = data;
            data = selector;
            selector = undefined;
          }
        }
        if (fn === false) {
          fn = returnFalse;
        } else if (!fn) {
          return this;
        }
        if (one === 1) {
          origFn = fn;
          fn = function (event) {
            jQuery().off(event);
            return origFn.apply(this, arguments);
          };
          fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);
        }
        return this.each(function () {
          jQuery.event.add(this, types, fn, data, selector);
        });
      },
      one: function (types, selector, data, fn) {
        return this.on(types, selector, data, fn, 1);
      },
      off: function (types, selector, fn) {
        var handleObj, type;
        if (types && types.preventDefault && types.handleObj) {
          handleObj = types.handleObj;
          jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);
          return this;
        }
        if (typeof types === "object") {
          for (type in types) {
            this.off(type, selector, types[type]);
          }
          return this;
        }
        if (selector === false || typeof selector === "function") {
          fn = selector;
          selector = undefined;
        }
        if (fn === false) {
          fn = returnFalse;
        }
        return this.each(function () {
          jQuery.event.remove(this, types, fn, selector);
        });
      },
      trigger: function (type, data) {
        return this.each(function () {
          jQuery.event.trigger(type, data, this);
        });
      },
      triggerHandler: function (type, data) {
        var elem = this[0];
        if (elem) {
          return jQuery.event.trigger(type, data, elem, true);
        }
      }
    });
    var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
      rtagName = /<([\w:]+)/,
      rhtml = /<|&#?\w+;/,
      rnoInnerhtml = /<(?:script|style|link)/i,
      rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
      rscriptType = /^$|\/(?:java|ecma)script/i,
      rscriptTypeMasked = /^true\/(.*)/,
      rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
      wrapMap = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""]
      };
    wrapMap.optgroup = wrapMap.option;
    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
    wrapMap.th = wrapMap.td;
    function manipulationTarget(elem, content) {
      return jQuery.nodeName(elem, "table") && jQuery.nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr") ? elem.getElementsByTagName("tbody")[0] || elem.appendChild(elem.ownerDocument.createElement("tbody")) : elem;
    }
    function disableScript(elem) {
      elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
      return elem;
    }
    function restoreScript(elem) {
      var match = rscriptTypeMasked.exec(elem.type);
      if (match) {
        elem.type = match[1];
      } else {
        elem.removeAttribute("type");
      }
      return elem;
    }
    function setGlobalEval(elems, refElements) {
      var i = 0,
        l = elems.length;
      for (; i < l; i++) {
        data_priv.set(elems[i], "globalEval", !refElements || data_priv.get(refElements[i], "globalEval"));
      }
    }
    function cloneCopyEvent(src, dest) {
      var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;
      if (dest.nodeType !== 1) {
        return;
      }
      if (data_priv.hasData(src)) {
        pdataOld = data_priv.access(src);
        pdataCur = data_priv.set(dest, pdataOld);
        events = pdataOld.events;
        if (events) {
          delete pdataCur.handle;
          pdataCur.events = {};
          for (type in events) {
            for (i = 0, l = events[type].length; i < l; i++) {
              jQuery.event.add(dest, type, events[type][i]);
            }
          }
        }
      }
      if (data_user.hasData(src)) {
        udataOld = data_user.access(src);
        udataCur = jQuery.extend({}, udataOld);
        data_user.set(dest, udataCur);
      }
    }
    function getAll(context, tag) {
      var ret = context.getElementsByTagName ? context.getElementsByTagName(tag || "*") : context.querySelectorAll ? context.querySelectorAll(tag || "*") : [];
      return tag === undefined || tag && jQuery.nodeName(context, tag) ? jQuery.merge([context], ret) : ret;
    }
    function fixInput(src, dest) {
      var nodeName = dest.nodeName.toLowerCase();
      if (nodeName === "input" && rcheckableType.test(src.type)) {
        dest.checked = src.checked;
      } else if (nodeName === "input" || nodeName === "textarea") {
        dest.defaultValue = src.defaultValue;
      }
    }
    jQuery.extend({
      clone: function (elem, dataAndEvents, deepDataAndEvents) {
        var i,
          l,
          srcElements,
          destElements,
          clone = elem.cloneNode(true),
          inPage = jQuery.contains(elem.ownerDocument, elem);
        if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
          destElements = getAll(clone);
          srcElements = getAll(elem);
          for (i = 0, l = srcElements.length; i < l; i++) {
            fixInput(srcElements[i], destElements[i]);
          }
        }
        if (dataAndEvents) {
          if (deepDataAndEvents) {
            srcElements = srcElements || getAll(elem);
            destElements = destElements || getAll(clone);
            for (i = 0, l = srcElements.length; i < l; i++) {
              cloneCopyEvent(srcElements[i], destElements[i]);
            }
          } else {
            cloneCopyEvent(elem, clone);
          }
        }
        destElements = getAll(clone, "script");
        if (destElements.length > 0) {
          setGlobalEval(destElements, !inPage && getAll(elem, "script"));
        }
        return clone;
      },
      buildFragment: function (elems, context, scripts, selection) {
        var elem,
          tmp,
          tag,
          wrap,
          contains,
          j,
          fragment = context.createDocumentFragment(),
          nodes = [],
          i = 0,
          l = elems.length;
        for (; i < l; i++) {
          elem = elems[i];
          if (elem || elem === 0) {
            if (jQuery.type(elem) === "object") {
              jQuery.merge(nodes, elem.nodeType ? [elem] : elem);
            } else if (!rhtml.test(elem)) {
              nodes.push(context.createTextNode(elem));
            } else {
              tmp = tmp || fragment.appendChild(context.createElement("div"));
              tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
              wrap = wrapMap[tag] || wrapMap._default;
              tmp.innerHTML = wrap[1] + elem.replace(rxhtmlTag, "<$1></$2>") + wrap[2];
              j = wrap[0];
              while (j--) {
                tmp = tmp.lastChild;
              }
              jQuery.merge(nodes, tmp.childNodes);
              tmp = fragment.firstChild;
              tmp.textContent = "";
            }
          }
        }
        fragment.textContent = "";
        i = 0;
        while (elem = nodes[i++]) {
          if (selection && jQuery.inArray(elem, selection) !== -1) {
            continue;
          }
          contains = jQuery.contains(elem.ownerDocument, elem);
          tmp = getAll(fragment.appendChild(elem), "script");
          if (contains) {
            setGlobalEval(tmp);
          }
          if (scripts) {
            j = 0;
            while (elem = tmp[j++]) {
              if (rscriptType.test(elem.type || "")) {
                scripts.push(elem);
              }
            }
          }
        }
        return fragment;
      },
      cleanData: function (elems) {
        var data,
          elem,
          type,
          key,
          special = jQuery.event.special,
          i = 0;
        for (; (elem = elems[i]) !== undefined; i++) {
          if (jQuery.acceptData(elem)) {
            key = elem[data_priv.expando];
            if (key && (data = data_priv.cache[key])) {
              if (data.events) {
                for (type in data.events) {
                  if (special[type]) {
                    jQuery.event.remove(elem, type);
                  } else {
                    jQuery.removeEvent(elem, type, data.handle);
                  }
                }
              }
              if (data_priv.cache[key]) {
                delete data_priv.cache[key];
              }
            }
          }
          delete data_user.cache[elem[data_user.expando]];
        }
      }
    });
    jQuery.fn.extend({
      text: function (value) {
        return access(this, function (value) {
          return value === undefined ? jQuery.text(this) : this.empty().each(function () {
            if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
              this.textContent = value;
            }
          });
        }, null, value, arguments.length);
      },
      append: function () {
        return this.domManip(arguments, function (elem) {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            var target = manipulationTarget(this, elem);
            target.appendChild(elem);
          }
        });
      },
      prepend: function () {
        return this.domManip(arguments, function (elem) {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            var target = manipulationTarget(this, elem);
            target.insertBefore(elem, target.firstChild);
          }
        });
      },
      before: function () {
        return this.domManip(arguments, function (elem) {
          if (this.parentNode) {
            this.parentNode.insertBefore(elem, this);
          }
        });
      },
      after: function () {
        return this.domManip(arguments, function (elem) {
          if (this.parentNode) {
            this.parentNode.insertBefore(elem, this.nextSibling);
          }
        });
      },
      remove: function (selector, keepData) {
        var elem,
          elems = selector ? jQuery.filter(selector, this) : this,
          i = 0;
        for (; (elem = elems[i]) != null; i++) {
          if (!keepData && elem.nodeType === 1) {
            jQuery.cleanData(getAll(elem));
          }
          if (elem.parentNode) {
            if (keepData && jQuery.contains(elem.ownerDocument, elem)) {
              setGlobalEval(getAll(elem, "script"));
            }
            elem.parentNode.removeChild(elem);
          }
        }
        return this;
      },
      empty: function () {
        var elem,
          i = 0;
        for (; (elem = this[i]) != null; i++) {
          if (elem.nodeType === 1) {
            jQuery.cleanData(getAll(elem, false));
            elem.textContent = "";
          }
        }
        return this;
      },
      clone: function (dataAndEvents, deepDataAndEvents) {
        dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
        deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
        return this.map(function () {
          return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
        });
      },
      html: function (value) {
        return access(this, function (value) {
          var elem = this[0] || {},
            i = 0,
            l = this.length;
          if (value === undefined && elem.nodeType === 1) {
            return elem.innerHTML;
          }
          if (typeof value === "string" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {
            value = value.replace(rxhtmlTag, "<$1></$2>");
            try {
              for (; i < l; i++) {
                elem = this[i] || {};
                if (elem.nodeType === 1) {
                  jQuery.cleanData(getAll(elem, false));
                  elem.innerHTML = value;
                }
              }
              elem = 0;
            } catch (e) {}
          }
          if (elem) {
            this.empty().append(value);
          }
        }, null, value, arguments.length);
      },
      replaceWith: function () {
        var arg = arguments[0];
        this.domManip(arguments, function (elem) {
          arg = this.parentNode;
          jQuery.cleanData(getAll(this));
          if (arg) {
            arg.replaceChild(elem, this);
          }
        });
        return arg && (arg.length || arg.nodeType) ? this : this.remove();
      },
      detach: function (selector) {
        return this.remove(selector, true);
      },
      domManip: function (args, callback) {
        args = concat.apply([], args);
        var fragment,
          first,
          scripts,
          hasScripts,
          node,
          doc,
          i = 0,
          l = this.length,
          set = this,
          iNoClone = l - 1,
          value = args[0],
          isFunction = jQuery.isFunction(value);
        if (isFunction || l > 1 && typeof value === "string" && !support.checkClone && rchecked.test(value)) {
          return this.each(function (index) {
            var self = set.eq(index);
            if (isFunction) {
              args[0] = value.call(this, index, self.html());
            }
            self.domManip(args, callback);
          });
        }
        if (l) {
          fragment = jQuery.buildFragment(args, this[0].ownerDocument, false, this);
          first = fragment.firstChild;
          if (fragment.childNodes.length === 1) {
            fragment = first;
          }
          if (first) {
            scripts = jQuery.map(getAll(fragment, "script"), disableScript);
            hasScripts = scripts.length;
            for (; i < l; i++) {
              node = fragment;
              if (i !== iNoClone) {
                node = jQuery.clone(node, true, true);
                if (hasScripts) {
                  jQuery.merge(scripts, getAll(node, "script"));
                }
              }
              callback.call(this[i], node, i);
            }
            if (hasScripts) {
              doc = scripts[scripts.length - 1].ownerDocument;
              jQuery.map(scripts, restoreScript);
              for (i = 0; i < hasScripts; i++) {
                node = scripts[i];
                if (rscriptType.test(node.type || "") && !data_priv.access(node, "globalEval") && jQuery.contains(doc, node)) {
                  if (node.src) {
                    if (jQuery._evalUrl) {
                      jQuery._evalUrl(node.src);
                    }
                  } else {
                    jQuery.globalEval(node.textContent.replace(rcleanScript, ""));
                  }
                }
              }
            }
          }
        }
        return this;
      }
    });
    jQuery.each({
      appendTo: "append",
      prependTo: "prepend",
      insertBefore: "before",
      insertAfter: "after",
      replaceAll: "replaceWith"
    }, function (name, original) {
      jQuery.fn[name] = function (selector) {
        var elems,
          ret = [],
          insert = jQuery(selector),
          last = insert.length - 1,
          i = 0;
        for (; i <= last; i++) {
          elems = i === last ? this : this.clone(true);
          jQuery(insert[i])[original](elems);
          push.apply(ret, elems.get());
        }
        return this.pushStack(ret);
      };
    });
    var iframe,
      elemdisplay = {};
    function actualDisplay(name, doc) {
      var style,
        elem = jQuery(doc.createElement(name)).appendTo(doc.body),
        display = window.getDefaultComputedStyle && (style = window.getDefaultComputedStyle(elem[0])) ? style.display : jQuery.css(elem[0], "display");
      elem.detach();
      return display;
    }
    function defaultDisplay(nodeName) {
      var doc = document,
        display = elemdisplay[nodeName];
      if (!display) {
        display = actualDisplay(nodeName, doc);
        if (display === "none" || !display) {
          iframe = (iframe || jQuery("<iframe frameborder='0' width='0' height='0'/>")).appendTo(doc.documentElement);
          doc = iframe[0].contentDocument;
          doc.write();
          doc.close();
          display = actualDisplay(nodeName, doc);
          iframe.detach();
        }
        elemdisplay[nodeName] = display;
      }
      return display;
    }
    var rmargin = /^margin/;
    var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");
    var getStyles = function (elem) {
      return elem.ownerDocument.defaultView.getComputedStyle(elem, null);
    };
    function curCSS(elem, name, computed) {
      var width,
        minWidth,
        maxWidth,
        ret,
        style = elem.style;
      computed = computed || getStyles(elem);
      if (computed) {
        ret = computed.getPropertyValue(name) || computed[name];
      }
      if (computed) {
        if (ret === "" && !jQuery.contains(elem.ownerDocument, elem)) {
          ret = jQuery.style(elem, name);
        }
        if (rnumnonpx.test(ret) && rmargin.test(name)) {
          width = style.width;
          minWidth = style.minWidth;
          maxWidth = style.maxWidth;
          style.minWidth = style.maxWidth = style.width = ret;
          ret = computed.width;
          style.width = width;
          style.minWidth = minWidth;
          style.maxWidth = maxWidth;
        }
      }
      return ret !== undefined ? ret + "" : ret;
    }
    function addGetHookIf(conditionFn, hookFn) {
      return {
        get: function () {
          if (conditionFn()) {
            delete this.get;
            return;
          }
          return (this.get = hookFn).apply(this, arguments);
        }
      };
    }
    (function () {
      var pixelPositionVal,
        boxSizingReliableVal,
        docElem = document.documentElement,
        container = document.createElement("div"),
        div = document.createElement("div");
      if (!div.style) {
        return;
      }
      div.style.backgroundClip = "content-box";
      div.cloneNode(true).style.backgroundClip = "";
      support.clearCloneStyle = div.style.backgroundClip === "content-box";
      container.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;" + "position:absolute";
      container.appendChild(div);
      function computePixelPositionAndBoxSizingReliable() {
        div.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;" + "box-sizing:border-box;display:block;margin-top:1%;top:1%;" + "border:1px;padding:1px;width:4px;position:absolute";
        div.innerHTML = "";
        docElem.appendChild(container);
        var divStyle = window.getComputedStyle(div, null);
        pixelPositionVal = divStyle.top !== "1%";
        boxSizingReliableVal = divStyle.width === "4px";
        docElem.removeChild(container);
      }
      if (window.getComputedStyle) {
        jQuery.extend(support, {
          pixelPosition: function () {
            computePixelPositionAndBoxSizingReliable();
            return pixelPositionVal;
          },
          boxSizingReliable: function () {
            if (boxSizingReliableVal == null) {
              computePixelPositionAndBoxSizingReliable();
            }
            return boxSizingReliableVal;
          },
          reliableMarginRight: function () {
            var ret,
              marginDiv = div.appendChild(document.createElement("div"));
            marginDiv.style.cssText = div.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" + "box-sizing:content-box;display:block;margin:0;border:0;padding:0";
            marginDiv.style.marginRight = marginDiv.style.width = "0";
            div.style.width = "1px";
            docElem.appendChild(container);
            ret = !parseFloat(window.getComputedStyle(marginDiv, null).marginRight);
            docElem.removeChild(container);
            return ret;
          }
        });
      }
    })();
    jQuery.swap = function (elem, options, callback, args) {
      var ret,
        name,
        old = {};
      for (name in options) {
        old[name] = elem.style[name];
        elem.style[name] = options[name];
      }
      ret = callback.apply(elem, args || []);
      for (name in options) {
        elem.style[name] = old[name];
      }
      return ret;
    };
    var rdisplayswap = /^(none|table(?!-c[ea]).+)/,
      rnumsplit = new RegExp("^(" + pnum + ")(.*)$", "i"),
      rrelNum = new RegExp("^([+-])=(" + pnum + ")", "i"),
      cssShow = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
      },
      cssNormalTransform = {
        letterSpacing: "0",
        fontWeight: "400"
      },
      cssPrefixes = ["Webkit", "O", "Moz", "ms"];
    function vendorPropName(style, name) {
      if (name in style) {
        return name;
      }
      var capName = name[0].toUpperCase() + name.slice(1),
        origName = name,
        i = cssPrefixes.length;
      while (i--) {
        name = cssPrefixes[i] + capName;
        if (name in style) {
          return name;
        }
      }
      return origName;
    }
    function setPositiveNumber(elem, value, subtract) {
      var matches = rnumsplit.exec(value);
      return matches ? Math.max(0, matches[1] - (subtract || 0)) + (matches[2] || "px") : value;
    }
    function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {
      var i = extra === (isBorderBox ? "border" : "content") ? 4 : name === "width" ? 1 : 0,
        val = 0;
      for (; i < 4; i += 2) {
        if (extra === "margin") {
          val += jQuery.css(elem, extra + cssExpand[i], true, styles);
        }
        if (isBorderBox) {
          if (extra === "content") {
            val -= jQuery.css(elem, "padding" + cssExpand[i], true, styles);
          }
          if (extra !== "margin") {
            val -= jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
          }
        } else {
          val += jQuery.css(elem, "padding" + cssExpand[i], true, styles);
          if (extra !== "padding") {
            val += jQuery.css(elem, "border" + cssExpand[i] + "Width", true, styles);
          }
        }
      }
      return val;
    }
    function getWidthOrHeight(elem, name, extra) {
      var valueIsBorderBox = true,
        val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
        styles = getStyles(elem),
        isBorderBox = jQuery.css(elem, "boxSizing", false, styles) === "border-box";
      if (val <= 0 || val == null) {
        val = curCSS(elem, name, styles);
        if (val < 0 || val == null) {
          val = elem.style[name];
        }
        if (rnumnonpx.test(val)) {
          return val;
        }
        valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);
        val = parseFloat(val) || 0;
      }
      return val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles) + "px";
    }
    function showHide(elements, show) {
      var display,
        elem,
        hidden,
        values = [],
        index = 0,
        length = elements.length;
      for (; index < length; index++) {
        elem = elements[index];
        if (!elem.style) {
          continue;
        }
        values[index] = data_priv.get(elem, "olddisplay");
        display = elem.style.display;
        if (show) {
          if (!values[index] && display === "none") {
            elem.style.display = "";
          }
          if (elem.style.display === "" && isHidden(elem)) {
            values[index] = data_priv.access(elem, "olddisplay", defaultDisplay(elem.nodeName));
          }
        } else {
          hidden = isHidden(elem);
          if (display !== "none" || !hidden) {
            data_priv.set(elem, "olddisplay", hidden ? display : jQuery.css(elem, "display"));
          }
        }
      }
      for (index = 0; index < length; index++) {
        elem = elements[index];
        if (!elem.style) {
          continue;
        }
        if (!show || elem.style.display === "none" || elem.style.display === "") {
          elem.style.display = show ? values[index] || "" : "none";
        }
      }
      return elements;
    }
    jQuery.extend({
      cssHooks: {
        opacity: {
          get: function (elem, computed) {
            if (computed) {
              var ret = curCSS(elem, "opacity");
              return ret === "" ? "1" : ret;
            }
          }
        }
      },
      cssNumber: {
        "columnCount": true,
        "fillOpacity": true,
        "flexGrow": true,
        "flexShrink": true,
        "fontWeight": true,
        "lineHeight": true,
        "opacity": true,
        "order": true,
        "orphans": true,
        "widows": true,
        "zIndex": true,
        "zoom": true
      },
      cssProps: {
        "float": "cssFloat"
      },
      style: function (elem, name, value, extra) {
        if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
          return;
        }
        var ret,
          type,
          hooks,
          origName = jQuery.camelCase(name),
          style = elem.style;
        name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(style, origName));
        hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
        if (value !== undefined) {
          type = typeof value;
          if (type === "string" && (ret = rrelNum.exec(value))) {
            value = (ret[1] + 1) * ret[2] + parseFloat(jQuery.css(elem, name));
            type = "number";
          }
          if (value == null || value !== value) {
            return;
          }
          if (type === "number" && !jQuery.cssNumber[origName]) {
            value += "px";
          }
          if (!support.clearCloneStyle && value === "" && name.indexOf("background") === 0) {
            style[name] = "inherit";
          }
          if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {
            style[name] = value;
          }
        } else {
          if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {
            return ret;
          }
          return style[name];
        }
      },
      css: function (elem, name, extra, styles) {
        var val,
          num,
          hooks,
          origName = jQuery.camelCase(name);
        name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(elem.style, origName));
        hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];
        if (hooks && "get" in hooks) {
          val = hooks.get(elem, true, extra);
        }
        if (val === undefined) {
          val = curCSS(elem, name, styles);
        }
        if (val === "normal" && name in cssNormalTransform) {
          val = cssNormalTransform[name];
        }
        if (extra === "" || extra) {
          num = parseFloat(val);
          return extra === true || jQuery.isNumeric(num) ? num || 0 : val;
        }
        return val;
      }
    });
    jQuery.each(["height", "width"], function (i, name) {
      jQuery.cssHooks[name] = {
        get: function (elem, computed, extra) {
          if (computed) {
            return rdisplayswap.test(jQuery.css(elem, "display")) && elem.offsetWidth === 0 ? jQuery.swap(elem, cssShow, function () {
              return getWidthOrHeight(elem, name, extra);
            }) : getWidthOrHeight(elem, name, extra);
          }
        },
        set: function (elem, value, extra) {
          var styles = extra && getStyles(elem);
          return setPositiveNumber(elem, value, extra ? augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, "boxSizing", false, styles) === "border-box", styles) : 0);
        }
      };
    });
    jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight, function (elem, computed) {
      if (computed) {
        return jQuery.swap(elem, {
          "display": "inline-block"
        }, curCSS, [elem, "marginRight"]);
      }
    });
    jQuery.each({
      margin: "",
      padding: "",
      border: "Width"
    }, function (prefix, suffix) {
      jQuery.cssHooks[prefix + suffix] = {
        expand: function (value) {
          var i = 0,
            expanded = {},
            parts = typeof value === "string" ? value.split(" ") : [value];
          for (; i < 4; i++) {
            expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
          }
          return expanded;
        }
      };
      if (!rmargin.test(prefix)) {
        jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;
      }
    });
    jQuery.fn.extend({
      css: function (name, value) {
        return access(this, function (elem, name, value) {
          var styles,
            len,
            map = {},
            i = 0;
          if (jQuery.isArray(name)) {
            styles = getStyles(elem);
            len = name.length;
            for (; i < len; i++) {
              map[name[i]] = jQuery.css(elem, name[i], false, styles);
            }
            return map;
          }
          return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
        }, name, value, arguments.length > 1);
      },
      show: function () {
        return showHide(this, true);
      },
      hide: function () {
        return showHide(this);
      },
      toggle: function (state) {
        if (typeof state === "boolean") {
          return state ? this.show() : this.hide();
        }
        return this.each(function () {
          if (isHidden(this)) {
            jQuery(this).show();
          } else {
            jQuery(this).hide();
          }
        });
      }
    });
    function Tween(elem, options, prop, end, easing) {
      return new Tween.prototype.init(elem, options, prop, end, easing);
    }
    jQuery.Tween = Tween;
    Tween.prototype = {
      constructor: Tween,
      init: function (elem, options, prop, end, easing, unit) {
        this.elem = elem;
        this.prop = prop;
        this.easing = easing || "swing";
        this.options = options;
        this.start = this.now = this.cur();
        this.end = end;
        this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
      },
      cur: function () {
        var hooks = Tween.propHooks[this.prop];
        return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
      },
      run: function (percent) {
        var eased,
          hooks = Tween.propHooks[this.prop];
        if (this.options.duration) {
          this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);
        } else {
          this.pos = eased = percent;
        }
        this.now = (this.end - this.start) * eased + this.start;
        if (this.options.step) {
          this.options.step.call(this.elem, this.now, this);
        }
        if (hooks && hooks.set) {
          hooks.set(this);
        } else {
          Tween.propHooks._default.set(this);
        }
        return this;
      }
    };
    Tween.prototype.init.prototype = Tween.prototype;
    Tween.propHooks = {
      _default: {
        get: function (tween) {
          var result;
          if (tween.elem[tween.prop] != null && (!tween.elem.style || tween.elem.style[tween.prop] == null)) {
            return tween.elem[tween.prop];
          }
          result = jQuery.css(tween.elem, tween.prop, "");
          return !result || result === "auto" ? 0 : result;
        },
        set: function (tween) {
          if (jQuery.fx.step[tween.prop]) {
            jQuery.fx.step[tween.prop](tween);
          } else if (tween.elem.style && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {
            jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);
          } else {
            tween.elem[tween.prop] = tween.now;
          }
        }
      }
    };
    Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
      set: function (tween) {
        if (tween.elem.nodeType && tween.elem.parentNode) {
          tween.elem[tween.prop] = tween.now;
        }
      }
    };
    jQuery.easing = {
      linear: function (p) {
        return p;
      },
      swing: function (p) {
        return 0.5 - Math.cos(p * Math.PI) / 2;
      }
    };
    jQuery.fx = Tween.prototype.init;
    jQuery.fx.step = {};
    var fxNow,
      timerId,
      rfxtypes = /^(?:toggle|show|hide)$/,
      rfxnum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i"),
      rrun = /queueHooks$/,
      animationPrefilters = [defaultPrefilter],
      tweeners = {
        "*": [function (prop, value) {
          var tween = this.createTween(prop, value),
            target = tween.cur(),
            parts = rfxnum.exec(value),
            unit = parts && parts[3] || (jQuery.cssNumber[prop] ? "" : "px"),
            start = (jQuery.cssNumber[prop] || unit !== "px" && +target) && rfxnum.exec(jQuery.css(tween.elem, prop)),
            scale = 1,
            maxIterations = 20;
          if (start && start[3] !== unit) {
            unit = unit || start[3];
            parts = parts || [];
            start = +target || 1;
            do {
              scale = scale || ".5";
              start = start / scale;
              jQuery.style(tween.elem, prop, start + unit);
            } while (scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations);
          }
          if (parts) {
            start = tween.start = +start || +target || 0;
            tween.unit = unit;
            tween.end = parts[1] ? start + (parts[1] + 1) * parts[2] : +parts[2];
          }
          return tween;
        }]
      };
    function createFxNow() {
      setTimeout(function () {
        fxNow = undefined;
      });
      return fxNow = jQuery.now();
    }
    function genFx(type, includeWidth) {
      var which,
        i = 0,
        attrs = {
          height: type
        };
      includeWidth = includeWidth ? 1 : 0;
      for (; i < 4; i += 2 - includeWidth) {
        which = cssExpand[i];
        attrs["margin" + which] = attrs["padding" + which] = type;
      }
      if (includeWidth) {
        attrs.opacity = attrs.width = type;
      }
      return attrs;
    }
    function createTween(value, prop, animation) {
      var tween,
        collection = (tweeners[prop] || []).concat(tweeners["*"]),
        index = 0,
        length = collection.length;
      for (; index < length; index++) {
        if (tween = collection[index].call(animation, prop, value)) {
          return tween;
        }
      }
    }
    function defaultPrefilter(elem, props, opts) {
      var prop,
        value,
        toggle,
        tween,
        hooks,
        oldfire,
        display,
        checkDisplay,
        anim = this,
        orig = {},
        style = elem.style,
        hidden = elem.nodeType && isHidden(elem),
        dataShow = data_priv.get(elem, "fxshow");
      if (!opts.queue) {
        hooks = jQuery._queueHooks(elem, "fx");
        if (hooks.unqueued == null) {
          hooks.unqueued = 0;
          oldfire = hooks.empty.fire;
          hooks.empty.fire = function () {
            if (!hooks.unqueued) {
              oldfire();
            }
          };
        }
        hooks.unqueued++;
        anim.always(function () {
          anim.always(function () {
            hooks.unqueued--;
            if (!jQuery.queue(elem, "fx").length) {
              hooks.empty.fire();
            }
          });
        });
      }
      if (elem.nodeType === 1 && ("height" in props || "width" in props)) {
        opts.overflow = [style.overflow, style.overflowX, style.overflowY];
        display = jQuery.css(elem, "display");
        checkDisplay = display === "none" ? data_priv.get(elem, "olddisplay") || defaultDisplay(elem.nodeName) : display;
        if (checkDisplay === "inline" && jQuery.css(elem, "float") === "none") {
          style.display = "inline-block";
        }
      }
      if (opts.overflow) {
        style.overflow = "hidden";
        anim.always(function () {
          style.overflow = opts.overflow[0];
          style.overflowX = opts.overflow[1];
          style.overflowY = opts.overflow[2];
        });
      }
      for (prop in props) {
        value = props[prop];
        if (rfxtypes.exec(value)) {
          delete props[prop];
          toggle = toggle || value === "toggle";
          if (value === (hidden ? "hide" : "show")) {
            if (value === "show" && dataShow && dataShow[prop] !== undefined) {
              hidden = true;
            } else {
              continue;
            }
          }
          orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);
        } else {
          display = undefined;
        }
      }
      if (!jQuery.isEmptyObject(orig)) {
        if (dataShow) {
          if ("hidden" in dataShow) {
            hidden = dataShow.hidden;
          }
        } else {
          dataShow = data_priv.access(elem, "fxshow", {});
        }
        if (toggle) {
          dataShow.hidden = !hidden;
        }
        if (hidden) {
          jQuery(elem).show();
        } else {
          anim.done(function () {
            jQuery(elem).hide();
          });
        }
        anim.done(function () {
          var prop;
          data_priv.remove(elem, "fxshow");
          for (prop in orig) {
            jQuery.style(elem, prop, orig[prop]);
          }
        });
        for (prop in orig) {
          tween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
          if (!(prop in dataShow)) {
            dataShow[prop] = tween.start;
            if (hidden) {
              tween.end = tween.start;
              tween.start = prop === "width" || prop === "height" ? 1 : 0;
            }
          }
        }
      } else if ((display === "none" ? defaultDisplay(elem.nodeName) : display) === "inline") {
        style.display = display;
      }
    }
    function propFilter(props, specialEasing) {
      var index, name, easing, value, hooks;
      for (index in props) {
        name = jQuery.camelCase(index);
        easing = specialEasing[name];
        value = props[index];
        if (jQuery.isArray(value)) {
          easing = value[1];
          value = props[index] = value[0];
        }
        if (index !== name) {
          props[name] = value;
          delete props[index];
        }
        hooks = jQuery.cssHooks[name];
        if (hooks && "expand" in hooks) {
          value = hooks.expand(value);
          delete props[name];
          for (index in value) {
            if (!(index in props)) {
              props[index] = value[index];
              specialEasing[index] = easing;
            }
          }
        } else {
          specialEasing[name] = easing;
        }
      }
    }
    function Animation(elem, properties, options) {
      var result,
        stopped,
        index = 0,
        length = animationPrefilters.length,
        deferred = jQuery.Deferred().always(function () {
          delete tick.elem;
        }),
        tick = function () {
          if (stopped) {
            return false;
          }
          var currentTime = fxNow || createFxNow(),
            remaining = Math.max(0, animation.startTime + animation.duration - currentTime),
            temp = remaining / animation.duration || 0,
            percent = 1 - temp,
            index = 0,
            length = animation.tweens.length;
          for (; index < length; index++) {
            animation.tweens[index].run(percent);
          }
          deferred.notifyWith(elem, [animation, percent, remaining]);
          if (percent < 1 && length) {
            return remaining;
          } else {
            deferred.resolveWith(elem, [animation]);
            return false;
          }
        },
        animation = deferred.promise({
          elem: elem,
          props: jQuery.extend({}, properties),
          opts: jQuery.extend(true, {
            specialEasing: {}
          }, options),
          originalProperties: properties,
          originalOptions: options,
          startTime: fxNow || createFxNow(),
          duration: options.duration,
          tweens: [],
          createTween: function (prop, end) {
            var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
            animation.tweens.push(tween);
            return tween;
          },
          stop: function (gotoEnd) {
            var index = 0,
              length = gotoEnd ? animation.tweens.length : 0;
            if (stopped) {
              return this;
            }
            stopped = true;
            for (; index < length; index++) {
              animation.tweens[index].run(1);
            }
            if (gotoEnd) {
              deferred.resolveWith(elem, [animation, gotoEnd]);
            } else {
              deferred.rejectWith(elem, [animation, gotoEnd]);
            }
            return this;
          }
        }),
        props = animation.props;
      propFilter(props, animation.opts.specialEasing);
      for (; index < length; index++) {
        result = animationPrefilters[index].call(animation, elem, props, animation.opts);
        if (result) {
          return result;
        }
      }
      jQuery.map(props, createTween, animation);
      if (jQuery.isFunction(animation.opts.start)) {
        animation.opts.start.call(elem, animation);
      }
      jQuery.fx.timer(jQuery.extend(tick, {
        elem: elem,
        anim: animation,
        queue: animation.opts.queue
      }));
      return animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
    }
    jQuery.Animation = jQuery.extend(Animation, {
      tweener: function (props, callback) {
        if (jQuery.isFunction(props)) {
          callback = props;
          props = ["*"];
        } else {
          props = props.split(" ");
        }
        var prop,
          index = 0,
          length = props.length;
        for (; index < length; index++) {
          prop = props[index];
          tweeners[prop] = tweeners[prop] || [];
          tweeners[prop].unshift(callback);
        }
      },
      prefilter: function (callback, prepend) {
        if (prepend) {
          animationPrefilters.unshift(callback);
        } else {
          animationPrefilters.push(callback);
        }
      }
    });
    jQuery.speed = function (speed, easing, fn) {
      var opt = speed && typeof speed === "object" ? jQuery.extend({}, speed) : {
        complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
        duration: speed,
        easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
      };
      opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;
      if (opt.queue == null || opt.queue === true) {
        opt.queue = "fx";
      }
      opt.old = opt.complete;
      opt.complete = function () {
        if (jQuery.isFunction(opt.old)) {
          opt.old.call(this);
        }
        if (opt.queue) {
          jQuery.dequeue(this, opt.queue);
        }
      };
      return opt;
    };
    jQuery.fn.extend({
      fadeTo: function (speed, to, easing, callback) {
        return this.filter(isHidden).css("opacity", 0).show().end().animate({
          opacity: to
        }, speed, easing, callback);
      },
      animate: function (prop, speed, easing, callback) {
        var empty = jQuery.isEmptyObject(prop),
          optall = jQuery.speed(speed, easing, callback),
          doAnimation = function () {
            var anim = Animation(this, jQuery.extend({}, prop), optall);
            if (empty || data_priv.get(this, "finish")) {
              anim.stop(true);
            }
          };
        doAnimation.finish = doAnimation;
        return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
      },
      stop: function (type, clearQueue, gotoEnd) {
        var stopQueue = function (hooks) {
          var stop = hooks.stop;
          delete hooks.stop;
          stop(gotoEnd);
        };
        if (typeof type !== "string") {
          gotoEnd = clearQueue;
          clearQueue = type;
          type = undefined;
        }
        if (clearQueue && type !== false) {
          this.queue(type || "fx", []);
        }
        return this.each(function () {
          var dequeue = true,
            index = type != null && type + "queueHooks",
            timers = jQuery.timers,
            data = data_priv.get(this);
          if (index) {
            if (data[index] && data[index].stop) {
              stopQueue(data[index]);
            }
          } else {
            for (index in data) {
              if (data[index] && data[index].stop && rrun.test(index)) {
                stopQueue(data[index]);
              }
            }
          }
          for (index = timers.length; index--;) {
            if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
              timers[index].anim.stop(gotoEnd);
              dequeue = false;
              timers.splice(index, 1);
            }
          }
          if (dequeue || !gotoEnd) {
            jQuery.dequeue(this, type);
          }
        });
      },
      finish: function (type) {
        if (type !== false) {
          type = type || "fx";
        }
        return this.each(function () {
          var index,
            data = data_priv.get(this),
            queue = data[type + "queue"],
            hooks = data[type + "queueHooks"],
            timers = jQuery.timers,
            length = queue ? queue.length : 0;
          data.finish = true;
          jQuery.queue(this, type, []);
          if (hooks && hooks.stop) {
            hooks.stop.call(this, true);
          }
          for (index = timers.length; index--;) {
            if (timers[index].elem === this && timers[index].queue === type) {
              timers[index].anim.stop(true);
              timers.splice(index, 1);
            }
          }
          for (index = 0; index < length; index++) {
            if (queue[index] && queue[index].finish) {
              queue[index].finish.call(this);
            }
          }
          delete data.finish;
        });
      }
    });
    jQuery.each(["toggle", "show", "hide"], function (i, name) {
      var cssFn = jQuery.fn[name];
      jQuery.fn[name] = function (speed, easing, callback) {
        return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
      };
    });
    jQuery.each({
      slideDown: genFx("show"),
      slideUp: genFx("hide"),
      slideToggle: genFx("toggle"),
      fadeIn: {
        opacity: "show"
      },
      fadeOut: {
        opacity: "hide"
      },
      fadeToggle: {
        opacity: "toggle"
      }
    }, function (name, props) {
      jQuery.fn[name] = function (speed, easing, callback) {
        return this.animate(props, speed, easing, callback);
      };
    });
    jQuery.timers = [];
    jQuery.fx.tick = function () {
      var timer,
        i = 0,
        timers = jQuery.timers;
      fxNow = jQuery.now();
      for (; i < timers.length; i++) {
        timer = timers[i];
        if (!timer() && timers[i] === timer) {
          timers.splice(i--, 1);
        }
      }
      if (!timers.length) {
        jQuery.fx.stop();
      }
      fxNow = undefined;
    };
    jQuery.fx.timer = function (timer) {
      jQuery.timers.push(timer);
      if (timer()) {
        jQuery.fx.start();
      } else {
        jQuery.timers.pop();
      }
    };
    jQuery.fx.interval = 13;
    jQuery.fx.start = function () {
      if (!timerId) {
        timerId = setInterval(jQuery.fx.tick, jQuery.fx.interval);
      }
    };
    jQuery.fx.stop = function () {
      clearInterval(timerId);
      timerId = null;
    };
    jQuery.fx.speeds = {
      slow: 600,
      fast: 200,
      _default: 400
    };
    jQuery.fn.delay = function (time, type) {
      time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
      type = type || "fx";
      return this.queue(type, function (next, hooks) {
        var timeout = setTimeout(next, time);
        hooks.stop = function () {
          clearTimeout(timeout);
        };
      });
    };
    (function () {
      var input = document.createElement("input"),
        select = document.createElement("select"),
        opt = select.appendChild(document.createElement("option"));
      input.type = "checkbox";
      support.checkOn = input.value !== "";
      support.optSelected = opt.selected;
      select.disabled = true;
      support.optDisabled = !opt.disabled;
      input = document.createElement("input");
      input.value = "t";
      input.type = "radio";
      support.radioValue = input.value === "t";
    })();
    var nodeHook,
      boolHook,
      attrHandle = jQuery.expr.attrHandle;
    jQuery.fn.extend({
      attr: function (name, value) {
        return access(this, jQuery.attr, name, value, arguments.length > 1);
      },
      removeAttr: function (name) {
        return this.each(function () {
          jQuery.removeAttr(this, name);
        });
      }
    });
    jQuery.extend({
      attr: function (elem, name, value) {
        var hooks,
          ret,
          nType = elem.nodeType;
        if (!elem || nType === 3 || nType === 8 || nType === 2) {
          return;
        }
        if (typeof elem.getAttribute === strundefined) {
          return jQuery.prop(elem, name, value);
        }
        if (nType !== 1 || !jQuery.isXMLDoc(elem)) {
          name = name.toLowerCase();
          hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : nodeHook);
        }
        if (value !== undefined) {
          if (value === null) {
            jQuery.removeAttr(elem, name);
          } else if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
            return ret;
          } else {
            elem.setAttribute(name, value + "");
            return value;
          }
        } else if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
          return ret;
        } else {
          ret = jQuery.find.attr(elem, name);
          return ret == null ? undefined : ret;
        }
      },
      removeAttr: function (elem, value) {
        var name,
          propName,
          i = 0,
          attrNames = value && value.match(rnotwhite);
        if (attrNames && elem.nodeType === 1) {
          while (name = attrNames[i++]) {
            propName = jQuery.propFix[name] || name;
            if (jQuery.expr.match.bool.test(name)) {
              elem[propName] = false;
            }
            elem.removeAttribute(name);
          }
        }
      },
      attrHooks: {
        type: {
          set: function (elem, value) {
            if (!support.radioValue && value === "radio" && jQuery.nodeName(elem, "input")) {
              var val = elem.value;
              elem.setAttribute("type", value);
              if (val) {
                elem.value = val;
              }
              return value;
            }
          }
        }
      }
    });
    boolHook = {
      set: function (elem, value, name) {
        if (value === false) {
          jQuery.removeAttr(elem, name);
        } else {
          elem.setAttribute(name, name);
        }
        return name;
      }
    };
    jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), function (i, name) {
      var getter = attrHandle[name] || jQuery.find.attr;
      attrHandle[name] = function (elem, name, isXML) {
        var ret, handle;
        if (!isXML) {
          handle = attrHandle[name];
          attrHandle[name] = ret;
          ret = getter(elem, name, isXML) != null ? name.toLowerCase() : null;
          attrHandle[name] = handle;
        }
        return ret;
      };
    });
    var rfocusable = /^(?:input|select|textarea|button)$/i;
    jQuery.fn.extend({
      prop: function (name, value) {
        return access(this, jQuery.prop, name, value, arguments.length > 1);
      },
      removeProp: function (name) {
        return this.each(function () {
          delete this[jQuery.propFix[name] || name];
        });
      }
    });
    jQuery.extend({
      propFix: {
        "for": "htmlFor",
        "class": "className"
      },
      prop: function (elem, name, value) {
        var ret,
          hooks,
          notxml,
          nType = elem.nodeType;
        if (!elem || nType === 3 || nType === 8 || nType === 2) {
          return;
        }
        notxml = nType !== 1 || !jQuery.isXMLDoc(elem);
        if (notxml) {
          name = jQuery.propFix[name] || name;
          hooks = jQuery.propHooks[name];
        }
        if (value !== undefined) {
          return hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined ? ret : elem[name] = value;
        } else {
          return hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null ? ret : elem[name];
        }
      },
      propHooks: {
        tabIndex: {
          get: function (elem) {
            return elem.hasAttribute("tabindex") || rfocusable.test(elem.nodeName) || elem.href ? elem.tabIndex : -1;
          }
        }
      }
    });
    if (!support.optSelected) {
      jQuery.propHooks.selected = {
        get: function (elem) {
          var parent = elem.parentNode;
          if (parent && parent.parentNode) {
            parent.parentNode.selectedIndex;
          }
          return null;
        }
      };
    }
    jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
      jQuery.propFix[this.toLowerCase()] = this;
    });
    var rclass = /[\t\r\n\f]/g;
    jQuery.fn.extend({
      addClass: function (value) {
        var classes,
          elem,
          cur,
          clazz,
          j,
          finalValue,
          proceed = typeof value === "string" && value,
          i = 0,
          len = this.length;
        if (jQuery.isFunction(value)) {
          return this.each(function (j) {
            jQuery(this).addClass(value.call(this, j, this.className));
          });
        }
        if (proceed) {
          classes = (value || "").match(rnotwhite) || [];
          for (; i < len; i++) {
            elem = this[i];
            cur = elem.nodeType === 1 && (elem.className ? (" " + elem.className + " ").replace(rclass, " ") : " ");
            if (cur) {
              j = 0;
              while (clazz = classes[j++]) {
                if (cur.indexOf(" " + clazz + " ") < 0) {
                  cur += clazz + " ";
                }
              }
              finalValue = jQuery.trim(cur);
              if (elem.className !== finalValue) {
                elem.className = finalValue;
              }
            }
          }
        }
        return this;
      },
      removeClass: function (value) {
        var classes,
          elem,
          cur,
          clazz,
          j,
          finalValue,
          proceed = arguments.length === 0 || typeof value === "string" && value,
          i = 0,
          len = this.length;
        if (jQuery.isFunction(value)) {
          return this.each(function (j) {
            jQuery(this).removeClass(value.call(this, j, this.className));
          });
        }
        if (proceed) {
          classes = (value || "").match(rnotwhite) || [];
          for (; i < len; i++) {
            elem = this[i];
            cur = elem.nodeType === 1 && (elem.className ? (" " + elem.className + " ").replace(rclass, " ") : "");
            if (cur) {
              j = 0;
              while (clazz = classes[j++]) {
                while (cur.indexOf(" " + clazz + " ") >= 0) {
                  cur = cur.replace(" " + clazz + " ", " ");
                }
              }
              finalValue = value ? jQuery.trim(cur) : "";
              if (elem.className !== finalValue) {
                elem.className = finalValue;
              }
            }
          }
        }
        return this;
      },
      toggleClass: function (value, stateVal) {
        var type = typeof value;
        if (typeof stateVal === "boolean" && type === "string") {
          return stateVal ? this.addClass(value) : this.removeClass(value);
        }
        if (jQuery.isFunction(value)) {
          return this.each(function (i) {
            jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);
          });
        }
        return this.each(function () {
          if (type === "string") {
            var className,
              i = 0,
              self = jQuery(this),
              classNames = value.match(rnotwhite) || [];
            while (className = classNames[i++]) {
              if (self.hasClass(className)) {
                self.removeClass(className);
              } else {
                self.addClass(className);
              }
            }
          } else if (type === strundefined || type === "boolean") {
            if (this.className) {
              data_priv.set(this, "__className__", this.className);
            }
            this.className = this.className || value === false ? "" : data_priv.get(this, "__className__") || "";
          }
        });
      },
      hasClass: function (selector) {
        var className = " " + selector + " ",
          i = 0,
          l = this.length;
        for (; i < l; i++) {
          if (this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf(className) >= 0) {
            return true;
          }
        }
        return false;
      }
    });
    var rreturn = /\r/g;
    jQuery.fn.extend({
      val: function (value) {
        var hooks,
          ret,
          isFunction,
          elem = this[0];
        if (!arguments.length) {
          if (elem) {
            hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];
            if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) {
              return ret;
            }
            ret = elem.value;
            return typeof ret === "string" ? ret.replace(rreturn, "") : ret == null ? "" : ret;
          }
          return;
        }
        isFunction = jQuery.isFunction(value);
        return this.each(function (i) {
          var val;
          if (this.nodeType !== 1) {
            return;
          }
          if (isFunction) {
            val = value.call(this, i, jQuery(this).val());
          } else {
            val = value;
          }
          if (val == null) {
            val = "";
          } else if (typeof val === "number") {
            val += "";
          } else if (jQuery.isArray(val)) {
            val = jQuery.map(val, function (value) {
              return value == null ? "" : value + "";
            });
          }
          hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];
          if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) {
            this.value = val;
          }
        });
      }
    });
    jQuery.extend({
      valHooks: {
        option: {
          get: function (elem) {
            var val = jQuery.find.attr(elem, "value");
            return val != null ? val : jQuery.trim(jQuery.text(elem));
          }
        },
        select: {
          get: function (elem) {
            var value,
              option,
              options = elem.options,
              index = elem.selectedIndex,
              one = elem.type === "select-one" || index < 0,
              values = one ? null : [],
              max = one ? index + 1 : options.length,
              i = index < 0 ? max : one ? index : 0;
            for (; i < max; i++) {
              option = options[i];
              if ((option.selected || i === index) && (support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, "optgroup"))) {
                value = jQuery(option).val();
                if (one) {
                  return value;
                }
                values.push(value);
              }
            }
            return values;
          },
          set: function (elem, value) {
            var optionSet,
              option,
              options = elem.options,
              values = jQuery.makeArray(value),
              i = options.length;
            while (i--) {
              option = options[i];
              if (option.selected = jQuery.inArray(option.value, values) >= 0) {
                optionSet = true;
              }
            }
            if (!optionSet) {
              elem.selectedIndex = -1;
            }
            return values;
          }
        }
      }
    });
    jQuery.each(["radio", "checkbox"], function () {
      jQuery.valHooks[this] = {
        set: function (elem, value) {
          if (jQuery.isArray(value)) {
            return elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0;
          }
        }
      };
      if (!support.checkOn) {
        jQuery.valHooks[this].get = function (elem) {
          return elem.getAttribute("value") === null ? "on" : elem.value;
        };
      }
    });
    jQuery.each(("blur focus focusin focusout load resize scroll unload click dblclick " + "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " + "change select submit keydown keypress keyup error contextmenu").split(" "), function (i, name) {
      jQuery.fn[name] = function (data, fn) {
        return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
      };
    });
    jQuery.fn.extend({
      hover: function (fnOver, fnOut) {
        return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
      },
      bind: function (types, data, fn) {
        return this.on(types, null, data, fn);
      },
      unbind: function (types, fn) {
        return this.off(types, null, fn);
      },
      delegate: function (selector, types, data, fn) {
        return this.on(types, selector, data, fn);
      },
      undelegate: function (selector, types, fn) {
        return arguments.length === 1 ? this.off(selector, "**") : this.off(types, selector || "**", fn);
      }
    });
    var nonce = jQuery.now();
    var rquery = /\?/;
    jQuery.parseJSON = function (data) {
      return JSON.parse(data + "");
    };
    jQuery.parseXML = function (data) {
      var xml, tmp;
      if (!data || typeof data !== "string") {
        return null;
      }
      try {
        tmp = new DOMParser();
        xml = tmp.parseFromString(data, "text/xml");
      } catch (e) {
        xml = undefined;
      }
      if (!xml || xml.getElementsByTagName("parsererror").length) {
        jQuery.error("Invalid XML: " + data);
      }
      return xml;
    };
    var ajaxLocParts,
      ajaxLocation,
      rhash = /#.*$/,
      rts = /([?&])_=[^&]*/,
      rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
      rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
      rnoContent = /^(?:GET|HEAD)$/,
      rprotocol = /^\/\//,
      rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
      prefilters = {},
      transports = {},
      allTypes = "*/".concat("*");
    try {
      ajaxLocation = location.href;
    } catch (e) {
      ajaxLocation = document.createElement("a");
      ajaxLocation.href = "";
      ajaxLocation = ajaxLocation.href;
    }
    ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [];
    function addToPrefiltersOrTransports(structure) {
      return function (dataTypeExpression, func) {
        if (typeof dataTypeExpression !== "string") {
          func = dataTypeExpression;
          dataTypeExpression = "*";
        }
        var dataType,
          i = 0,
          dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];
        if (jQuery.isFunction(func)) {
          while (dataType = dataTypes[i++]) {
            if (dataType[0] === "+") {
              dataType = dataType.slice(1) || "*";
              (structure[dataType] = structure[dataType] || []).unshift(func);
            } else {
              (structure[dataType] = structure[dataType] || []).push(func);
            }
          }
        }
      };
    }
    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
      var inspected = {},
        seekingTransport = structure === transports;
      function inspect(dataType) {
        var selected;
        inspected[dataType] = true;
        jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {
          var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
          if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {
            options.dataTypes.unshift(dataTypeOrTransport);
            inspect(dataTypeOrTransport);
            return false;
          } else if (seekingTransport) {
            return !(selected = dataTypeOrTransport);
          }
        });
        return selected;
      }
      return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
    }
    function ajaxExtend(target, src) {
      var key,
        deep,
        flatOptions = jQuery.ajaxSettings.flatOptions || {};
      for (key in src) {
        if (src[key] !== undefined) {
          (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
        }
      }
      if (deep) {
        jQuery.extend(true, target, deep);
      }
      return target;
    }
    function ajaxHandleResponses(s, jqXHR, responses) {
      var ct,
        type,
        finalDataType,
        firstDataType,
        contents = s.contents,
        dataTypes = s.dataTypes;
      while (dataTypes[0] === "*") {
        dataTypes.shift();
        if (ct === undefined) {
          ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
        }
      }
      if (ct) {
        for (type in contents) {
          if (contents[type] && contents[type].test(ct)) {
            dataTypes.unshift(type);
            break;
          }
        }
      }
      if (dataTypes[0] in responses) {
        finalDataType = dataTypes[0];
      } else {
        for (type in responses) {
          if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
            finalDataType = type;
            break;
          }
          if (!firstDataType) {
            firstDataType = type;
          }
        }
        finalDataType = finalDataType || firstDataType;
      }
      if (finalDataType) {
        if (finalDataType !== dataTypes[0]) {
          dataTypes.unshift(finalDataType);
        }
        return responses[finalDataType];
      }
    }
    function ajaxConvert(s, response, jqXHR, isSuccess) {
      var conv2,
        current,
        conv,
        tmp,
        prev,
        converters = {},
        dataTypes = s.dataTypes.slice();
      if (dataTypes[1]) {
        for (conv in s.converters) {
          converters[conv.toLowerCase()] = s.converters[conv];
        }
      }
      current = dataTypes.shift();
      while (current) {
        if (s.responseFields[current]) {
          jqXHR[s.responseFields[current]] = response;
        }
        if (!prev && isSuccess && s.dataFilter) {
          response = s.dataFilter(response, s.dataType);
        }
        prev = current;
        current = dataTypes.shift();
        if (current) {
          if (current === "*") {
            current = prev;
          } else if (prev !== "*" && prev !== current) {
            conv = converters[prev + " " + current] || converters["* " + current];
            if (!conv) {
              for (conv2 in converters) {
                tmp = conv2.split(" ");
                if (tmp[1] === current) {
                  conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];
                  if (conv) {
                    if (conv === true) {
                      conv = converters[conv2];
                    } else if (converters[conv2] !== true) {
                      current = tmp[0];
                      dataTypes.unshift(tmp[1]);
                    }
                    break;
                  }
                }
              }
            }
            if (conv !== true) {
              if (conv && s["throws"]) {
                response = conv(response);
              } else {
                try {
                  response = conv(response);
                } catch (e) {
                  return {
                    state: "parsererror",
                    error: conv ? e : "No conversion from " + prev + " to " + current
                  };
                }
              }
            }
          }
        }
      }
      return {
        state: "success",
        data: response
      };
    }
    jQuery.extend({
      active: 0,
      lastModified: {},
      etag: {},
      ajaxSettings: {
        url: ajaxLocation,
        type: "GET",
        isLocal: rlocalProtocol.test(ajaxLocParts[1]),
        global: true,
        processData: true,
        async: true,
        contentType: "application/x-www-form-urlencoded; charset=UTF-8",
        accepts: {
          "*": allTypes,
          text: "text/plain",
          html: "text/html",
          xml: "application/xml, text/xml",
          json: "application/json, text/javascript"
        },
        contents: {
          xml: /xml/,
          html: /html/,
          json: /json/
        },
        responseFields: {
          xml: "responseXML",
          text: "responseText",
          json: "responseJSON"
        },
        converters: {
          "* text": String,
          "text html": true,
          "text json": jQuery.parseJSON,
          "text xml": jQuery.parseXML
        },
        flatOptions: {
          url: true,
          context: true
        }
      },
      ajaxSetup: function (target, settings) {
        return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);
      },
      ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
      ajaxTransport: addToPrefiltersOrTransports(transports),
      ajax: function (url, options) {
        if (typeof url === "object") {
          options = url;
          url = undefined;
        }
        options = options || {};
        var transport,
          cacheURL,
          responseHeadersString,
          responseHeaders,
          timeoutTimer,
          parts,
          fireGlobals,
          i,
          s = jQuery.ajaxSetup({}, options),
          callbackContext = s.context || s,
          globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,
          deferred = jQuery.Deferred(),
          completeDeferred = jQuery.Callbacks("once memory"),
          statusCode = s.statusCode || {},
          requestHeaders = {},
          requestHeadersNames = {},
          state = 0,
          strAbort = "canceled",
          jqXHR = {
            readyState: 0,
            getResponseHeader: function (key) {
              var match;
              if (state === 2) {
                if (!responseHeaders) {
                  responseHeaders = {};
                  while (match = rheaders.exec(responseHeadersString)) {
                    responseHeaders[match[1].toLowerCase()] = match[2];
                  }
                }
                match = responseHeaders[key.toLowerCase()];
              }
              return match == null ? null : match;
            },
            getAllResponseHeaders: function () {
              return state === 2 ? responseHeadersString : null;
            },
            setRequestHeader: function (name, value) {
              var lname = name.toLowerCase();
              if (!state) {
                name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;
                requestHeaders[name] = value;
              }
              return this;
            },
            overrideMimeType: function (type) {
              if (!state) {
                s.mimeType = type;
              }
              return this;
            },
            statusCode: function (map) {
              var code;
              if (map) {
                if (state < 2) {
                  for (code in map) {
                    statusCode[code] = [statusCode[code], map[code]];
                  }
                } else {
                  jqXHR.always(map[jqXHR.status]);
                }
              }
              return this;
            },
            abort: function (statusText) {
              var finalText = statusText || strAbort;
              if (transport) {
                transport.abort(finalText);
              }
              done(0, finalText);
              return this;
            }
          };
        deferred.promise(jqXHR).complete = completeDeferred.add;
        jqXHR.success = jqXHR.done;
        jqXHR.error = jqXHR.fail;
        s.url = ((url || s.url || ajaxLocation) + "").replace(rhash, "").replace(rprotocol, ajaxLocParts[1] + "//");
        s.type = options.method || options.type || s.method || s.type;
        s.dataTypes = jQuery.trim(s.dataType || "*").toLowerCase().match(rnotwhite) || [""];
        if (s.crossDomain == null) {
          parts = rurl.exec(s.url.toLowerCase());
          s.crossDomain = !!(parts && (parts[1] !== ajaxLocParts[1] || parts[2] !== ajaxLocParts[2] || (parts[3] || (parts[1] === "http:" ? "80" : "443")) !== (ajaxLocParts[3] || (ajaxLocParts[1] === "http:" ? "80" : "443"))));
        }
        if (s.data && s.processData && typeof s.data !== "string") {
          s.data = jQuery.param(s.data, s.traditional);
        }
        inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
        if (state === 2) {
          return jqXHR;
        }
        fireGlobals = s.global;
        if (fireGlobals && jQuery.active++ === 0) {
          jQuery.event.trigger("ajaxStart");
        }
        s.type = s.type.toUpperCase();
        s.hasContent = !rnoContent.test(s.type);
        cacheURL = s.url;
        if (!s.hasContent) {
          if (s.data) {
            cacheURL = s.url += (rquery.test(cacheURL) ? "&" : "?") + s.data;
            delete s.data;
          }
          if (s.cache === false) {
            s.url = rts.test(cacheURL) ? cacheURL.replace(rts, "$1_=" + nonce++) : cacheURL + (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce++;
          }
        }
        if (s.ifModified) {
          if (jQuery.lastModified[cacheURL]) {
            jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]);
          }
          if (jQuery.etag[cacheURL]) {
            jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL]);
          }
        }
        if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
          jqXHR.setRequestHeader("Content-Type", s.contentType);
        }
        jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]);
        for (i in s.headers) {
          jqXHR.setRequestHeader(i, s.headers[i]);
        }
        if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {
          return jqXHR.abort();
        }
        strAbort = "abort";
        for (i in {
          success: 1,
          error: 1,
          complete: 1
        }) {
          jqXHR[i](s[i]);
        }
        transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
        if (!transport) {
          done(-1, "No Transport");
        } else {
          jqXHR.readyState = 1;
          if (fireGlobals) {
            globalEventContext.trigger("ajaxSend", [jqXHR, s]);
          }
          if (s.async && s.timeout > 0) {
            timeoutTimer = setTimeout(function () {
              jqXHR.abort("timeout");
            }, s.timeout);
          }
          try {
            state = 1;
            transport.send(requestHeaders, done);
          } catch (e) {
            if (state < 2) {
              done(-1, e);
            } else {
              throw e;
            }
          }
        }
        function done(status, nativeStatusText, responses, headers) {
          var isSuccess,
            success,
            error,
            response,
            modified,
            statusText = nativeStatusText;
          if (state === 2) {
            return;
          }
          state = 2;
          if (timeoutTimer) {
            clearTimeout(timeoutTimer);
          }
          transport = undefined;
          responseHeadersString = headers || "";
          jqXHR.readyState = status > 0 ? 4 : 0;
          isSuccess = status >= 200 && status < 300 || status === 304;
          if (responses) {
            response = ajaxHandleResponses(s, jqXHR, responses);
          }
          response = ajaxConvert(s, response, jqXHR, isSuccess);
          if (isSuccess) {
            if (s.ifModified) {
              modified = jqXHR.getResponseHeader("Last-Modified");
              if (modified) {
                jQuery.lastModified[cacheURL] = modified;
              }
              modified = jqXHR.getResponseHeader("etag");
              if (modified) {
                jQuery.etag[cacheURL] = modified;
              }
            }
            if (status === 204 || s.type === "HEAD") {
              statusText = "nocontent";
            } else if (status === 304) {
              statusText = "notmodified";
            } else {
              statusText = response.state;
              success = response.data;
              error = response.error;
              isSuccess = !error;
            }
          } else {
            error = statusText;
            if (status || !statusText) {
              statusText = "error";
              if (status < 0) {
                status = 0;
              }
            }
          }
          jqXHR.status = status;
          jqXHR.statusText = (nativeStatusText || statusText) + "";
          if (isSuccess) {
            deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
          } else {
            deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
          }
          jqXHR.statusCode(statusCode);
          statusCode = undefined;
          if (fireGlobals) {
            globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [jqXHR, s, isSuccess ? success : error]);
          }
          completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);
          if (fireGlobals) {
            globalEventContext.trigger("ajaxComplete", [jqXHR, s]);
            if (! --jQuery.active) {
              jQuery.event.trigger("ajaxStop");
            }
          }
        }
        return jqXHR;
      },
      getJSON: function (url, data, callback) {
        return jQuery.get(url, data, callback, "json");
      },
      getScript: function (url, callback) {
        return jQuery.get(url, undefined, callback, "script");
      }
    });
    jQuery.each(["get", "post"], function (i, method) {
      jQuery[method] = function (url, data, callback, type) {
        if (jQuery.isFunction(data)) {
          type = type || callback;
          callback = data;
          data = undefined;
        }
        return jQuery.ajax({
          url: url,
          type: method,
          dataType: type,
          data: data,
          success: callback
        });
      };
    });
    jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (i, type) {
      jQuery.fn[type] = function (fn) {
        return this.on(type, fn);
      };
    });
    jQuery._evalUrl = function (url) {
      return jQuery.ajax({
        url: url,
        type: "GET",
        dataType: "script",
        async: false,
        global: false,
        "throws": true
      });
    };
    jQuery.fn.extend({
      wrapAll: function (html) {
        var wrap;
        if (jQuery.isFunction(html)) {
          return this.each(function (i) {
            jQuery(this).wrapAll(html.call(this, i));
          });
        }
        if (this[0]) {
          wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);
          if (this[0].parentNode) {
            wrap.insertBefore(this[0]);
          }
          wrap.map(function () {
            var elem = this;
            while (elem.firstElementChild) {
              elem = elem.firstElementChild;
            }
            return elem;
          }).append(this);
        }
        return this;
      },
      wrapInner: function (html) {
        if (jQuery.isFunction(html)) {
          return this.each(function (i) {
            jQuery(this).wrapInner(html.call(this, i));
          });
        }
        return this.each(function () {
          var self = jQuery(this),
            contents = self.contents();
          if (contents.length) {
            contents.wrapAll(html);
          } else {
            self.append(html);
          }
        });
      },
      wrap: function (html) {
        var isFunction = jQuery.isFunction(html);
        return this.each(function (i) {
          jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);
        });
      },
      unwrap: function () {
        return this.parent().each(function () {
          if (!jQuery.nodeName(this, "body")) {
            jQuery(this).replaceWith(this.childNodes);
          }
        }).end();
      }
    });
    jQuery.expr.filters.hidden = function (elem) {
      return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;
    };
    jQuery.expr.filters.visible = function (elem) {
      return !jQuery.expr.filters.hidden(elem);
    };
    var r20 = /%20/g,
      rbracket = /\[\]$/,
      rCRLF = /\r?\n/g,
      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
      rsubmittable = /^(?:input|select|textarea|keygen)/i;
    function buildParams(prefix, obj, traditional, add) {
      var name;
      if (jQuery.isArray(obj)) {
        jQuery.each(obj, function (i, v) {
          if (traditional || rbracket.test(prefix)) {
            add(prefix, v);
          } else {
            buildParams(prefix + "[" + (typeof v === "object" ? i : "") + "]", v, traditional, add);
          }
        });
      } else if (!traditional && jQuery.type(obj) === "object") {
        for (name in obj) {
          buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
        }
      } else {
        add(prefix, obj);
      }
    }
    jQuery.param = function (a, traditional) {
      var prefix,
        s = [],
        add = function (key, value) {
          value = jQuery.isFunction(value) ? value() : value == null ? "" : value;
          s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value);
        };
      if (traditional === undefined) {
        traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
      }
      if (jQuery.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {
        jQuery.each(a, function () {
          add(this.name, this.value);
        });
      } else {
        for (prefix in a) {
          buildParams(prefix, a[prefix], traditional, add);
        }
      }
      return s.join("&").replace(r20, "+");
    };
    jQuery.fn.extend({
      serialize: function () {
        return jQuery.param(this.serializeArray());
      },
      serializeArray: function () {
        return this.map(function () {
          var elements = jQuery.prop(this, "elements");
          return elements ? jQuery.makeArray(elements) : this;
        }).filter(function () {
          var type = this.type;
          return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
        }).map(function (i, elem) {
          var val = jQuery(this).val();
          return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function (val) {
            return {
              name: elem.name,
              value: val.replace(rCRLF, "\r\n")
            };
          }) : {
            name: elem.name,
            value: val.replace(rCRLF, "\r\n")
          };
        }).get();
      }
    });
    jQuery.ajaxSettings.xhr = function () {
      try {
        return new XMLHttpRequest();
      } catch (e) {}
    };
    var xhrId = 0,
      xhrCallbacks = {},
      xhrSuccessStatus = {
        0: 200,
        1223: 204
      },
      xhrSupported = jQuery.ajaxSettings.xhr();
    if (window.ActiveXObject) {
      jQuery(window).on("unload", function () {
        for (var key in xhrCallbacks) {
          xhrCallbacks[key]();
        }
      });
    }
    support.cors = !!xhrSupported && "withCredentials" in xhrSupported;
    support.ajax = xhrSupported = !!xhrSupported;
    jQuery.ajaxTransport(function (options) {
      var callback;
      if (support.cors || xhrSupported && !options.crossDomain) {
        return {
          send: function (headers, complete) {
            var i,
              xhr = options.xhr(),
              id = ++xhrId;
            xhr.open(options.type, options.url, options.async, options.username, options.password);
            if (options.xhrFields) {
              for (i in options.xhrFields) {
                xhr[i] = options.xhrFields[i];
              }
            }
            if (options.mimeType && xhr.overrideMimeType) {
              xhr.overrideMimeType(options.mimeType);
            }
            if (!options.crossDomain && !headers["X-Requested-With"]) {
              headers["X-Requested-With"] = "XMLHttpRequest";
            }
            for (i in headers) {
              xhr.setRequestHeader(i, headers[i]);
            }
            callback = function (type) {
              return function () {
                if (callback) {
                  delete xhrCallbacks[id];
                  callback = xhr.onload = xhr.onerror = null;
                  if (type === "abort") {
                    xhr.abort();
                  } else if (type === "error") {
                    complete(xhr.status, xhr.statusText);
                  } else {
                    complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, typeof xhr.responseText === "string" ? {
                      text: xhr.responseText
                    } : undefined, xhr.getAllResponseHeaders());
                  }
                }
              };
            };
            xhr.onload = callback();
            xhr.onerror = callback("error");
            callback = xhrCallbacks[id] = callback("abort");
            try {
              xhr.send(options.hasContent && options.data || null);
            } catch (e) {
              if (callback) {
                throw e;
              }
            }
          },
          abort: function () {
            if (callback) {
              callback();
            }
          }
        };
      }
    });
    jQuery.ajaxSetup({
      accepts: {
        script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
      },
      contents: {
        script: /(?:java|ecma)script/
      },
      converters: {
        "text script": function (text) {
          jQuery.globalEval(text);
          return text;
        }
      }
    });
    jQuery.ajaxPrefilter("script", function (s) {
      if (s.cache === undefined) {
        s.cache = false;
      }
      if (s.crossDomain) {
        s.type = "GET";
      }
    });
    jQuery.ajaxTransport("script", function (s) {
      if (s.crossDomain) {
        var script, callback;
        return {
          send: function (_, complete) {
            script = jQuery("<script>").prop({
              async: true,
              charset: s.scriptCharset,
              src: s.url
            }).on("load error", callback = function (evt) {
              script.remove();
              callback = null;
              if (evt) {
                complete(evt.type === "error" ? 404 : 200, evt.type);
              }
            });
            document.head.appendChild(script[0]);
          },
          abort: function () {
            if (callback) {
              callback();
            }
          }
        };
      }
    });
    var oldCallbacks = [],
      rjsonp = /(=)\?(?=&|$)|\?\?/;
    jQuery.ajaxSetup({
      jsonp: "callback",
      jsonpCallback: function () {
        var callback = oldCallbacks.pop() || jQuery.expando + "_" + nonce++;
        this[callback] = true;
        return callback;
      }
    });
    jQuery.ajaxPrefilter("json jsonp", function (s, originalSettings, jqXHR) {
      var callbackName,
        overwritten,
        responseContainer,
        jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? "url" : typeof s.data === "string" && !(s.contentType || "").indexOf("application/x-www-form-urlencoded") && rjsonp.test(s.data) && "data");
      if (jsonProp || s.dataTypes[0] === "jsonp") {
        callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;
        if (jsonProp) {
          s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName);
        } else if (s.jsonp !== false) {
          s.url += (rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName;
        }
        s.converters["script json"] = function () {
          if (!responseContainer) {
            jQuery.error(callbackName + " was not called");
          }
          return responseContainer[0];
        };
        s.dataTypes[0] = "json";
        overwritten = window[callbackName];
        window[callbackName] = function () {
          responseContainer = arguments;
        };
        jqXHR.always(function () {
          window[callbackName] = overwritten;
          if (s[callbackName]) {
            s.jsonpCallback = originalSettings.jsonpCallback;
            oldCallbacks.push(callbackName);
          }
          if (responseContainer && jQuery.isFunction(overwritten)) {
            overwritten(responseContainer[0]);
          }
          responseContainer = overwritten = undefined;
        });
        return "script";
      }
    });
    jQuery.parseHTML = function (data, context, keepScripts) {
      if (!data || typeof data !== "string") {
        return null;
      }
      if (typeof context === "boolean") {
        keepScripts = context;
        context = false;
      }
      context = context || document;
      var parsed = rsingleTag.exec(data),
        scripts = !keepScripts && [];
      if (parsed) {
        return [context.createElement(parsed[1])];
      }
      parsed = jQuery.buildFragment([data], context, scripts);
      if (scripts && scripts.length) {
        jQuery(scripts).remove();
      }
      return jQuery.merge([], parsed.childNodes);
    };
    var _load = jQuery.fn.load;
    jQuery.fn.load = function (url, params, callback) {
      if (typeof url !== "string" && _load) {
        return _load.apply(this, arguments);
      }
      var selector,
        type,
        response,
        self = this,
        off = url.indexOf(" ");
      if (off >= 0) {
        selector = jQuery.trim(url.slice(off));
        url = url.slice(0, off);
      }
      if (jQuery.isFunction(params)) {
        callback = params;
        params = undefined;
      } else if (params && typeof params === "object") {
        type = "POST";
      }
      if (self.length > 0) {
        jQuery.ajax({
          url: url,
          type: type,
          dataType: "html",
          data: params
        }).done(function (responseText) {
          response = arguments;
          self.html(selector ? jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : responseText);
        }).complete(callback && function (jqXHR, status) {
          self.each(callback, response || [jqXHR.responseText, status, jqXHR]);
        });
      }
      return this;
    };
    jQuery.expr.filters.animated = function (elem) {
      return jQuery.grep(jQuery.timers, function (fn) {
        return elem === fn.elem;
      }).length;
    };
    var docElem = window.document.documentElement;
    function getWindow(elem) {
      return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView;
    }
    jQuery.offset = {
      setOffset: function (elem, options, i) {
        var curPosition,
          curLeft,
          curCSSTop,
          curTop,
          curOffset,
          curCSSLeft,
          calculatePosition,
          position = jQuery.css(elem, "position"),
          curElem = jQuery(elem),
          props = {};
        if (position === "static") {
          elem.style.position = "relative";
        }
        curOffset = curElem.offset();
        curCSSTop = jQuery.css(elem, "top");
        curCSSLeft = jQuery.css(elem, "left");
        calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1;
        if (calculatePosition) {
          curPosition = curElem.position();
          curTop = curPosition.top;
          curLeft = curPosition.left;
        } else {
          curTop = parseFloat(curCSSTop) || 0;
          curLeft = parseFloat(curCSSLeft) || 0;
        }
        if (jQuery.isFunction(options)) {
          options = options.call(elem, i, curOffset);
        }
        if (options.top != null) {
          props.top = options.top - curOffset.top + curTop;
        }
        if (options.left != null) {
          props.left = options.left - curOffset.left + curLeft;
        }
        if ("using" in options) {
          options.using.call(elem, props);
        } else {
          curElem.css(props);
        }
      }
    };
    jQuery.fn.extend({
      offset: function (options) {
        if (arguments.length) {
          return options === undefined ? this : this.each(function (i) {
            jQuery.offset.setOffset(this, options, i);
          });
        }
        var docElem,
          win,
          elem = this[0],
          box = {
            top: 0,
            left: 0
          },
          doc = elem && elem.ownerDocument;
        if (!doc) {
          return;
        }
        docElem = doc.documentElement;
        if (!jQuery.contains(docElem, elem)) {
          return box;
        }
        if (typeof elem.getBoundingClientRect !== strundefined) {
          box = elem.getBoundingClientRect();
        }
        win = getWindow(doc);
        return {
          top: box.top + win.pageYOffset - docElem.clientTop,
          left: box.left + win.pageXOffset - docElem.clientLeft
        };
      },
      position: function () {
        if (!this[0]) {
          return;
        }
        var offsetParent,
          offset,
          elem = this[0],
          parentOffset = {
            top: 0,
            left: 0
          };
        if (jQuery.css(elem, "position") === "fixed") {
          offset = elem.getBoundingClientRect();
        } else {
          offsetParent = this.offsetParent();
          offset = this.offset();
          if (!jQuery.nodeName(offsetParent[0], "html")) {
            parentOffset = offsetParent.offset();
          }
          parentOffset.top += jQuery.css(offsetParent[0], "borderTopWidth", true);
          parentOffset.left += jQuery.css(offsetParent[0], "borderLeftWidth", true);
        }
        return {
          top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", true),
          left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", true)
        };
      },
      offsetParent: function () {
        return this.map(function () {
          var offsetParent = this.offsetParent || docElem;
          while (offsetParent && !jQuery.nodeName(offsetParent, "html") && jQuery.css(offsetParent, "position") === "static") {
            offsetParent = offsetParent.offsetParent;
          }
          return offsetParent || docElem;
        });
      }
    });
    jQuery.each({
      scrollLeft: "pageXOffset",
      scrollTop: "pageYOffset"
    }, function (method, prop) {
      var top = "pageYOffset" === prop;
      jQuery.fn[method] = function (val) {
        return access(this, function (elem, method, val) {
          var win = getWindow(elem);
          if (val === undefined) {
            return win ? win[prop] : elem[method];
          }
          if (win) {
            win.scrollTo(!top ? val : window.pageXOffset, top ? val : window.pageYOffset);
          } else {
            elem[method] = val;
          }
        }, method, val, arguments.length, null);
      };
    });
    jQuery.each(["top", "left"], function (i, prop) {
      jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {
        if (computed) {
          computed = curCSS(elem, prop);
          return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed;
        }
      });
    });
    jQuery.each({
      Height: "height",
      Width: "width"
    }, function (name, type) {
      jQuery.each({
        padding: "inner" + name,
        content: type,
        "": "outer" + name
      }, function (defaultExtra, funcName) {
        jQuery.fn[funcName] = function (margin, value) {
          var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"),
            extra = defaultExtra || (margin === true || value === true ? "margin" : "border");
          return access(this, function (elem, type, value) {
            var doc;
            if (jQuery.isWindow(elem)) {
              return elem.document.documentElement["client" + name];
            }
            if (elem.nodeType === 9) {
              doc = elem.documentElement;
              return Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name]);
            }
            return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
          }, type, chainable ? margin : undefined, chainable, null);
        };
      });
    });
    jQuery.fn.size = function () {
      return this.length;
    };
    jQuery.fn.andSelf = jQuery.fn.addBack;
    var _jQuery = window.jQuery,
      _$ = window.$;
    jQuery.noConflict = function (deep) {
      if (window.$ === jQuery) {
        window.$ = _$;
      }
      if (deep && window.jQuery === jQuery) {
        window.jQuery = _jQuery;
      }
      return jQuery;
    };
    if (typeof noGlobal === strundefined) {
      window.jQuery = window.$ = jQuery;
    }
    return jQuery;
  });
  return jQuery.noConflict(true);
});
define('taoQtiItem/portableLib/OAT/util/EventMgr', [], function () {
  'use strict';

  return function EventMgr() {
    const events = {};
    this.get = event => {
      if (event && events[event]) {
        return [...events[event]];
      } else {
        return [];
      }
    };
    this.on = (event, callback) => {
      let name;
      const tokens = event.split('.');
      if (tokens[0]) {
        name = tokens.shift();
        events[name] = events[name] || [];
        events[name].push({
          ns: tokens,
          callback: callback
        });
      }
    };
    this.off = event => {
      if (event && events[event]) {
        events[event] = [];
      }
    };
    this.trigger = (event, data) => {
      if (events[event]) {
        events[event].forEach(e => {
          e.callback.apply({
            type: event,
            ns: []
          }, data);
        });
      }
    };
  };
});
define('taoQtiItem/portableLib/OAT/util/event', ['taoQtiItem/portableLib/OAT/util/EventMgr'], function (EventMgr) {
  return {
    addEventMgr: function (instance) {
      const eventMgr = new EventMgr();
      instance.on = (event, callback) => {
        eventMgr.on(event, callback);
      };
      instance.off = event => {
        eventMgr.off(event);
      };
      instance.trigger = (event, data) => {
        eventMgr.trigger(event, data);
      };
    }
  };
});
define('audioRecordingInteraction/runtime/js/modal', ['taoQtiItem/portableLib/jquery_2_1_1'], function ($) {
  var pluginName = 'modal';
  var dataNs = 'ui.' + pluginName;
  var defaults = {
    modalCloseClass: 'modal-close',
    modalOverlayClass: 'modal-bg',
    startClosed: false,
    disableClosing: false,
    width: 'responsive',
    minWidth: 0,
    minHeight: 0,
    vCenter: true,
    $context: null,
    animate: 400
  };
  var animateDiff = 100;
  var modal = {
    init: function ($modal, options) {
      var $overlay;
      options.modalOverlay = '__modal-bg-' + ($modal.attr('id') || new Date().getTime());
      $modal.data(dataNs, options);
      if ($('#' + options.modalOverlay).length === 0) {
        $overlay = $('<div/>').attr({
          id: options.modalOverlay,
          class: options.modalOverlayClass
        });
        if (options.$context instanceof $ && options.$context.length) {
          $overlay.css('position', 'absolute');
          options.$context.append($overlay);
        } else {
          $modal.after($overlay);
        }
      }
      if ($('.' + options.modalCloseClass, $modal).length === 0 && !options.disableClosing) {
        $('<button ' + 'id="modal-close-btn" ' + 'class="' + options.modalCloseClass + '" ' + 'aria-label="Close dialog" ' + 'data-control="close"' + '>' + '<span class="icon-close"></span>' + '</button>').appendTo($modal);
      }
      if (!options.startClosed) {
        modal._open($modal);
      }
    },
    _destroy: function ($element) {
      return $element.each(function () {
        var $modal = $(this);
        var options = $modal.data(dataNs);
        $modal.removeData(dataNs);
        $('#' + options.modalOverlay).remove();
        $modal.hide();
      });
    },
    _bindEvents: function ($element) {
      var options = $element.data(dataNs);
      if (options) {
        if (options.width === 'responsive') {
          $(window).on('resize.' + pluginName, function (e) {
            e.preventDefault();
            modal._resize($element);
          });
        }
        if (!options.disableClosing) {
          $('.' + options.modalCloseClass, $element).on('click.' + pluginName, function (e) {
            e.preventDefault();
            closeModal($element);
          });
          $('#' + options.modalOverlay).on('click.' + pluginName, function (e) {
            e.preventDefault();
            closeModal($element);
          });
          if (!options.disableEscape) {
            $(document).on('keydown.' + pluginName, function (e) {
              if (e.keyCode === 27) {
                e.preventDefault();
                closeModal($element);
              }
            });
          }
        }
      }
    },
    _unBindEvents: function ($element) {
      var options = $element.data(dataNs);
      if (options && options.width === 'responsive') {
        $(window).off('resize.' + pluginName);
      }
      $element.off('click.' + pluginName);
      if (options && !options.disableClosing) {
        $('.' + options.modalCloseClass, $element).off('click.' + pluginName);
        $('#' + options.modalOverlay).off('click.' + pluginName);
        $(document).off('keydown.' + pluginName);
      }
    },
    _open: function ($element) {
      var modalHeight = $element.outerHeight(),
        windowHeight = $(window).height(),
        options = $element.data(dataNs),
        topOffset,
        onOpen,
        $overlay,
        to;
      if (typeof options !== 'undefined') {
        onOpen = function () {
          $element.addClass('opened');
          modal._bindEvents($element);
        };
        if (!options.top) {
          topOffset = options.vCenter || modalHeight > windowHeight ? 40 : (windowHeight - modalHeight) / 2;
        } else {
          topOffset = options.top;
        }
        if (!options.top && !$element.parent().hasClass('no-scroll-offset')) {
          $element.parents().map(function () {
            if (this.tagName !== 'BODY' && this.tagName !== 'HTML') {
              topOffset += parseInt($(this).scrollTop(), 10);
            }
          });
        }
        to = {
          opacity: '1',
          top: topOffset + 'px'
        };
        modal._resize($element);
        $overlay = $('#' + options.modalOverlay);
        $element.show();
        if (options.animate && $element.is(':visible')) {
          $element.css({
            top: '-' + modalHeight + 'px',
            display: 'block'
          });
          $overlay.fadeIn(options.animate - animateDiff);
          $element.animate(to, options.animate, onOpen);
        } else {
          $overlay.show();
          $element.css(to);
          onOpen();
        }
      }
    },
    _close: function ($element) {
      closeModal($element);
    },
    _resize: function ($element) {
      var options = $element.data(dataNs);
      var windowWidth = parseInt($(window).width(), 10);
      var css = {};
      var modalWidth = options.width === 'responsive' ? windowWidth * 0.7 : parseInt(options.width, 10);
      css.width = Math.max(modalWidth, options.minWidth);
      if (options.minHeight) {
        css.minHeight = parseInt(options.minHeight) + 'px';
      }
      $element.css(css);
    }
  };
  function closeModal($element) {
    var options = $element.data(dataNs);
    var $overlay = $('#' + options.modalOverlay);
    var onClose = function () {
      $element.removeClass('opened');
      $element.css('display', 'none');
    };
    modal._unBindEvents($element);
    if (options.animate && $element.is(':visible')) {
      $overlay.fadeOut(options.animate - animateDiff);
      $element.animate({
        opacity: '0',
        top: '-1000px'
      }, options.animate, onClose);
    } else {
      $overlay.hide();
      $element.hide();
      onClose();
    }
  }
  $.fn.modal = function (options) {
    options = $.extend(true, {}, defaults, options);
    if (options.animate) {
      if ('number' !== typeof options.animate) {
        options.animate = defaults.animate;
      } else {
        options.animate = Math.max(animateDiff, options.animate);
      }
    }
    return this.each(function () {
      modal.init($(this), options);
    });
  };
});
define('audioRecordingInteraction/runtime/js/dialog', ['taoQtiItem/portableLib/jquery_2_1_1', 'audioRecordingInteraction/runtime/js/modal'], function ($) {
  'use strict';
  var _scope = '.modal';
  var _defaults = {
    message: '',
    width: 500,
    animate: false,
    autoRender: false,
    autoDestroy: false,
    renderTo: 'body'
  };
  var dialog = {
    init(options) {
      var events = {};
      var initOptions = {};
      Object.keys(options || {}).forEach(function (key) {
        if (key.length > 2 && 'on' === key.substring(0, 2)) {
          events[key.substring(2)] = options[key];
        }
        initOptions[key] = options[key];
      });
      Object.assign(this, _defaults, initOptions);
      this.dialogId = 'dlg-1';
      this.$html = $('<div ' + 'class="modal ' + this.class + '" ' + 'role="dialog" ' + 'aria-modal="true" ' + 'data-control="navigable-modal-body" ' + 'aria-describedby="core/ui-dialog-message-' + this.dialogId + '">' + '<div class="modal-body clearfix">' + '<p id="core/ui-dialog-message-' + this.dialogId + '" class="message">' + this.message + '</p>' + '</div>' + '</div>');
      this.rendered = false;
      this.destroyed = false;
      Object.keys(events).forEach(function (eventName) {
        var callback = events[eventName];
        if (eventName.indexOf('.') < 0) {
          eventName += _scope;
        }
        this.on(eventName.toLowerCase(), callback);
      });
      if (this.autoRender) {
        this.render();
      }
      return this;
    },
    destroy() {
      if (!this.destroyed) {
        this._destroy();
        this.rendered = false;
        this.destroyed = true;
        this.trigger('destroy' + _scope);
        this.$html.off(_scope).remove();
        this.$html = null;
      }
      return this;
    },
    render(to) {
      if (!this.destroyed) {
        $(to || this.renderTo).append(this.$html);
        this._install();
        this.rendered = true;
      }
      return this;
    },
    show() {
      if (!this.destroyed) {
        if (!this.rendered) {
          this.render();
        } else {
          this._open();
        }
      }
      return this;
    },
    hide() {
      if (!this.destroyed && this.rendered) {
        this._close();
        if (this.autoDestroy) {
          this.destroy();
        }
      }
      return this;
    },
    on() {
      if (this.$html) {
        this.$html.on.apply(this.$html, arguments);
      }
      return this;
    },
    off() {
      if (this.$html) {
        this.$html.off.apply(this.$html, arguments);
      }
      return this;
    },
    trigger(eventName, extraParameters) {
      if (this.$html) {
        if (typeof extraParameters === 'undefined') {
          extraParameters = [];
        }
        if (!Array.isArray(extraParameters)) {
          extraParameters = [extraParameters];
        }
        extraParameters = Array.prototype.slice.call(extraParameters);
        extraParameters.push(this);
        this.$html.trigger(eventName, extraParameters);
      }
      return this;
    },
    getDom() {
      return this.$html;
    },
    _install() {
      if (!this.destroyed) {
        this.$html.modal({
          width: this.width,
          animate: this.animate,
          disableClosing: this.disableClosing,
          disableEscape: this.disableEscape
        }).on('closed' + _scope, function () {
          if (this.autoDestroy) {
            this.destroy();
          }
        });
        var $items = this.getDom().add($(_scope).find('input'));
        var closeButton = $(_scope).find('#modal-close-btn')[0];
        if (closeButton) {
          $items.push(closeButton);
        }
        this.trigger('create.dialog');
      }
    },
    _open() {
      this.$html.modal('open');
    },
    _close() {
      this.$html.modal('close');
    },
    _destroy() {
      this.$html.modal('destroy');
      if (this.navigator) {
        this.navigator.destroy();
      }
      if (this.globalShortcut) {
        this.globalShortcut.clear();
      }
    }
  };
  return function dialogFactory(options) {
    var instance = Object.assign({}, dialog);
    instance.init(options);
    return instance;
  };
});
define('audioRecordingInteraction/runtime/js/player', ['taoQtiItem/portableLib/jquery_2_1_1', 'taoQtiItem/portableLib/OAT/util/event', 'audioRecordingInteraction/runtime/js/dialog'], function ($, event, dialogFactory) {
  'use strict';
  var playerStates = {
    CREATED: 'created',
    IDLE: 'idle',
    PLAYING: 'playing'
  };
  function b64toBlob(b64Data, contentType, sliceSize) {
    var byteCharacters = atob(b64Data);
    var byteArrays = [];
    var offset, slice, byteNumbers, byteArray, blob, i;
    contentType = contentType || '';
    sliceSize = sliceSize || 512;
    for (offset = 0; offset < byteCharacters.length; offset += sliceSize) {
      slice = byteCharacters.slice(offset, offset + sliceSize);
      byteNumbers = new Array(slice.length);
      for (i = 0; i < slice.length; i++) {
        byteNumbers[i] = slice.charCodeAt(i);
      }
      byteArray = new Uint8Array(byteNumbers);
      byteArrays.push(byteArray);
    }
    blob = new Blob(byteArrays, {
      type: contentType
    });
    return blob;
  }
  return function playerFactory() {
    var audioEl,
      player,
      state = playerStates.CREATED;
    function setState(playerInstance, newState) {
      state = newState;
      playerInstance.trigger('statechange');
      playerInstance.trigger(newState);
    }
    function errorDialog(message) {
      var dialog = dialogFactory({
        message: message,
        autoRender: true,
        autoDestroy: true,
        class: 'icon-info'
      });
      return dialog;
    }
    player = {
      is: function is(queriedState) {
        return state === queriedState;
      },
      load: function load(url) {
        var self = this;
        audioEl = new Audio(url);
        audioEl.ondurationchange = function ondurationchange() {
          if (Number.isFinite(audioEl.duration)) {
            self.trigger('durationchange', [audioEl.duration]);
          }
        };
        audioEl.oncanplay = function oncanplay() {
          setState(player, playerStates.IDLE);
          self.trigger('oncanplay');
        };
        audioEl.onended = function onended() {
          setState(player, playerStates.IDLE);
          audioEl.currentTime = 0;
          self.trigger('timeupdate', [0]);
          self.trigger('playbackend');
        };
        audioEl.onplaying = function onplaying() {
          setState(player, playerStates.PLAYING);
        };
        audioEl.ontimeupdate = function ontimeupdate() {
          self.trigger('timeupdate', [audioEl.currentTime]);
        };
        audioEl.onloadedmetadata = function () {
          var ontimeupdateBackup = audioEl.ontimeupdate;
          if (audioEl.duration === Infinity) {
            audioEl.ontimeupdate = function () {
              audioEl.ontimeupdate = ontimeupdateBackup;
              audioEl.currentTime = 0;
              audioEl.load();
            };
            audioEl.currentTime = 1e101;
            audioEl.onloadedmetadata = null;
          }
        };
        setState(player, playerStates.IDLE);
      },
      loadFromBase64: function loadFromBase64(base64, mime) {
        var blob = b64toBlob(base64, mime),
          blobUrl = window.URL && window.URL.createObjectURL && window.URL.createObjectURL(blob);
        if (blobUrl) {
          this.load(blobUrl);
        }
      },
      play: function play() {
        audioEl.play().catch(e => errorDialog('Audio has been previously recorded. Your browser does not support the playback of this recording. Please try on a different browser.'));
      },
      stop: function stop() {
        audioEl.pause();
        audioEl.currentTime = 0;
        setState(player, playerStates.IDLE);
        this.trigger('playbackend');
      },
      unload: function unload() {
        if (audioEl) {
          audioEl.ontimeupdate = null;
        }
        audioEl = null;
        setState(player, playerStates.CREATED);
      }
    };
    event.addEventMgr(player);
    return player;
  };
});
define('audioRecordingInteraction/runtime/js/providers/mediaRecorder', ['taoQtiItem/portableLib/OAT/util/event'], function (event) {
  'use strict';
  var defaultPartialUpdateInterval = 1000;
  return function mediaRecorderProviderFactory(config) {
    var mediaRecorderProvider;
    var partialUpdateInterval = config.partialUpdateInterval || defaultPartialUpdateInterval;
    var partialUpdateTimeout = null;
    var partialUpdateAllowed = true;
    var partialSize = 0;
    var recordSize = 0;
    var cleanupPartialUpdateTimeout = function cleanupPartialUpdateTimeout() {
      if (partialUpdateTimeout) {
        clearTimeout(partialUpdateTimeout);
      }
      partialUpdateTimeout = null;
    };
    var MediaRecorder = window.MediaRecorder,
      mediaRecorder,
      recorderOptions = {
        audioBitsPerSecond: config.audioBitrate || 20000
      };
    var mimeType,
      chunks = [],
      chunkSizeMs = 100;
    var codecsByPreferenceOrder = ['audio/ogg;codecs=opus', 'audio/webm;codecs=opus', 'audio/webm', 'audio/ogg', 'audio/mp4'];
    if (typeof MediaRecorder.isTypeSupported === 'function') {
      codecsByPreferenceOrder.forEach(function (format) {
        if (typeof recorderOptions.mimeType === 'undefined' && MediaRecorder.isTypeSupported(format)) {
          recorderOptions.mimeType = format;
        }
      });
    }
    mediaRecorderProvider = {
      init: function init(stream) {
        var self = this;
        mediaRecorder = new MediaRecorder(stream, recorderOptions);
        mimeType = mediaRecorder.mimeType;
        mediaRecorder.ondataavailable = function ondataavailable(e) {
          var blob;
          chunks.push(e.data);
          recordSize += e.data.size;
          if (config.updateResponsePartially && partialUpdateAllowed && recordSize > partialSize) {
            partialUpdateAllowed = false;
            partialSize = recordSize;
            blob = new Blob(chunks, {
              type: mimeType
            });
            self.trigger('partialblobavailable', [blob]);
            partialUpdateTimeout = setTimeout(function allowPartialUpdate() {
              partialUpdateAllowed = true;
              partialUpdateTimeout = null;
            }, partialUpdateInterval);
          }
        };
        mediaRecorder.onstop = function onstop() {
          var blob;
          cleanupPartialUpdateTimeout();
          if (!self.cancelled) {
            blob = new Blob(chunks, {
              type: mimeType
            });
            self.trigger('blobavailable', [blob]);
          }
          chunks = [];
        };
        mediaRecorder.onerror = function (error) {
          window.console.error(error);
        };
      },
      start: function start() {
        partialUpdateAllowed = true;
        partialSize = 0;
        recordSize = 0;
        mediaRecorder.start(chunkSizeMs);
      },
      stop: function stop() {
        this.cancelled = false;
        mediaRecorder.stop();
      },
      cancel: function cancel() {
        this.cancelled = true;
        mediaRecorder.stop();
      },
      destroy: function destroy() {
        cleanupPartialUpdateTimeout();
        if (mediaRecorder && mediaRecorder.state === 'recording') {
          mediaRecorder.stop();
        }
        mediaRecorder = null;
      }
    };
    event.addEventMgr(mediaRecorderProvider);
    return mediaRecorderProvider;
  };
});
define('text!audioRecordingInteraction/runtime/js/workers/WebAudioRecorderWav.js', [], function () {
  return '/* eslint-disable */\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 Yuji Miyane\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the "Software"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar min = Math.min,\n    max = Math.max;\n\nvar setString = function(view, offset, str) {\n    var len = str.length;\n    for (var i = 0; i < len; ++i)\n        view.setUint8(offset + i, str.charCodeAt(i));\n};\n\n/**\n * @returns {DataView}\n */\nvar getDataView = function(numChannels, numSamples, sampleRate) {\n    var dataSize = numChannels * numSamples * 2,\n        view     = new DataView(new ArrayBuffer(44));\n    setString(view, 0, \'RIFF\');\n    view.setUint32(4, 36 + dataSize, true);\n    setString(view, 8, \'WAVE\');\n    setString(view, 12, \'fmt \');\n    view.setUint32(16, 16, true);\n    view.setUint16(20, 1, true);\n    view.setUint16(22, numChannels, true);\n    view.setUint32(24, sampleRate, true);\n    view.setUint32(28, sampleRate * 4, true);\n    view.setUint16(32, numChannels * 2, true);\n    view.setUint16(34, 16, true);\n    setString(view, 36, \'data\');\n    view.setUint32(40, dataSize, true);\n\n    return view;\n};\n\nvar WavAudioEncoder = function(sampleRate, numChannels) {\n    this.sampleRate = sampleRate;\n    this.numChannels = numChannels;\n    this.numSamples = 0;\n    this.dataViews = [];\n};\n\nWavAudioEncoder.prototype.encode = function(buffer) {\n    var len = buffer[0].length,\n        nCh = this.numChannels,\n        view = new DataView(new ArrayBuffer(len * nCh * 2)),\n        offset = 0;\n    for (var i = 0; i < len; ++i)\n        for (var ch = 0; ch < nCh; ++ch) {\n            var x = buffer[ch][i] * 0x7fff;\n            view.setInt16(offset, x < 0 ? max(x, -0x8000) : min(x, 0x7fff), true);\n            offset += 2;\n        }\n    this.dataViews.push(view);\n    this.numSamples += len;\n};\n\n/**\n * Returns the previously encoded audio and cleans the buffers\n *\n * @param mimeType\n * @returns {Blob}\n */\n WavAudioEncoder.prototype.finish = function(mimeType) {\n    var view = getDataView(this.numChannels, this.numSamples, this.sampleRate);\n    this.dataViews.unshift(view);\n    var blob = new Blob(this.dataViews, { type: \'audio/wav\' });\n    this.cleanup();\n    return blob;\n};\n\n/**\n * Returns the previously encoded audio without modifying or cleaning the original encoded data\n *\n * @param mimeType\n * @returns {Blob}\n */\n WavAudioEncoder.prototype.partialFinish = function(mimeType) {\n    var view = getDataView(this.numChannels, this.numSamples, this.sampleRate);\n    var tmpDataViews = this.dataViews.slice();\n    tmpDataViews.unshift(view);\n    var blob = new Blob(tmpDataViews, { type: \'audio/wav\' });\n    return blob;\n};\n\nWavAudioEncoder.prototype.cancel = WavAudioEncoder.prototype.cleanup = function() {\n    delete this.dataViews;\n};\n\n/* eslint-disable */\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 Yuji Miyane\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the "Software"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * OAT version with the following changes:\n * - init(), record(), cleanup(): allow partial update of the recording, throttled by the given interval\n * - record(): do not timeout if maxBuffers (= timeLimit option) is equal to zero\n * - cleanup(): removed chaining assignment that might result in a TypeError\n */\nvar sampleRate = 44100,\n    numChannels = 2,\n    options = undefined,\n    maxBuffers = undefined,\n    encoder = undefined,\n    recBuffers = undefined,\n    bufferCount = 0,\n    updateResponsePartially,\n    partialUpdateInterval,\n    partialUpdateTimeout = null,\n    partialUpdateAllowed = true;\n\nvar defaultPartialUpdateInterval = 1000;\n\nfunction error(message) {\n    self.postMessage({ command: "error", message: "wav: " + message });\n}\n\nfunction init(data) {\n    sampleRate = data.config.sampleRate;\n    numChannels = data.config.numChannels;\n    options = data.options;\n    updateResponsePartially = data.config.updateResponsePartially;\n    partialUpdateInterval = data.config.partialUpdateInterval || defaultPartialUpdateInterval;\n    partialUpdateAllowed = true;\n}\n\nfunction setOptions(opt) {\n    if (encoder || recBuffers)\n        error("cannot set options during recording");\n    else\n        options = opt;\n}\n\nfunction start(bufferSize) {\n    maxBuffers = Math.ceil(options.timeLimit * sampleRate / bufferSize);\n    if (options.encodeAfterRecord)\n        recBuffers = [];\n    else\n        encoder = new WavAudioEncoder(sampleRate, numChannels);\n}\n\nfunction record(buffer) {\n    if (!maxBuffers || bufferCount++ < maxBuffers) {\n        if (encoder) {\n            encoder.encode(buffer);\n\n            if (updateResponsePartially && partialUpdateAllowed) {\n                partialUpdateAllowed = false;\n\n                self.postMessage({\n                    command: "partialcomplete",\n                    blob: encoder.partialFinish(options.wav.mimeType),\n                });\n\n                partialUpdateTimeout = setTimeout(function allowPartialUpdate() {\n                    partialUpdateAllowed = true;\n                    partialUpdateTimeout = null;\n                }, partialUpdateInterval);\n            }\n\n        } else {\n            recBuffers.push(buffer);\n        }\n    } else {\n        self.postMessage({command: "timeout"});\n    }\n};\n\nfunction postProgress(progress) {\n    self.postMessage({ command: "progress", progress: progress });\n};\n\nfunction finish() {\n    if (recBuffers) {\n        postProgress(0);\n        encoder = new WavAudioEncoder(sampleRate, numChannels);\n        var timeout = Date.now() + options.progressInterval;\n        while (recBuffers.length > 0) {\n            encoder.encode(recBuffers.shift());\n            var now = Date.now();\n            if (now > timeout) {\n                postProgress((bufferCount - recBuffers.length) / bufferCount);\n                timeout = now + options.progressInterval;\n            }\n        }\n        postProgress(1);\n    }\n    self.postMessage({\n        command: "complete",\n        blob: encoder.finish(options.wav.mimeType)\n    });\n    cleanup();\n};\n\nfunction cleanup() {\n    if (partialUpdateTimeout) {\n        clearTimeout(partialUpdateTimeout);\n    }\n    partialUpdateTimeout = null;\n    encoder = undefined;\n    recBuffers = undefined;\n    bufferCount = 0;\n}\n\nself.onmessage = function(event) {\n    var data = event.data;\n    switch (data.command) {\n        case "init":    init(data);                 break;\n        case "options": setOptions(data.options);   break;\n        case "start":   start(data.bufferSize);     break;\n        case "record":  record(data.buffer);        break;\n        case "finish":  finish();                   break;\n        case "cancel":  cleanup();\n    }\n};\n\nself.postMessage({ command: "loaded" });\n';
});
define('audioRecordingInteraction/runtime/js/providers/webAudio', ['taoQtiItem/portableLib/OAT/util/event', 'text!audioRecordingInteraction/runtime/js/workers/WebAudioRecorderWav.js'], function (event, WebAudioRecorderWav) {
  'use strict';
  return function webAudioProviderFactory(config) {
    var webAudioProvider;
    var workerContentBlob = new Blob([WebAudioRecorderWav], {
      type: 'text/javascript'
    });
    var recorderWorker;
    var audioNodes = {};
    var numChannels = config.isStereo ? 2 : 1,
      buffer = [];
    var updateResponsePartially = config.updateResponsePartially;
    var partialUpdateInterval = config.partialUpdateInterval;
    function initWorker() {
      var workerContentUrl = URL.createObjectURL(workerContentBlob);
      recorderWorker = new Worker(workerContentUrl);
      sendToWorker('init', {
        config: {
          numChannels: numChannels,
          sampleRate: getAudioContext().sampleRate,
          updateResponsePartially: updateResponsePartially,
          partialUpdateInterval: partialUpdateInterval
        },
        options: {
          timeLimit: 0,
          progressInterval: 1000,
          wav: {
            mimeType: 'audio/wav'
          }
        }
      });
    }
    function sendToWorker(command, payload) {
      recorderWorker.postMessage(Object.assign({
        command: command
      }, payload));
    }
    function getAudioContext() {
      return window.audioContext;
    }
    webAudioProvider = {
      init: function init(stream) {
        var self = this;
        audioNodes.source = getAudioContext().createMediaStreamSource(stream);
        audioNodes.inputGain = getAudioContext().createGain();
        audioNodes.source.connect(audioNodes.inputGain);
        initWorker();
        recorderWorker.onmessage = function (e) {
          var data = e.data;
          var blob;
          switch (data.command) {
            case 'partialcomplete':
              blob = data.blob;
              self.trigger('partialblobavailable', [blob]);
              break;
            case 'complete':
              {
                blob = data.blob;
                self.trigger('blobavailable', [blob]);
                break;
              }
          }
        };
      },
      start: function start() {
        audioNodes.processor = getAudioContext().createScriptProcessor(0, numChannels, numChannels);
        audioNodes.processor.onaudioprocess = function (e) {
          var ch;
          for (ch = 0; ch < numChannels; ++ch) {
            buffer[ch] = e.inputBuffer.getChannelData(ch);
          }
          sendToWorker('record', {
            buffer: buffer
          });
        };
        audioNodes.inputGain.connect(audioNodes.processor);
        audioNodes.processor.connect(getAudioContext().destination);
        sendToWorker('start', {
          bufferSize: audioNodes.processor.bufferSize
        });
      },
      _interruptRecording: function _interruptRecording() {
        audioNodes.processor.onaudioprocess = null;
        audioNodes.inputGain.disconnect();
        delete audioNodes.processor;
      },
      stop: function stop() {
        this._interruptRecording();
        sendToWorker('finish');
      },
      cancel: function cancel() {
        this._interruptRecording();
        sendToWorker('cancel');
      },
      destroy: function destroy() {
        if (recorderWorker) {
          recorderWorker.terminate();
          recorderWorker = null;
        }
        audioNodes = {};
        URL.revokeObjectURL(workerContentBlob);
      }
    };
    event.addEventMgr(webAudioProvider);
    return webAudioProvider;
  };
});
define('audioRecordingInteraction/runtime/js/recorder', ['taoQtiItem/portableLib/OAT/util/event', 'audioRecordingInteraction/runtime/js/providers/mediaRecorder', 'audioRecordingInteraction/runtime/js/providers/webAudio'], function (event, mediaRecorderProvider, webAudioProvider) {
  'use strict';
  var recorderStates = {
    CREATED: 'created',
    IDLE: 'idle',
    RECORDING: 'recording',
    STOPED: 'stoped',
    CANCELED: 'canceled'
  };
  function getRndInteger(min, max) {
    return Math.floor(Math.random() * (max - min)) + min;
  }
  function setGetUserMedia() {
    var promisifiedOldGUM = function promisifiedOldGUM(constraints) {
      var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;
      if (!getUserMedia) {
        return Promise.reject(new Error('getUserMedia is not implemented in this browser'));
      }
      return new Promise(function (successCallback, errorCallback) {
        getUserMedia.call(navigator, constraints, successCallback, errorCallback);
      });
    };
    if (typeof navigator.mediaDevices === 'undefined') {
      navigator.mediaDevices = {};
    }
    if (typeof navigator.mediaDevices.getUserMedia === 'undefined') {
      navigator.mediaDevices.getUserMedia = promisifiedOldGUM;
    }
  }
  return function recorderFactory(config) {
    var recorder,
      mediaStream,
      provider,
      state = recorderStates.CREATED;
    var startTimeMs, durationMs, timerId;
    var audioContext, analyser, frequencyArray;
    function isIOSDevice() {
      return /(iPhone|iPad)/i.test(navigator.userAgent);
    }
    function fillFakeEmitter() {
      var frequencyLength = frequencyArray.length;
      var level = 0;
      var levelIndex = 0;
      if (frequencyLength) {
        level = getRndInteger(frequencyLength * (frequencyLength / 2), frequencyLength * frequencyLength);
      }
      do {
        frequencyArray[levelIndex++] = level;
      } while (levelIndex < frequencyLength / 2);
    }
    function initAnalyser(stream) {
      var source, bufferLength;
      source = audioContext.createMediaStreamSource(stream);
      analyser = audioContext.createAnalyser();
      analyser.minDecibels = -100;
      analyser.maxDecibels = -30;
      analyser.fftSize = 32;
      source.connect(analyser);
      bufferLength = analyser.frequencyBinCount;
      frequencyArray = new Uint8Array(bufferLength);
    }
    function getInputLevel() {
      var sum;
      analyser.getByteFrequencyData(frequencyArray);
      if (frequencyArray.length && isIOSDevice()) {
        fillFakeEmitter();
      }
      sum = frequencyArray.reduce(function (a, b) {
        return a + b;
      });
      return Math.floor(sum / frequencyArray.length);
    }
    function setState(recorderInstance, newState) {
      state = newState;
      recorderInstance.trigger('statechange');
      recorderInstance.trigger(newState);
    }
    setGetUserMedia();
    recorder = {
      is: function is(queriedState) {
        return state === queriedState;
      },
      isNeedInit: function isNeedInit() {
        return this.is(recorderStates.CREATED) || this.is(recorderStates.STOPED) || this.is(recorderStates.CANCELED);
      },
      init: function init() {
        var self = this;
        provider = config.isCompressed ? mediaRecorderProvider(config) : webAudioProvider(config);
        this.initAudioContext();
        return navigator.mediaDevices.getUserMedia({
          audio: true
        }).then(function (stream) {
          mediaStream = stream;
          provider.init(stream);
          provider.on('blobavailable', function (blob) {
            self.trigger('recordingavailable', [blob, durationMs]);
            self.releaseResourses();
          });
          provider.on('partialblobavailable', function (blob) {
            self.trigger('partialrecordingavailable', [blob]);
          });
          initAnalyser(stream);
          setState(recorder, recorderStates.IDLE);
        });
      },
      initAudioContext: function initAudioContext() {
        var context = window.audioContext;
        if (context) {
          audioContext = context;
        } else {
          audioContext = new (window.AudioContext || window.webkitAudioContext)();
        }
        window.audioContext = audioContext;
        return audioContext;
      },
      start: function start() {
        startTimeMs = new window.Date().getTime();
        provider.start();
        setState(recorder, recorderStates.RECORDING);
        this._monitorRecording();
      },
      stop: function stop() {
        durationMs = new window.Date().getTime() - startTimeMs;
        this._interruptRecording();
        provider.stop();
        setState(recorder, recorderStates.STOPED);
        this.trigger('stop');
      },
      cancel: function cancel() {
        this._interruptRecording();
        provider.cancel();
        setState(recorder, recorderStates.CANCELED);
        this.releaseResourses();
        this.trigger('cancel');
      },
      releaseResourses: function releaseResourses() {
        if (mediaStream) {
          mediaStream.getTracks().forEach(function (track) {
            track.stop();
          });
        }
        audioContext.close().then(function () {
          audioContext = null;
        });
        window.audioContext = null;
        provider.destroy();
        provider = null;
      },
      _interruptRecording: function _interruptRecording() {
        cancelAnimationFrame(timerId);
        setState(recorder, recorderStates.IDLE);
        this.trigger('levelUpdate', [0]);
      },
      _monitorRecording: function _monitorRecording() {
        var nowMs = new window.Date().getTime(),
          elapsedSeconds = (nowMs - startTimeMs) / 1000;
        timerId = requestAnimationFrame(this._monitorRecording.bind(this));
        this.trigger('timeupdate', [elapsedSeconds]);
        this.trigger('levelUpdate', [getInputLevel()]);
        if (config.maxRecordingTime > 0 && elapsedSeconds >= config.maxRecordingTime) {
          this.trigger('timeout');
          this.stop();
        }
      },
      destroy: function destroy() {
        var promises = [cancelAnimationFrame(timerId)];
        if (provider) {
          promises.push(provider.destroy());
        }
        return Promise.all(promises);
      }
    };
    event.addEventMgr(recorder);
    return recorder;
  };
});

/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
(function () {
  function n(n, t, r) {
    switch (r.length) {
      case 0:
        return n.call(t);
      case 1:
        return n.call(t, r[0]);
      case 2:
        return n.call(t, r[0], r[1]);
      case 3:
        return n.call(t, r[0], r[1], r[2]);
    }
    return n.apply(t, r);
  }
  function t(n, t, r, e) {
    for (var u = -1, i = null == n ? 0 : n.length; ++u < i;) {
      var o = n[u];
      t(e, o, r(o), n);
    }
    return e;
  }
  function r(n, t) {
    for (var r = -1, e = null == n ? 0 : n.length; ++r < e && t(n[r], r, n) !== !1;);
    return n;
  }
  function e(n, t) {
    for (var r = null == n ? 0 : n.length; r-- && t(n[r], r, n) !== !1;);
    return n;
  }
  function u(n, t) {
    for (var r = -1, e = null == n ? 0 : n.length; ++r < e;) if (!t(n[r], r, n)) return !1;
    return !0;
  }
  function i(n, t) {
    for (var r = -1, e = null == n ? 0 : n.length, u = 0, i = []; ++r < e;) {
      var o = n[r];
      t(o, r, n) && (i[u++] = o);
    }
    return i;
  }
  function o(n, t) {
    return !!(null == n ? 0 : n.length) && y(n, t, 0) > -1;
  }
  function f(n, t, r) {
    for (var e = -1, u = null == n ? 0 : n.length; ++e < u;) if (r(t, n[e])) return !0;
    return !1;
  }
  function c(n, t) {
    for (var r = -1, e = null == n ? 0 : n.length, u = Array(e); ++r < e;) u[r] = t(n[r], r, n);
    return u;
  }
  function a(n, t) {
    for (var r = -1, e = t.length, u = n.length; ++r < e;) n[u + r] = t[r];
    return n;
  }
  function l(n, t, r, e) {
    var u = -1,
      i = null == n ? 0 : n.length;
    for (e && i && (r = n[++u]); ++u < i;) r = t(r, n[u], u, n);
    return r;
  }
  function s(n, t, r, e) {
    var u = null == n ? 0 : n.length;
    for (e && u && (r = n[--u]); u--;) r = t(r, n[u], u, n);
    return r;
  }
  function h(n, t) {
    for (var r = -1, e = null == n ? 0 : n.length; ++r < e;) if (t(n[r], r, n)) return !0;
    return !1;
  }
  function p(n) {
    return n.split("");
  }
  function _(n) {
    return n.match($t) || [];
  }
  function v(n, t, r) {
    var e;
    return r(n, function (n, r, u) {
      if (t(n, r, u)) return e = r, !1;
    }), e;
  }
  function g(n, t, r, e) {
    for (var u = n.length, i = r + (e ? 1 : -1); e ? i-- : ++i < u;) if (t(n[i], i, n)) return i;
    return -1;
  }
  function y(n, t, r) {
    return t === t ? Z(n, t, r) : g(n, b, r);
  }
  function d(n, t, r, e) {
    for (var u = r - 1, i = n.length; ++u < i;) if (e(n[u], t)) return u;
    return -1;
  }
  function b(n) {
    return n !== n;
  }
  function w(n, t) {
    var r = null == n ? 0 : n.length;
    return r ? k(n, t) / r : Cn;
  }
  function m(n) {
    return function (t) {
      return null == t ? X : t[n];
    };
  }
  function x(n) {
    return function (t) {
      return null == n ? X : n[t];
    };
  }
  function j(n, t, r, e, u) {
    return u(n, function (n, u, i) {
      r = e ? (e = !1, n) : t(r, n, u, i);
    }), r;
  }
  function A(n, t) {
    var r = n.length;
    for (n.sort(t); r--;) n[r] = n[r].value;
    return n;
  }
  function k(n, t) {
    for (var r, e = -1, u = n.length; ++e < u;) {
      var i = t(n[e]);
      i !== X && (r = r === X ? i : r + i);
    }
    return r;
  }
  function O(n, t) {
    for (var r = -1, e = Array(n); ++r < n;) e[r] = t(r);
    return e;
  }
  function I(n, t) {
    return c(t, function (t) {
      return [t, n[t]];
    });
  }
  function R(n) {
    return n ? n.slice(0, H(n) + 1).replace(Lt, "") : n;
  }
  function z(n) {
    return function (t) {
      return n(t);
    };
  }
  function E(n, t) {
    return c(t, function (t) {
      return n[t];
    });
  }
  function S(n, t) {
    return n.has(t);
  }
  function W(n, t) {
    for (var r = -1, e = n.length; ++r < e && y(t, n[r], 0) > -1;);
    return r;
  }
  function L(n, t) {
    for (var r = n.length; r-- && y(t, n[r], 0) > -1;);
    return r;
  }
  function C(n, t) {
    for (var r = n.length, e = 0; r--;) n[r] === t && ++e;
    return e;
  }
  function U(n) {
    return "\\" + Yr[n];
  }
  function B(n, t) {
    return null == n ? X : n[t];
  }
  function T(n) {
    return Nr.test(n);
  }
  function $(n) {
    return Pr.test(n);
  }
  function D(n) {
    for (var t, r = []; !(t = n.next()).done;) r.push(t.value);
    return r;
  }
  function M(n) {
    var t = -1,
      r = Array(n.size);
    return n.forEach(function (n, e) {
      r[++t] = [e, n];
    }), r;
  }
  function F(n, t) {
    return function (r) {
      return n(t(r));
    };
  }
  function N(n, t) {
    for (var r = -1, e = n.length, u = 0, i = []; ++r < e;) {
      var o = n[r];
      o !== t && o !== cn || (n[r] = cn, i[u++] = r);
    }
    return i;
  }
  function P(n) {
    var t = -1,
      r = Array(n.size);
    return n.forEach(function (n) {
      r[++t] = n;
    }), r;
  }
  function q(n) {
    var t = -1,
      r = Array(n.size);
    return n.forEach(function (n) {
      r[++t] = [n, n];
    }), r;
  }
  function Z(n, t, r) {
    for (var e = r - 1, u = n.length; ++e < u;) if (n[e] === t) return e;
    return -1;
  }
  function K(n, t, r) {
    for (var e = r + 1; e--;) if (n[e] === t) return e;
    return e;
  }
  function V(n) {
    return T(n) ? J(n) : _e(n);
  }
  function G(n) {
    return T(n) ? Y(n) : p(n);
  }
  function H(n) {
    for (var t = n.length; t-- && Ct.test(n.charAt(t)););
    return t;
  }
  function J(n) {
    for (var t = Mr.lastIndex = 0; Mr.test(n);) ++t;
    return t;
  }
  function Y(n) {
    return n.match(Mr) || [];
  }
  function Q(n) {
    return n.match(Fr) || [];
  }
  var X,
    nn = "4.17.21",
    tn = 200,
    rn = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",
    en = "Expected a function",
    un = "Invalid `variable` option passed into `_.template`",
    on = "__lodash_hash_undefined__",
    fn = 500,
    cn = "__lodash_placeholder__",
    an = 1,
    ln = 2,
    sn = 4,
    hn = 1,
    pn = 2,
    _n = 1,
    vn = 2,
    gn = 4,
    yn = 8,
    dn = 16,
    bn = 32,
    wn = 64,
    mn = 128,
    xn = 256,
    jn = 512,
    An = 30,
    kn = "...",
    On = 800,
    In = 16,
    Rn = 1,
    zn = 2,
    En = 3,
    Sn = 1 / 0,
    Wn = 9007199254740991,
    Ln = 1.7976931348623157e308,
    Cn = NaN,
    Un = 4294967295,
    Bn = Un - 1,
    Tn = Un >>> 1,
    $n = [["ary", mn], ["bind", _n], ["bindKey", vn], ["curry", yn], ["curryRight", dn], ["flip", jn], ["partial", bn], ["partialRight", wn], ["rearg", xn]],
    Dn = "[object Arguments]",
    Mn = "[object Array]",
    Fn = "[object AsyncFunction]",
    Nn = "[object Boolean]",
    Pn = "[object Date]",
    qn = "[object DOMException]",
    Zn = "[object Error]",
    Kn = "[object Function]",
    Vn = "[object GeneratorFunction]",
    Gn = "[object Map]",
    Hn = "[object Number]",
    Jn = "[object Null]",
    Yn = "[object Object]",
    Qn = "[object Promise]",
    Xn = "[object Proxy]",
    nt = "[object RegExp]",
    tt = "[object Set]",
    rt = "[object String]",
    et = "[object Symbol]",
    ut = "[object Undefined]",
    it = "[object WeakMap]",
    ot = "[object WeakSet]",
    ft = "[object ArrayBuffer]",
    ct = "[object DataView]",
    at = "[object Float32Array]",
    lt = "[object Float64Array]",
    st = "[object Int8Array]",
    ht = "[object Int16Array]",
    pt = "[object Int32Array]",
    _t = "[object Uint8Array]",
    vt = "[object Uint8ClampedArray]",
    gt = "[object Uint16Array]",
    yt = "[object Uint32Array]",
    dt = /\b__p \+= '';/g,
    bt = /\b(__p \+=) '' \+/g,
    wt = /(__e\(.*?\)|\b__t\)) \+\n'';/g,
    mt = /&(?:amp|lt|gt|quot|#39);/g,
    xt = /[&<>"']/g,
    jt = RegExp(mt.source),
    At = RegExp(xt.source),
    kt = /<%-([\s\S]+?)%>/g,
    Ot = /<%([\s\S]+?)%>/g,
    It = /<%=([\s\S]+?)%>/g,
    Rt = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    zt = /^\w*$/,
    Et = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
    St = /[\\^$.*+?()[\]{}|]/g,
    Wt = RegExp(St.source),
    Lt = /^\s+/,
    Ct = /\s/,
    Ut = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
    Bt = /\{\n\/\* \[wrapped with (.+)\] \*/,
    Tt = /,? & /,
    $t = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
    Dt = /[()=,{}\[\]\/\s]/,
    Mt = /\\(\\)?/g,
    Ft = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
    Nt = /\w*$/,
    Pt = /^[-+]0x[0-9a-f]+$/i,
    qt = /^0b[01]+$/i,
    Zt = /^\[object .+?Constructor\]$/,
    Kt = /^0o[0-7]+$/i,
    Vt = /^(?:0|[1-9]\d*)$/,
    Gt = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
    Ht = /($^)/,
    Jt = /['\n\r\u2028\u2029\\]/g,
    Yt = "\\ud800-\\udfff",
    Qt = "\\u0300-\\u036f",
    Xt = "\\ufe20-\\ufe2f",
    nr = "\\u20d0-\\u20ff",
    tr = Qt + Xt + nr,
    rr = "\\u2700-\\u27bf",
    er = "a-z\\xdf-\\xf6\\xf8-\\xff",
    ur = "\\xac\\xb1\\xd7\\xf7",
    ir = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",
    or = "\\u2000-\\u206f",
    fr = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
    cr = "A-Z\\xc0-\\xd6\\xd8-\\xde",
    ar = "\\ufe0e\\ufe0f",
    lr = ur + ir + or + fr,
    sr = "['\u2019]",
    hr = "[" + Yt + "]",
    pr = "[" + lr + "]",
    _r = "[" + tr + "]",
    vr = "\\d+",
    gr = "[" + rr + "]",
    yr = "[" + er + "]",
    dr = "[^" + Yt + lr + vr + rr + er + cr + "]",
    br = "\\ud83c[\\udffb-\\udfff]",
    wr = "(?:" + _r + "|" + br + ")",
    mr = "[^" + Yt + "]",
    xr = "(?:\\ud83c[\\udde6-\\uddff]){2}",
    jr = "[\\ud800-\\udbff][\\udc00-\\udfff]",
    Ar = "[" + cr + "]",
    kr = "\\u200d",
    Or = "(?:" + yr + "|" + dr + ")",
    Ir = "(?:" + Ar + "|" + dr + ")",
    Rr = "(?:" + sr + "(?:d|ll|m|re|s|t|ve))?",
    zr = "(?:" + sr + "(?:D|LL|M|RE|S|T|VE))?",
    Er = wr + "?",
    Sr = "[" + ar + "]?",
    Wr = "(?:" + kr + "(?:" + [mr, xr, jr].join("|") + ")" + Sr + Er + ")*",
    Lr = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",
    Cr = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",
    Ur = Sr + Er + Wr,
    Br = "(?:" + [gr, xr, jr].join("|") + ")" + Ur,
    Tr = "(?:" + [mr + _r + "?", _r, xr, jr, hr].join("|") + ")",
    $r = RegExp(sr, "g"),
    Dr = RegExp(_r, "g"),
    Mr = RegExp(br + "(?=" + br + ")|" + Tr + Ur, "g"),
    Fr = RegExp([Ar + "?" + yr + "+" + Rr + "(?=" + [pr, Ar, "$"].join("|") + ")", Ir + "+" + zr + "(?=" + [pr, Ar + Or, "$"].join("|") + ")", Ar + "?" + Or + "+" + Rr, Ar + "+" + zr, Cr, Lr, vr, Br].join("|"), "g"),
    Nr = RegExp("[" + kr + Yt + tr + ar + "]"),
    Pr = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
    qr = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"],
    Zr = -1,
    Kr = {};
  Kr[at] = Kr[lt] = Kr[st] = Kr[ht] = Kr[pt] = Kr[_t] = Kr[vt] = Kr[gt] = Kr[yt] = !0, Kr[Dn] = Kr[Mn] = Kr[ft] = Kr[Nn] = Kr[ct] = Kr[Pn] = Kr[Zn] = Kr[Kn] = Kr[Gn] = Kr[Hn] = Kr[Yn] = Kr[nt] = Kr[tt] = Kr[rt] = Kr[it] = !1;
  var Vr = {};
  Vr[Dn] = Vr[Mn] = Vr[ft] = Vr[ct] = Vr[Nn] = Vr[Pn] = Vr[at] = Vr[lt] = Vr[st] = Vr[ht] = Vr[pt] = Vr[Gn] = Vr[Hn] = Vr[Yn] = Vr[nt] = Vr[tt] = Vr[rt] = Vr[et] = Vr[_t] = Vr[vt] = Vr[gt] = Vr[yt] = !0, Vr[Zn] = Vr[Kn] = Vr[it] = !1;
  var Gr = {
      "\xc0": "A",
      "\xc1": "A",
      "\xc2": "A",
      "\xc3": "A",
      "\xc4": "A",
      "\xc5": "A",
      "\xe0": "a",
      "\xe1": "a",
      "\xe2": "a",
      "\xe3": "a",
      "\xe4": "a",
      "\xe5": "a",
      "\xc7": "C",
      "\xe7": "c",
      "\xd0": "D",
      "\xf0": "d",
      "\xc8": "E",
      "\xc9": "E",
      "\xca": "E",
      "\xcb": "E",
      "\xe8": "e",
      "\xe9": "e",
      "\xea": "e",
      "\xeb": "e",
      "\xcc": "I",
      "\xcd": "I",
      "\xce": "I",
      "\xcf": "I",
      "\xec": "i",
      "\xed": "i",
      "\xee": "i",
      "\xef": "i",
      "\xd1": "N",
      "\xf1": "n",
      "\xd2": "O",
      "\xd3": "O",
      "\xd4": "O",
      "\xd5": "O",
      "\xd6": "O",
      "\xd8": "O",
      "\xf2": "o",
      "\xf3": "o",
      "\xf4": "o",
      "\xf5": "o",
      "\xf6": "o",
      "\xf8": "o",
      "\xd9": "U",
      "\xda": "U",
      "\xdb": "U",
      "\xdc": "U",
      "\xf9": "u",
      "\xfa": "u",
      "\xfb": "u",
      "\xfc": "u",
      "\xdd": "Y",
      "\xfd": "y",
      "\xff": "y",
      "\xc6": "Ae",
      "\xe6": "ae",
      "\xde": "Th",
      "\xfe": "th",
      "\xdf": "ss",
      "\u0100": "A",
      "\u0102": "A",
      "\u0104": "A",
      "\u0101": "a",
      "\u0103": "a",
      "\u0105": "a",
      "\u0106": "C",
      "\u0108": "C",
      "\u010a": "C",
      "\u010c": "C",
      "\u0107": "c",
      "\u0109": "c",
      "\u010b": "c",
      "\u010d": "c",
      "\u010e": "D",
      "\u0110": "D",
      "\u010f": "d",
      "\u0111": "d",
      "\u0112": "E",
      "\u0114": "E",
      "\u0116": "E",
      "\u0118": "E",
      "\u011a": "E",
      "\u0113": "e",
      "\u0115": "e",
      "\u0117": "e",
      "\u0119": "e",
      "\u011b": "e",
      "\u011c": "G",
      "\u011e": "G",
      "\u0120": "G",
      "\u0122": "G",
      "\u011d": "g",
      "\u011f": "g",
      "\u0121": "g",
      "\u0123": "g",
      "\u0124": "H",
      "\u0126": "H",
      "\u0125": "h",
      "\u0127": "h",
      "\u0128": "I",
      "\u012a": "I",
      "\u012c": "I",
      "\u012e": "I",
      "\u0130": "I",
      "\u0129": "i",
      "\u012b": "i",
      "\u012d": "i",
      "\u012f": "i",
      "\u0131": "i",
      "\u0134": "J",
      "\u0135": "j",
      "\u0136": "K",
      "\u0137": "k",
      "\u0138": "k",
      "\u0139": "L",
      "\u013b": "L",
      "\u013d": "L",
      "\u013f": "L",
      "\u0141": "L",
      "\u013a": "l",
      "\u013c": "l",
      "\u013e": "l",
      "\u0140": "l",
      "\u0142": "l",
      "\u0143": "N",
      "\u0145": "N",
      "\u0147": "N",
      "\u014a": "N",
      "\u0144": "n",
      "\u0146": "n",
      "\u0148": "n",
      "\u014b": "n",
      "\u014c": "O",
      "\u014e": "O",
      "\u0150": "O",
      "\u014d": "o",
      "\u014f": "o",
      "\u0151": "o",
      "\u0154": "R",
      "\u0156": "R",
      "\u0158": "R",
      "\u0155": "r",
      "\u0157": "r",
      "\u0159": "r",
      "\u015a": "S",
      "\u015c": "S",
      "\u015e": "S",
      "\u0160": "S",
      "\u015b": "s",
      "\u015d": "s",
      "\u015f": "s",
      "\u0161": "s",
      "\u0162": "T",
      "\u0164": "T",
      "\u0166": "T",
      "\u0163": "t",
      "\u0165": "t",
      "\u0167": "t",
      "\u0168": "U",
      "\u016a": "U",
      "\u016c": "U",
      "\u016e": "U",
      "\u0170": "U",
      "\u0172": "U",
      "\u0169": "u",
      "\u016b": "u",
      "\u016d": "u",
      "\u016f": "u",
      "\u0171": "u",
      "\u0173": "u",
      "\u0174": "W",
      "\u0175": "w",
      "\u0176": "Y",
      "\u0177": "y",
      "\u0178": "Y",
      "\u0179": "Z",
      "\u017b": "Z",
      "\u017d": "Z",
      "\u017a": "z",
      "\u017c": "z",
      "\u017e": "z",
      "\u0132": "IJ",
      "\u0133": "ij",
      "\u0152": "Oe",
      "\u0153": "oe",
      "\u0149": "'n",
      "\u017f": "s"
    },
    Hr = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;",
      "'": "&#39;"
    },
    Jr = {
      "&amp;": "&",
      "&lt;": "<",
      "&gt;": ">",
      "&quot;": '"',
      "&#39;": "'"
    },
    Yr = {
      "\\": "\\",
      "'": "'",
      "\n": "n",
      "\r": "r",
      "\u2028": "u2028",
      "\u2029": "u2029"
    },
    Qr = parseFloat,
    Xr = parseInt,
    ne = "object" == typeof global && global && global.Object === Object && global,
    te = "object" == typeof self && self && self.Object === Object && self,
    re = ne || te || Function("return this")(),
    ee = "object" == typeof exports && exports && !exports.nodeType && exports,
    ue = ee && "object" == typeof module && module && !module.nodeType && module,
    ie = ue && ue.exports === ee,
    oe = ie && ne.process,
    fe = function () {
      try {
        var n = ue && ue.require && ue.require("util").types;
        return n ? n : oe && oe.binding && oe.binding("util");
      } catch (n) {}
    }(),
    ce = fe && fe.isArrayBuffer,
    ae = fe && fe.isDate,
    le = fe && fe.isMap,
    se = fe && fe.isRegExp,
    he = fe && fe.isSet,
    pe = fe && fe.isTypedArray,
    _e = m("length"),
    ve = x(Gr),
    ge = x(Hr),
    ye = x(Jr),
    de = function p(x) {
      function Z(n) {
        if (cc(n) && !bh(n) && !(n instanceof Ct)) {
          if (n instanceof Y) return n;
          if (bl.call(n, "__wrapped__")) return eo(n);
        }
        return new Y(n);
      }
      function J() {}
      function Y(n, t) {
        this.__wrapped__ = n, this.__actions__ = [], this.__chain__ = !!t, this.__index__ = 0, this.__values__ = X;
      }
      function Ct(n) {
        this.__wrapped__ = n, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = Un, this.__views__ = [];
      }
      function $t() {
        var n = new Ct(this.__wrapped__);
        return n.__actions__ = Tu(this.__actions__), n.__dir__ = this.__dir__, n.__filtered__ = this.__filtered__, n.__iteratees__ = Tu(this.__iteratees__), n.__takeCount__ = this.__takeCount__, n.__views__ = Tu(this.__views__), n;
      }
      function Yt() {
        if (this.__filtered__) {
          var n = new Ct(this);
          n.__dir__ = -1, n.__filtered__ = !0;
        } else n = this.clone(), n.__dir__ *= -1;
        return n;
      }
      function Qt() {
        var n = this.__wrapped__.value(),
          t = this.__dir__,
          r = bh(n),
          e = t < 0,
          u = r ? n.length : 0,
          i = Oi(0, u, this.__views__),
          o = i.start,
          f = i.end,
          c = f - o,
          a = e ? f : o - 1,
          l = this.__iteratees__,
          s = l.length,
          h = 0,
          p = Hl(c, this.__takeCount__);
        if (!r || !e && u == c && p == c) return wu(n, this.__actions__);
        var _ = [];
        n: for (; c-- && h < p;) {
          a += t;
          for (var v = -1, g = n[a]; ++v < s;) {
            var y = l[v],
              d = y.iteratee,
              b = y.type,
              w = d(g);
            if (b == zn) g = w;else if (!w) {
              if (b == Rn) continue n;
              break n;
            }
          }
          _[h++] = g;
        }
        return _;
      }
      function Xt(n) {
        var t = -1,
          r = null == n ? 0 : n.length;
        for (this.clear(); ++t < r;) {
          var e = n[t];
          this.set(e[0], e[1]);
        }
      }
      function nr() {
        this.__data__ = is ? is(null) : {}, this.size = 0;
      }
      function tr(n) {
        var t = this.has(n) && delete this.__data__[n];
        return this.size -= t ? 1 : 0, t;
      }
      function rr(n) {
        var t = this.__data__;
        if (is) {
          var r = t[n];
          return r === on ? X : r;
        }
        return bl.call(t, n) ? t[n] : X;
      }
      function er(n) {
        var t = this.__data__;
        return is ? t[n] !== X : bl.call(t, n);
      }
      function ur(n, t) {
        var r = this.__data__;
        return this.size += this.has(n) ? 0 : 1, r[n] = is && t === X ? on : t, this;
      }
      function ir(n) {
        var t = -1,
          r = null == n ? 0 : n.length;
        for (this.clear(); ++t < r;) {
          var e = n[t];
          this.set(e[0], e[1]);
        }
      }
      function or() {
        this.__data__ = [], this.size = 0;
      }
      function fr(n) {
        var t = this.__data__,
          r = Wr(t, n);
        return !(r < 0) && (r == t.length - 1 ? t.pop() : Ll.call(t, r, 1), --this.size, !0);
      }
      function cr(n) {
        var t = this.__data__,
          r = Wr(t, n);
        return r < 0 ? X : t[r][1];
      }
      function ar(n) {
        return Wr(this.__data__, n) > -1;
      }
      function lr(n, t) {
        var r = this.__data__,
          e = Wr(r, n);
        return e < 0 ? (++this.size, r.push([n, t])) : r[e][1] = t, this;
      }
      function sr(n) {
        var t = -1,
          r = null == n ? 0 : n.length;
        for (this.clear(); ++t < r;) {
          var e = n[t];
          this.set(e[0], e[1]);
        }
      }
      function hr() {
        this.size = 0, this.__data__ = {
          hash: new Xt(),
          map: new (ts || ir)(),
          string: new Xt()
        };
      }
      function pr(n) {
        var t = xi(this, n).delete(n);
        return this.size -= t ? 1 : 0, t;
      }
      function _r(n) {
        return xi(this, n).get(n);
      }
      function vr(n) {
        return xi(this, n).has(n);
      }
      function gr(n, t) {
        var r = xi(this, n),
          e = r.size;
        return r.set(n, t), this.size += r.size == e ? 0 : 1, this;
      }
      function yr(n) {
        var t = -1,
          r = null == n ? 0 : n.length;
        for (this.__data__ = new sr(); ++t < r;) this.add(n[t]);
      }
      function dr(n) {
        return this.__data__.set(n, on), this;
      }
      function br(n) {
        return this.__data__.has(n);
      }
      function wr(n) {
        this.size = (this.__data__ = new ir(n)).size;
      }
      function mr() {
        this.__data__ = new ir(), this.size = 0;
      }
      function xr(n) {
        var t = this.__data__,
          r = t.delete(n);
        return this.size = t.size, r;
      }
      function jr(n) {
        return this.__data__.get(n);
      }
      function Ar(n) {
        return this.__data__.has(n);
      }
      function kr(n, t) {
        var r = this.__data__;
        if (r instanceof ir) {
          var e = r.__data__;
          if (!ts || e.length < tn - 1) return e.push([n, t]), this.size = ++r.size, this;
          r = this.__data__ = new sr(e);
        }
        return r.set(n, t), this.size = r.size, this;
      }
      function Or(n, t) {
        var r = bh(n),
          e = !r && dh(n),
          u = !r && !e && mh(n),
          i = !r && !e && !u && Oh(n),
          o = r || e || u || i,
          f = o ? O(n.length, hl) : [],
          c = f.length;
        for (var a in n) !t && !bl.call(n, a) || o && ("length" == a || u && ("offset" == a || "parent" == a) || i && ("buffer" == a || "byteLength" == a || "byteOffset" == a) || Ci(a, c)) || f.push(a);
        return f;
      }
      function Ir(n) {
        var t = n.length;
        return t ? n[tu(0, t - 1)] : X;
      }
      function Rr(n, t) {
        return Xi(Tu(n), Mr(t, 0, n.length));
      }
      function zr(n) {
        return Xi(Tu(n));
      }
      function Er(n, t, r) {
        (r === X || Gf(n[t], r)) && (r !== X || t in n) || Br(n, t, r);
      }
      function Sr(n, t, r) {
        var e = n[t];
        bl.call(n, t) && Gf(e, r) && (r !== X || t in n) || Br(n, t, r);
      }
      function Wr(n, t) {
        for (var r = n.length; r--;) if (Gf(n[r][0], t)) return r;
        return -1;
      }
      function Lr(n, t, r, e) {
        return ys(n, function (n, u, i) {
          t(e, n, r(n), i);
        }), e;
      }
      function Cr(n, t) {
        return n && $u(t, Pc(t), n);
      }
      function Ur(n, t) {
        return n && $u(t, qc(t), n);
      }
      function Br(n, t, r) {
        "__proto__" == t && Tl ? Tl(n, t, {
          configurable: !0,
          enumerable: !0,
          value: r,
          writable: !0
        }) : n[t] = r;
      }
      function Tr(n, t) {
        for (var r = -1, e = t.length, u = il(e), i = null == n; ++r < e;) u[r] = i ? X : Mc(n, t[r]);
        return u;
      }
      function Mr(n, t, r) {
        return n === n && (r !== X && (n = n <= r ? n : r), t !== X && (n = n >= t ? n : t)), n;
      }
      function Fr(n, t, e, u, i, o) {
        var f,
          c = t & an,
          a = t & ln,
          l = t & sn;
        if (e && (f = i ? e(n, u, i, o) : e(n)), f !== X) return f;
        if (!fc(n)) return n;
        var s = bh(n);
        if (s) {
          if (f = zi(n), !c) return Tu(n, f);
        } else {
          var h = zs(n),
            p = h == Kn || h == Vn;
          if (mh(n)) return Iu(n, c);
          if (h == Yn || h == Dn || p && !i) {
            if (f = a || p ? {} : Ei(n), !c) return a ? Mu(n, Ur(f, n)) : Du(n, Cr(f, n));
          } else {
            if (!Vr[h]) return i ? n : {};
            f = Si(n, h, c);
          }
        }
        o || (o = new wr());
        var _ = o.get(n);
        if (_) return _;
        o.set(n, f), kh(n) ? n.forEach(function (r) {
          f.add(Fr(r, t, e, r, n, o));
        }) : jh(n) && n.forEach(function (r, u) {
          f.set(u, Fr(r, t, e, u, n, o));
        });
        var v = l ? a ? di : yi : a ? qc : Pc,
          g = s ? X : v(n);
        return r(g || n, function (r, u) {
          g && (u = r, r = n[u]), Sr(f, u, Fr(r, t, e, u, n, o));
        }), f;
      }
      function Nr(n) {
        var t = Pc(n);
        return function (r) {
          return Pr(r, n, t);
        };
      }
      function Pr(n, t, r) {
        var e = r.length;
        if (null == n) return !e;
        for (n = ll(n); e--;) {
          var u = r[e],
            i = t[u],
            o = n[u];
          if (o === X && !(u in n) || !i(o)) return !1;
        }
        return !0;
      }
      function Gr(n, t, r) {
        if ("function" != typeof n) throw new pl(en);
        return Ws(function () {
          n.apply(X, r);
        }, t);
      }
      function Hr(n, t, r, e) {
        var u = -1,
          i = o,
          a = !0,
          l = n.length,
          s = [],
          h = t.length;
        if (!l) return s;
        r && (t = c(t, z(r))), e ? (i = f, a = !1) : t.length >= tn && (i = S, a = !1, t = new yr(t));
        n: for (; ++u < l;) {
          var p = n[u],
            _ = null == r ? p : r(p);
          if (p = e || 0 !== p ? p : 0, a && _ === _) {
            for (var v = h; v--;) if (t[v] === _) continue n;
            s.push(p);
          } else i(t, _, e) || s.push(p);
        }
        return s;
      }
      function Jr(n, t) {
        var r = !0;
        return ys(n, function (n, e, u) {
          return r = !!t(n, e, u);
        }), r;
      }
      function Yr(n, t, r) {
        for (var e = -1, u = n.length; ++e < u;) {
          var i = n[e],
            o = t(i);
          if (null != o && (f === X ? o === o && !bc(o) : r(o, f))) var f = o,
            c = i;
        }
        return c;
      }
      function ne(n, t, r, e) {
        var u = n.length;
        for (r = kc(r), r < 0 && (r = -r > u ? 0 : u + r), e = e === X || e > u ? u : kc(e), e < 0 && (e += u), e = r > e ? 0 : Oc(e); r < e;) n[r++] = t;
        return n;
      }
      function te(n, t) {
        var r = [];
        return ys(n, function (n, e, u) {
          t(n, e, u) && r.push(n);
        }), r;
      }
      function ee(n, t, r, e, u) {
        var i = -1,
          o = n.length;
        for (r || (r = Li), u || (u = []); ++i < o;) {
          var f = n[i];
          t > 0 && r(f) ? t > 1 ? ee(f, t - 1, r, e, u) : a(u, f) : e || (u[u.length] = f);
        }
        return u;
      }
      function ue(n, t) {
        return n && bs(n, t, Pc);
      }
      function oe(n, t) {
        return n && ws(n, t, Pc);
      }
      function fe(n, t) {
        return i(t, function (t) {
          return uc(n[t]);
        });
      }
      function _e(n, t) {
        t = ku(t, n);
        for (var r = 0, e = t.length; null != n && r < e;) n = n[no(t[r++])];
        return r && r == e ? n : X;
      }
      function de(n, t, r) {
        var e = t(n);
        return bh(n) ? e : a(e, r(n));
      }
      function we(n) {
        return null == n ? n === X ? ut : Jn : Bl && Bl in ll(n) ? ki(n) : Ki(n);
      }
      function me(n, t) {
        return n > t;
      }
      function xe(n, t) {
        return null != n && bl.call(n, t);
      }
      function je(n, t) {
        return null != n && t in ll(n);
      }
      function Ae(n, t, r) {
        return n >= Hl(t, r) && n < Gl(t, r);
      }
      function ke(n, t, r) {
        for (var e = r ? f : o, u = n[0].length, i = n.length, a = i, l = il(i), s = 1 / 0, h = []; a--;) {
          var p = n[a];
          a && t && (p = c(p, z(t))), s = Hl(p.length, s), l[a] = !r && (t || u >= 120 && p.length >= 120) ? new yr(a && p) : X;
        }
        p = n[0];
        var _ = -1,
          v = l[0];
        n: for (; ++_ < u && h.length < s;) {
          var g = p[_],
            y = t ? t(g) : g;
          if (g = r || 0 !== g ? g : 0, !(v ? S(v, y) : e(h, y, r))) {
            for (a = i; --a;) {
              var d = l[a];
              if (!(d ? S(d, y) : e(n[a], y, r))) continue n;
            }
            v && v.push(y), h.push(g);
          }
        }
        return h;
      }
      function Oe(n, t, r, e) {
        return ue(n, function (n, u, i) {
          t(e, r(n), u, i);
        }), e;
      }
      function Ie(t, r, e) {
        r = ku(r, t), t = Gi(t, r);
        var u = null == t ? t : t[no(jo(r))];
        return null == u ? X : n(u, t, e);
      }
      function Re(n) {
        return cc(n) && we(n) == Dn;
      }
      function ze(n) {
        return cc(n) && we(n) == ft;
      }
      function Ee(n) {
        return cc(n) && we(n) == Pn;
      }
      function Se(n, t, r, e, u) {
        return n === t || (null == n || null == t || !cc(n) && !cc(t) ? n !== n && t !== t : We(n, t, r, e, Se, u));
      }
      function We(n, t, r, e, u, i) {
        var o = bh(n),
          f = bh(t),
          c = o ? Mn : zs(n),
          a = f ? Mn : zs(t);
        c = c == Dn ? Yn : c, a = a == Dn ? Yn : a;
        var l = c == Yn,
          s = a == Yn,
          h = c == a;
        if (h && mh(n)) {
          if (!mh(t)) return !1;
          o = !0, l = !1;
        }
        if (h && !l) return i || (i = new wr()), o || Oh(n) ? pi(n, t, r, e, u, i) : _i(n, t, c, r, e, u, i);
        if (!(r & hn)) {
          var p = l && bl.call(n, "__wrapped__"),
            _ = s && bl.call(t, "__wrapped__");
          if (p || _) {
            var v = p ? n.value() : n,
              g = _ ? t.value() : t;
            return i || (i = new wr()), u(v, g, r, e, i);
          }
        }
        return !!h && (i || (i = new wr()), vi(n, t, r, e, u, i));
      }
      function Le(n) {
        return cc(n) && zs(n) == Gn;
      }
      function Ce(n, t, r, e) {
        var u = r.length,
          i = u,
          o = !e;
        if (null == n) return !i;
        for (n = ll(n); u--;) {
          var f = r[u];
          if (o && f[2] ? f[1] !== n[f[0]] : !(f[0] in n)) return !1;
        }
        for (; ++u < i;) {
          f = r[u];
          var c = f[0],
            a = n[c],
            l = f[1];
          if (o && f[2]) {
            if (a === X && !(c in n)) return !1;
          } else {
            var s = new wr();
            if (e) var h = e(a, l, c, n, t, s);
            if (!(h === X ? Se(l, a, hn | pn, e, s) : h)) return !1;
          }
        }
        return !0;
      }
      function Ue(n) {
        return !(!fc(n) || Di(n)) && (uc(n) ? kl : Zt).test(to(n));
      }
      function Be(n) {
        return cc(n) && we(n) == nt;
      }
      function Te(n) {
        return cc(n) && zs(n) == tt;
      }
      function $e(n) {
        return cc(n) && oc(n.length) && !!Kr[we(n)];
      }
      function De(n) {
        return "function" == typeof n ? n : null == n ? La : "object" == typeof n ? bh(n) ? Ze(n[0], n[1]) : qe(n) : Fa(n);
      }
      function Me(n) {
        if (!Mi(n)) return Vl(n);
        var t = [];
        for (var r in ll(n)) bl.call(n, r) && "constructor" != r && t.push(r);
        return t;
      }
      function Fe(n) {
        if (!fc(n)) return Zi(n);
        var t = Mi(n),
          r = [];
        for (var e in n) ("constructor" != e || !t && bl.call(n, e)) && r.push(e);
        return r;
      }
      function Ne(n, t) {
        return n < t;
      }
      function Pe(n, t) {
        var r = -1,
          e = Hf(n) ? il(n.length) : [];
        return ys(n, function (n, u, i) {
          e[++r] = t(n, u, i);
        }), e;
      }
      function qe(n) {
        var t = ji(n);
        return 1 == t.length && t[0][2] ? Ni(t[0][0], t[0][1]) : function (r) {
          return r === n || Ce(r, n, t);
        };
      }
      function Ze(n, t) {
        return Bi(n) && Fi(t) ? Ni(no(n), t) : function (r) {
          var e = Mc(r, n);
          return e === X && e === t ? Nc(r, n) : Se(t, e, hn | pn);
        };
      }
      function Ke(n, t, r, e, u) {
        n !== t && bs(t, function (i, o) {
          if (u || (u = new wr()), fc(i)) Ve(n, t, o, r, Ke, e, u);else {
            var f = e ? e(Ji(n, o), i, o + "", n, t, u) : X;
            f === X && (f = i), Er(n, o, f);
          }
        }, qc);
      }
      function Ve(n, t, r, e, u, i, o) {
        var f = Ji(n, r),
          c = Ji(t, r),
          a = o.get(c);
        if (a) return Er(n, r, a), X;
        var l = i ? i(f, c, r + "", n, t, o) : X,
          s = l === X;
        if (s) {
          var h = bh(c),
            p = !h && mh(c),
            _ = !h && !p && Oh(c);
          l = c, h || p || _ ? bh(f) ? l = f : Jf(f) ? l = Tu(f) : p ? (s = !1, l = Iu(c, !0)) : _ ? (s = !1, l = Wu(c, !0)) : l = [] : gc(c) || dh(c) ? (l = f, dh(f) ? l = Rc(f) : fc(f) && !uc(f) || (l = Ei(c))) : s = !1;
        }
        s && (o.set(c, l), u(l, c, e, i, o), o.delete(c)), Er(n, r, l);
      }
      function Ge(n, t) {
        var r = n.length;
        if (r) return t += t < 0 ? r : 0, Ci(t, r) ? n[t] : X;
      }
      function He(n, t, r) {
        t = t.length ? c(t, function (n) {
          return bh(n) ? function (t) {
            return _e(t, 1 === n.length ? n[0] : n);
          } : n;
        }) : [La];
        var e = -1;
        return t = c(t, z(mi())), A(Pe(n, function (n, r, u) {
          return {
            criteria: c(t, function (t) {
              return t(n);
            }),
            index: ++e,
            value: n
          };
        }), function (n, t) {
          return Cu(n, t, r);
        });
      }
      function Je(n, t) {
        return Ye(n, t, function (t, r) {
          return Nc(n, r);
        });
      }
      function Ye(n, t, r) {
        for (var e = -1, u = t.length, i = {}; ++e < u;) {
          var o = t[e],
            f = _e(n, o);
          r(f, o) && fu(i, ku(o, n), f);
        }
        return i;
      }
      function Qe(n) {
        return function (t) {
          return _e(t, n);
        };
      }
      function Xe(n, t, r, e) {
        var u = e ? d : y,
          i = -1,
          o = t.length,
          f = n;
        for (n === t && (t = Tu(t)), r && (f = c(n, z(r))); ++i < o;) for (var a = 0, l = t[i], s = r ? r(l) : l; (a = u(f, s, a, e)) > -1;) f !== n && Ll.call(f, a, 1), Ll.call(n, a, 1);
        return n;
      }
      function nu(n, t) {
        for (var r = n ? t.length : 0, e = r - 1; r--;) {
          var u = t[r];
          if (r == e || u !== i) {
            var i = u;
            Ci(u) ? Ll.call(n, u, 1) : yu(n, u);
          }
        }
        return n;
      }
      function tu(n, t) {
        return n + Nl(Ql() * (t - n + 1));
      }
      function ru(n, t, r, e) {
        for (var u = -1, i = Gl(Fl((t - n) / (r || 1)), 0), o = il(i); i--;) o[e ? i : ++u] = n, n += r;
        return o;
      }
      function eu(n, t) {
        var r = "";
        if (!n || t < 1 || t > Wn) return r;
        do t % 2 && (r += n), t = Nl(t / 2), t && (n += n); while (t);
        return r;
      }
      function uu(n, t) {
        return Ls(Vi(n, t, La), n + "");
      }
      function iu(n) {
        return Ir(ra(n));
      }
      function ou(n, t) {
        var r = ra(n);
        return Xi(r, Mr(t, 0, r.length));
      }
      function fu(n, t, r, e) {
        if (!fc(n)) return n;
        t = ku(t, n);
        for (var u = -1, i = t.length, o = i - 1, f = n; null != f && ++u < i;) {
          var c = no(t[u]),
            a = r;
          if ("__proto__" === c || "constructor" === c || "prototype" === c) return n;
          if (u != o) {
            var l = f[c];
            a = e ? e(l, c, f) : X, a === X && (a = fc(l) ? l : Ci(t[u + 1]) ? [] : {});
          }
          Sr(f, c, a), f = f[c];
        }
        return n;
      }
      function cu(n) {
        return Xi(ra(n));
      }
      function au(n, t, r) {
        var e = -1,
          u = n.length;
        t < 0 && (t = -t > u ? 0 : u + t), r = r > u ? u : r, r < 0 && (r += u), u = t > r ? 0 : r - t >>> 0, t >>>= 0;
        for (var i = il(u); ++e < u;) i[e] = n[e + t];
        return i;
      }
      function lu(n, t) {
        var r;
        return ys(n, function (n, e, u) {
          return r = t(n, e, u), !r;
        }), !!r;
      }
      function su(n, t, r) {
        var e = 0,
          u = null == n ? e : n.length;
        if ("number" == typeof t && t === t && u <= Tn) {
          for (; e < u;) {
            var i = e + u >>> 1,
              o = n[i];
            null !== o && !bc(o) && (r ? o <= t : o < t) ? e = i + 1 : u = i;
          }
          return u;
        }
        return hu(n, t, La, r);
      }
      function hu(n, t, r, e) {
        var u = 0,
          i = null == n ? 0 : n.length;
        if (0 === i) return 0;
        t = r(t);
        for (var o = t !== t, f = null === t, c = bc(t), a = t === X; u < i;) {
          var l = Nl((u + i) / 2),
            s = r(n[l]),
            h = s !== X,
            p = null === s,
            _ = s === s,
            v = bc(s);
          if (o) var g = e || _;else g = a ? _ && (e || h) : f ? _ && h && (e || !p) : c ? _ && h && !p && (e || !v) : !p && !v && (e ? s <= t : s < t);
          g ? u = l + 1 : i = l;
        }
        return Hl(i, Bn);
      }
      function pu(n, t) {
        for (var r = -1, e = n.length, u = 0, i = []; ++r < e;) {
          var o = n[r],
            f = t ? t(o) : o;
          if (!r || !Gf(f, c)) {
            var c = f;
            i[u++] = 0 === o ? 0 : o;
          }
        }
        return i;
      }
      function _u(n) {
        return "number" == typeof n ? n : bc(n) ? Cn : +n;
      }
      function vu(n) {
        if ("string" == typeof n) return n;
        if (bh(n)) return c(n, vu) + "";
        if (bc(n)) return vs ? vs.call(n) : "";
        var t = n + "";
        return "0" == t && 1 / n == -Sn ? "-0" : t;
      }
      function gu(n, t, r) {
        var e = -1,
          u = o,
          i = n.length,
          c = !0,
          a = [],
          l = a;
        if (r) c = !1, u = f;else if (i >= tn) {
          var s = t ? null : ks(n);
          if (s) return P(s);
          c = !1, u = S, l = new yr();
        } else l = t ? [] : a;
        n: for (; ++e < i;) {
          var h = n[e],
            p = t ? t(h) : h;
          if (h = r || 0 !== h ? h : 0, c && p === p) {
            for (var _ = l.length; _--;) if (l[_] === p) continue n;
            t && l.push(p), a.push(h);
          } else u(l, p, r) || (l !== a && l.push(p), a.push(h));
        }
        return a;
      }
      function yu(n, t) {
        return t = ku(t, n), n = Gi(n, t), null == n || delete n[no(jo(t))];
      }
      function du(n, t, r, e) {
        return fu(n, t, r(_e(n, t)), e);
      }
      function bu(n, t, r, e) {
        for (var u = n.length, i = e ? u : -1; (e ? i-- : ++i < u) && t(n[i], i, n););
        return r ? au(n, e ? 0 : i, e ? i + 1 : u) : au(n, e ? i + 1 : 0, e ? u : i);
      }
      function wu(n, t) {
        var r = n;
        return r instanceof Ct && (r = r.value()), l(t, function (n, t) {
          return t.func.apply(t.thisArg, a([n], t.args));
        }, r);
      }
      function mu(n, t, r) {
        var e = n.length;
        if (e < 2) return e ? gu(n[0]) : [];
        for (var u = -1, i = il(e); ++u < e;) for (var o = n[u], f = -1; ++f < e;) f != u && (i[u] = Hr(i[u] || o, n[f], t, r));
        return gu(ee(i, 1), t, r);
      }
      function xu(n, t, r) {
        for (var e = -1, u = n.length, i = t.length, o = {}; ++e < u;) {
          r(o, n[e], e < i ? t[e] : X);
        }
        return o;
      }
      function ju(n) {
        return Jf(n) ? n : [];
      }
      function Au(n) {
        return "function" == typeof n ? n : La;
      }
      function ku(n, t) {
        return bh(n) ? n : Bi(n, t) ? [n] : Cs(Ec(n));
      }
      function Ou(n, t, r) {
        var e = n.length;
        return r = r === X ? e : r, !t && r >= e ? n : au(n, t, r);
      }
      function Iu(n, t) {
        if (t) return n.slice();
        var r = n.length,
          e = zl ? zl(r) : new n.constructor(r);
        return n.copy(e), e;
      }
      function Ru(n) {
        var t = new n.constructor(n.byteLength);
        return new Rl(t).set(new Rl(n)), t;
      }
      function zu(n, t) {
        return new n.constructor(t ? Ru(n.buffer) : n.buffer, n.byteOffset, n.byteLength);
      }
      function Eu(n) {
        var t = new n.constructor(n.source, Nt.exec(n));
        return t.lastIndex = n.lastIndex, t;
      }
      function Su(n) {
        return _s ? ll(_s.call(n)) : {};
      }
      function Wu(n, t) {
        return new n.constructor(t ? Ru(n.buffer) : n.buffer, n.byteOffset, n.length);
      }
      function Lu(n, t) {
        if (n !== t) {
          var r = n !== X,
            e = null === n,
            u = n === n,
            i = bc(n),
            o = t !== X,
            f = null === t,
            c = t === t,
            a = bc(t);
          if (!f && !a && !i && n > t || i && o && c && !f && !a || e && o && c || !r && c || !u) return 1;
          if (!e && !i && !a && n < t || a && r && u && !e && !i || f && r && u || !o && u || !c) return -1;
        }
        return 0;
      }
      function Cu(n, t, r) {
        for (var e = -1, u = n.criteria, i = t.criteria, o = u.length, f = r.length; ++e < o;) {
          var c = Lu(u[e], i[e]);
          if (c) {
            if (e >= f) return c;
            return c * ("desc" == r[e] ? -1 : 1);
          }
        }
        return n.index - t.index;
      }
      function Uu(n, t, r, e) {
        for (var u = -1, i = n.length, o = r.length, f = -1, c = t.length, a = Gl(i - o, 0), l = il(c + a), s = !e; ++f < c;) l[f] = t[f];
        for (; ++u < o;) (s || u < i) && (l[r[u]] = n[u]);
        for (; a--;) l[f++] = n[u++];
        return l;
      }
      function Bu(n, t, r, e) {
        for (var u = -1, i = n.length, o = -1, f = r.length, c = -1, a = t.length, l = Gl(i - f, 0), s = il(l + a), h = !e; ++u < l;) s[u] = n[u];
        for (var p = u; ++c < a;) s[p + c] = t[c];
        for (; ++o < f;) (h || u < i) && (s[p + r[o]] = n[u++]);
        return s;
      }
      function Tu(n, t) {
        var r = -1,
          e = n.length;
        for (t || (t = il(e)); ++r < e;) t[r] = n[r];
        return t;
      }
      function $u(n, t, r, e) {
        var u = !r;
        r || (r = {});
        for (var i = -1, o = t.length; ++i < o;) {
          var f = t[i],
            c = e ? e(r[f], n[f], f, r, n) : X;
          c === X && (c = n[f]), u ? Br(r, f, c) : Sr(r, f, c);
        }
        return r;
      }
      function Du(n, t) {
        return $u(n, Is(n), t);
      }
      function Mu(n, t) {
        return $u(n, Rs(n), t);
      }
      function Fu(n, r) {
        return function (e, u) {
          var i = bh(e) ? t : Lr,
            o = r ? r() : {};
          return i(e, n, mi(u, 2), o);
        };
      }
      function Nu(n) {
        return uu(function (t, r) {
          var e = -1,
            u = r.length,
            i = u > 1 ? r[u - 1] : X,
            o = u > 2 ? r[2] : X;
          for (i = n.length > 3 && "function" == typeof i ? (u--, i) : X, o && Ui(r[0], r[1], o) && (i = u < 3 ? X : i, u = 1), t = ll(t); ++e < u;) {
            var f = r[e];
            f && n(t, f, e, i);
          }
          return t;
        });
      }
      function Pu(n, t) {
        return function (r, e) {
          if (null == r) return r;
          if (!Hf(r)) return n(r, e);
          for (var u = r.length, i = t ? u : -1, o = ll(r); (t ? i-- : ++i < u) && e(o[i], i, o) !== !1;);
          return r;
        };
      }
      function qu(n) {
        return function (t, r, e) {
          for (var u = -1, i = ll(t), o = e(t), f = o.length; f--;) {
            var c = o[n ? f : ++u];
            if (r(i[c], c, i) === !1) break;
          }
          return t;
        };
      }
      function Zu(n, t, r) {
        function e() {
          return (this && this !== re && this instanceof e ? i : n).apply(u ? r : this, arguments);
        }
        var u = t & _n,
          i = Gu(n);
        return e;
      }
      function Ku(n) {
        return function (t) {
          t = Ec(t);
          var r = T(t) ? G(t) : X,
            e = r ? r[0] : t.charAt(0),
            u = r ? Ou(r, 1).join("") : t.slice(1);
          return e[n]() + u;
        };
      }
      function Vu(n) {
        return function (t) {
          return l(Ra(ca(t).replace($r, "")), n, "");
        };
      }
      function Gu(n) {
        return function () {
          var t = arguments;
          switch (t.length) {
            case 0:
              return new n();
            case 1:
              return new n(t[0]);
            case 2:
              return new n(t[0], t[1]);
            case 3:
              return new n(t[0], t[1], t[2]);
            case 4:
              return new n(t[0], t[1], t[2], t[3]);
            case 5:
              return new n(t[0], t[1], t[2], t[3], t[4]);
            case 6:
              return new n(t[0], t[1], t[2], t[3], t[4], t[5]);
            case 7:
              return new n(t[0], t[1], t[2], t[3], t[4], t[5], t[6]);
          }
          var r = gs(n.prototype),
            e = n.apply(r, t);
          return fc(e) ? e : r;
        };
      }
      function Hu(t, r, e) {
        function u() {
          for (var o = arguments.length, f = il(o), c = o, a = wi(u); c--;) f[c] = arguments[c];
          var l = o < 3 && f[0] !== a && f[o - 1] !== a ? [] : N(f, a);
          return o -= l.length, o < e ? oi(t, r, Qu, u.placeholder, X, f, l, X, X, e - o) : n(this && this !== re && this instanceof u ? i : t, this, f);
        }
        var i = Gu(t);
        return u;
      }
      function Ju(n) {
        return function (t, r, e) {
          var u = ll(t);
          if (!Hf(t)) {
            var i = mi(r, 3);
            t = Pc(t), r = function (n) {
              return i(u[n], n, u);
            };
          }
          var o = n(t, r, e);
          return o > -1 ? u[i ? t[o] : o] : X;
        };
      }
      function Yu(n) {
        return gi(function (t) {
          var r = t.length,
            e = r,
            u = Y.prototype.thru;
          for (n && t.reverse(); e--;) {
            var i = t[e];
            if ("function" != typeof i) throw new pl(en);
            if (u && !o && "wrapper" == bi(i)) var o = new Y([], !0);
          }
          for (e = o ? e : r; ++e < r;) {
            i = t[e];
            var f = bi(i),
              c = "wrapper" == f ? Os(i) : X;
            o = c && $i(c[0]) && c[1] == (mn | yn | bn | xn) && !c[4].length && 1 == c[9] ? o[bi(c[0])].apply(o, c[3]) : 1 == i.length && $i(i) ? o[f]() : o.thru(i);
          }
          return function () {
            var n = arguments,
              e = n[0];
            if (o && 1 == n.length && bh(e)) return o.plant(e).value();
            for (var u = 0, i = r ? t[u].apply(this, n) : e; ++u < r;) i = t[u].call(this, i);
            return i;
          };
        });
      }
      function Qu(n, t, r, e, u, i, o, f, c, a) {
        function l() {
          for (var y = arguments.length, d = il(y), b = y; b--;) d[b] = arguments[b];
          if (_) var w = wi(l),
            m = C(d, w);
          if (e && (d = Uu(d, e, u, _)), i && (d = Bu(d, i, o, _)), y -= m, _ && y < a) {
            return oi(n, t, Qu, l.placeholder, r, d, N(d, w), f, c, a - y);
          }
          var x = h ? r : this,
            j = p ? x[n] : n;
          return y = d.length, f ? d = Hi(d, f) : v && y > 1 && d.reverse(), s && c < y && (d.length = c), this && this !== re && this instanceof l && (j = g || Gu(j)), j.apply(x, d);
        }
        var s = t & mn,
          h = t & _n,
          p = t & vn,
          _ = t & (yn | dn),
          v = t & jn,
          g = p ? X : Gu(n);
        return l;
      }
      function Xu(n, t) {
        return function (r, e) {
          return Oe(r, n, t(e), {});
        };
      }
      function ni(n, t) {
        return function (r, e) {
          var u;
          if (r === X && e === X) return t;
          if (r !== X && (u = r), e !== X) {
            if (u === X) return e;
            "string" == typeof r || "string" == typeof e ? (r = vu(r), e = vu(e)) : (r = _u(r), e = _u(e)), u = n(r, e);
          }
          return u;
        };
      }
      function ti(t) {
        return gi(function (r) {
          return r = c(r, z(mi())), uu(function (e) {
            var u = this;
            return t(r, function (t) {
              return n(t, u, e);
            });
          });
        });
      }
      function ri(n, t) {
        t = t === X ? " " : vu(t);
        var r = t.length;
        if (r < 2) return r ? eu(t, n) : t;
        var e = eu(t, Fl(n / V(t)));
        return T(t) ? Ou(G(e), 0, n).join("") : e.slice(0, n);
      }
      function ei(t, r, e, u) {
        function i() {
          for (var r = -1, c = arguments.length, a = -1, l = u.length, s = il(l + c), h = this && this !== re && this instanceof i ? f : t; ++a < l;) s[a] = u[a];
          for (; c--;) s[a++] = arguments[++r];
          return n(h, o ? e : this, s);
        }
        var o = r & _n,
          f = Gu(t);
        return i;
      }
      function ui(n) {
        return function (t, r, e) {
          return e && "number" != typeof e && Ui(t, r, e) && (r = e = X), t = Ac(t), r === X ? (r = t, t = 0) : r = Ac(r), e = e === X ? t < r ? 1 : -1 : Ac(e), ru(t, r, e, n);
        };
      }
      function ii(n) {
        return function (t, r) {
          return "string" == typeof t && "string" == typeof r || (t = Ic(t), r = Ic(r)), n(t, r);
        };
      }
      function oi(n, t, r, e, u, i, o, f, c, a) {
        var l = t & yn,
          s = l ? o : X,
          h = l ? X : o,
          p = l ? i : X,
          _ = l ? X : i;
        t |= l ? bn : wn, t &= ~(l ? wn : bn), t & gn || (t &= ~(_n | vn));
        var v = [n, t, u, p, s, _, h, f, c, a],
          g = r.apply(X, v);
        return $i(n) && Ss(g, v), g.placeholder = e, Yi(g, n, t);
      }
      function fi(n) {
        var t = al[n];
        return function (n, r) {
          if (n = Ic(n), r = null == r ? 0 : Hl(kc(r), 292), r && Zl(n)) {
            var e = (Ec(n) + "e").split("e");
            return e = (Ec(t(e[0] + "e" + (+e[1] + r))) + "e").split("e"), +(e[0] + "e" + (+e[1] - r));
          }
          return t(n);
        };
      }
      function ci(n) {
        return function (t) {
          var r = zs(t);
          return r == Gn ? M(t) : r == tt ? q(t) : I(t, n(t));
        };
      }
      function ai(n, t, r, e, u, i, o, f) {
        var c = t & vn;
        if (!c && "function" != typeof n) throw new pl(en);
        var a = e ? e.length : 0;
        if (a || (t &= ~(bn | wn), e = u = X), o = o === X ? o : Gl(kc(o), 0), f = f === X ? f : kc(f), a -= u ? u.length : 0, t & wn) {
          var l = e,
            s = u;
          e = u = X;
        }
        var h = c ? X : Os(n),
          p = [n, t, r, e, u, l, s, i, o, f];
        if (h && qi(p, h), n = p[0], t = p[1], r = p[2], e = p[3], u = p[4], f = p[9] = p[9] === X ? c ? 0 : n.length : Gl(p[9] - a, 0), !f && t & (yn | dn) && (t &= ~(yn | dn)), t && t != _n) _ = t == yn || t == dn ? Hu(n, t, f) : t != bn && t != (_n | bn) || u.length ? Qu.apply(X, p) : ei(n, t, r, e);else var _ = Zu(n, t, r);
        return Yi((h ? ms : Ss)(_, p), n, t);
      }
      function li(n, t, r, e) {
        return n === X || Gf(n, gl[r]) && !bl.call(e, r) ? t : n;
      }
      function si(n, t, r, e, u, i) {
        return fc(n) && fc(t) && (i.set(t, n), Ke(n, t, X, si, i), i.delete(t)), n;
      }
      function hi(n) {
        return gc(n) ? X : n;
      }
      function pi(n, t, r, e, u, i) {
        var o = r & hn,
          f = n.length,
          c = t.length;
        if (f != c && !(o && c > f)) return !1;
        var a = i.get(n),
          l = i.get(t);
        if (a && l) return a == t && l == n;
        var s = -1,
          p = !0,
          _ = r & pn ? new yr() : X;
        for (i.set(n, t), i.set(t, n); ++s < f;) {
          var v = n[s],
            g = t[s];
          if (e) var y = o ? e(g, v, s, t, n, i) : e(v, g, s, n, t, i);
          if (y !== X) {
            if (y) continue;
            p = !1;
            break;
          }
          if (_) {
            if (!h(t, function (n, t) {
              if (!S(_, t) && (v === n || u(v, n, r, e, i))) return _.push(t);
            })) {
              p = !1;
              break;
            }
          } else if (v !== g && !u(v, g, r, e, i)) {
            p = !1;
            break;
          }
        }
        return i.delete(n), i.delete(t), p;
      }
      function _i(n, t, r, e, u, i, o) {
        switch (r) {
          case ct:
            if (n.byteLength != t.byteLength || n.byteOffset != t.byteOffset) return !1;
            n = n.buffer, t = t.buffer;
          case ft:
            return !(n.byteLength != t.byteLength || !i(new Rl(n), new Rl(t)));
          case Nn:
          case Pn:
          case Hn:
            return Gf(+n, +t);
          case Zn:
            return n.name == t.name && n.message == t.message;
          case nt:
          case rt:
            return n == t + "";
          case Gn:
            var f = M;
          case tt:
            var c = e & hn;
            if (f || (f = P), n.size != t.size && !c) return !1;
            var a = o.get(n);
            if (a) return a == t;
            e |= pn, o.set(n, t);
            var l = pi(f(n), f(t), e, u, i, o);
            return o.delete(n), l;
          case et:
            if (_s) return _s.call(n) == _s.call(t);
        }
        return !1;
      }
      function vi(n, t, r, e, u, i) {
        var o = r & hn,
          f = yi(n),
          c = f.length;
        if (c != yi(t).length && !o) return !1;
        for (var a = c; a--;) {
          var l = f[a];
          if (!(o ? l in t : bl.call(t, l))) return !1;
        }
        var s = i.get(n),
          h = i.get(t);
        if (s && h) return s == t && h == n;
        var p = !0;
        i.set(n, t), i.set(t, n);
        for (var _ = o; ++a < c;) {
          l = f[a];
          var v = n[l],
            g = t[l];
          if (e) var y = o ? e(g, v, l, t, n, i) : e(v, g, l, n, t, i);
          if (!(y === X ? v === g || u(v, g, r, e, i) : y)) {
            p = !1;
            break;
          }
          _ || (_ = "constructor" == l);
        }
        if (p && !_) {
          var d = n.constructor,
            b = t.constructor;
          d != b && "constructor" in n && "constructor" in t && !("function" == typeof d && d instanceof d && "function" == typeof b && b instanceof b) && (p = !1);
        }
        return i.delete(n), i.delete(t), p;
      }
      function gi(n) {
        return Ls(Vi(n, X, _o), n + "");
      }
      function yi(n) {
        return de(n, Pc, Is);
      }
      function di(n) {
        return de(n, qc, Rs);
      }
      function bi(n) {
        for (var t = n.name + "", r = fs[t], e = bl.call(fs, t) ? r.length : 0; e--;) {
          var u = r[e],
            i = u.func;
          if (null == i || i == n) return u.name;
        }
        return t;
      }
      function wi(n) {
        return (bl.call(Z, "placeholder") ? Z : n).placeholder;
      }
      function mi() {
        var n = Z.iteratee || Ca;
        return n = n === Ca ? De : n, arguments.length ? n(arguments[0], arguments[1]) : n;
      }
      function xi(n, t) {
        var r = n.__data__;
        return Ti(t) ? r["string" == typeof t ? "string" : "hash"] : r.map;
      }
      function ji(n) {
        for (var t = Pc(n), r = t.length; r--;) {
          var e = t[r],
            u = n[e];
          t[r] = [e, u, Fi(u)];
        }
        return t;
      }
      function Ai(n, t) {
        var r = B(n, t);
        return Ue(r) ? r : X;
      }
      function ki(n) {
        var t = bl.call(n, Bl),
          r = n[Bl];
        try {
          n[Bl] = X;
          var e = !0;
        } catch (n) {}
        var u = xl.call(n);
        return e && (t ? n[Bl] = r : delete n[Bl]), u;
      }
      function Oi(n, t, r) {
        for (var e = -1, u = r.length; ++e < u;) {
          var i = r[e],
            o = i.size;
          switch (i.type) {
            case "drop":
              n += o;
              break;
            case "dropRight":
              t -= o;
              break;
            case "take":
              t = Hl(t, n + o);
              break;
            case "takeRight":
              n = Gl(n, t - o);
          }
        }
        return {
          start: n,
          end: t
        };
      }
      function Ii(n) {
        var t = n.match(Bt);
        return t ? t[1].split(Tt) : [];
      }
      function Ri(n, t, r) {
        t = ku(t, n);
        for (var e = -1, u = t.length, i = !1; ++e < u;) {
          var o = no(t[e]);
          if (!(i = null != n && r(n, o))) break;
          n = n[o];
        }
        return i || ++e != u ? i : (u = null == n ? 0 : n.length, !!u && oc(u) && Ci(o, u) && (bh(n) || dh(n)));
      }
      function zi(n) {
        var t = n.length,
          r = new n.constructor(t);
        return t && "string" == typeof n[0] && bl.call(n, "index") && (r.index = n.index, r.input = n.input), r;
      }
      function Ei(n) {
        return "function" != typeof n.constructor || Mi(n) ? {} : gs(El(n));
      }
      function Si(n, t, r) {
        var e = n.constructor;
        switch (t) {
          case ft:
            return Ru(n);
          case Nn:
          case Pn:
            return new e(+n);
          case ct:
            return zu(n, r);
          case at:
          case lt:
          case st:
          case ht:
          case pt:
          case _t:
          case vt:
          case gt:
          case yt:
            return Wu(n, r);
          case Gn:
            return new e();
          case Hn:
          case rt:
            return new e(n);
          case nt:
            return Eu(n);
          case tt:
            return new e();
          case et:
            return Su(n);
        }
      }
      function Wi(n, t) {
        var r = t.length;
        if (!r) return n;
        var e = r - 1;
        return t[e] = (r > 1 ? "& " : "") + t[e], t = t.join(r > 2 ? ", " : " "), n.replace(Ut, "{\n/* [wrapped with " + t + "] */\n");
      }
      function Li(n) {
        return bh(n) || dh(n) || !!(Cl && n && n[Cl]);
      }
      function Ci(n, t) {
        var r = typeof n;
        return t = null == t ? Wn : t, !!t && ("number" == r || "symbol" != r && Vt.test(n)) && n > -1 && n % 1 == 0 && n < t;
      }
      function Ui(n, t, r) {
        if (!fc(r)) return !1;
        var e = typeof t;
        return !!("number" == e ? Hf(r) && Ci(t, r.length) : "string" == e && t in r) && Gf(r[t], n);
      }
      function Bi(n, t) {
        if (bh(n)) return !1;
        var r = typeof n;
        return !("number" != r && "symbol" != r && "boolean" != r && null != n && !bc(n)) || zt.test(n) || !Rt.test(n) || null != t && n in ll(t);
      }
      function Ti(n) {
        var t = typeof n;
        return "string" == t || "number" == t || "symbol" == t || "boolean" == t ? "__proto__" !== n : null === n;
      }
      function $i(n) {
        var t = bi(n),
          r = Z[t];
        if ("function" != typeof r || !(t in Ct.prototype)) return !1;
        if (n === r) return !0;
        var e = Os(r);
        return !!e && n === e[0];
      }
      function Di(n) {
        return !!ml && ml in n;
      }
      function Mi(n) {
        var t = n && n.constructor;
        return n === ("function" == typeof t && t.prototype || gl);
      }
      function Fi(n) {
        return n === n && !fc(n);
      }
      function Ni(n, t) {
        return function (r) {
          return null != r && r[n] === t && (t !== X || n in ll(r));
        };
      }
      function Pi(n) {
        var t = Cf(n, function (n) {
            return r.size === fn && r.clear(), n;
          }),
          r = t.cache;
        return t;
      }
      function qi(n, t) {
        var r = n[1],
          e = t[1],
          u = r | e,
          i = u < (_n | vn | mn),
          o = e == mn && r == yn || e == mn && r == xn && n[7].length <= t[8] || e == (mn | xn) && t[7].length <= t[8] && r == yn;
        if (!i && !o) return n;
        e & _n && (n[2] = t[2], u |= r & _n ? 0 : gn);
        var f = t[3];
        if (f) {
          var c = n[3];
          n[3] = c ? Uu(c, f, t[4]) : f, n[4] = c ? N(n[3], cn) : t[4];
        }
        return f = t[5], f && (c = n[5], n[5] = c ? Bu(c, f, t[6]) : f, n[6] = c ? N(n[5], cn) : t[6]), f = t[7], f && (n[7] = f), e & mn && (n[8] = null == n[8] ? t[8] : Hl(n[8], t[8])), null == n[9] && (n[9] = t[9]), n[0] = t[0], n[1] = u, n;
      }
      function Zi(n) {
        var t = [];
        if (null != n) for (var r in ll(n)) t.push(r);
        return t;
      }
      function Ki(n) {
        return xl.call(n);
      }
      function Vi(t, r, e) {
        return r = Gl(r === X ? t.length - 1 : r, 0), function () {
          for (var u = arguments, i = -1, o = Gl(u.length - r, 0), f = il(o); ++i < o;) f[i] = u[r + i];
          i = -1;
          for (var c = il(r + 1); ++i < r;) c[i] = u[i];
          return c[r] = e(f), n(t, this, c);
        };
      }
      function Gi(n, t) {
        return t.length < 2 ? n : _e(n, au(t, 0, -1));
      }
      function Hi(n, t) {
        for (var r = n.length, e = Hl(t.length, r), u = Tu(n); e--;) {
          var i = t[e];
          n[e] = Ci(i, r) ? u[i] : X;
        }
        return n;
      }
      function Ji(n, t) {
        if (("constructor" !== t || "function" != typeof n[t]) && "__proto__" != t) return n[t];
      }
      function Yi(n, t, r) {
        var e = t + "";
        return Ls(n, Wi(e, ro(Ii(e), r)));
      }
      function Qi(n) {
        var t = 0,
          r = 0;
        return function () {
          var e = Jl(),
            u = In - (e - r);
          if (r = e, u > 0) {
            if (++t >= On) return arguments[0];
          } else t = 0;
          return n.apply(X, arguments);
        };
      }
      function Xi(n, t) {
        var r = -1,
          e = n.length,
          u = e - 1;
        for (t = t === X ? e : t; ++r < t;) {
          var i = tu(r, u),
            o = n[i];
          n[i] = n[r], n[r] = o;
        }
        return n.length = t, n;
      }
      function no(n) {
        if ("string" == typeof n || bc(n)) return n;
        var t = n + "";
        return "0" == t && 1 / n == -Sn ? "-0" : t;
      }
      function to(n) {
        if (null != n) {
          try {
            return dl.call(n);
          } catch (n) {}
          try {
            return n + "";
          } catch (n) {}
        }
        return "";
      }
      function ro(n, t) {
        return r($n, function (r) {
          var e = "_." + r[0];
          t & r[1] && !o(n, e) && n.push(e);
        }), n.sort();
      }
      function eo(n) {
        if (n instanceof Ct) return n.clone();
        var t = new Y(n.__wrapped__, n.__chain__);
        return t.__actions__ = Tu(n.__actions__), t.__index__ = n.__index__, t.__values__ = n.__values__, t;
      }
      function uo(n, t, r) {
        t = (r ? Ui(n, t, r) : t === X) ? 1 : Gl(kc(t), 0);
        var e = null == n ? 0 : n.length;
        if (!e || t < 1) return [];
        for (var u = 0, i = 0, o = il(Fl(e / t)); u < e;) o[i++] = au(n, u, u += t);
        return o;
      }
      function io(n) {
        for (var t = -1, r = null == n ? 0 : n.length, e = 0, u = []; ++t < r;) {
          var i = n[t];
          i && (u[e++] = i);
        }
        return u;
      }
      function oo() {
        var n = arguments.length;
        if (!n) return [];
        for (var t = il(n - 1), r = arguments[0], e = n; e--;) t[e - 1] = arguments[e];
        return a(bh(r) ? Tu(r) : [r], ee(t, 1));
      }
      function fo(n, t, r) {
        var e = null == n ? 0 : n.length;
        return e ? (t = r || t === X ? 1 : kc(t), au(n, t < 0 ? 0 : t, e)) : [];
      }
      function co(n, t, r) {
        var e = null == n ? 0 : n.length;
        return e ? (t = r || t === X ? 1 : kc(t), t = e - t, au(n, 0, t < 0 ? 0 : t)) : [];
      }
      function ao(n, t) {
        return n && n.length ? bu(n, mi(t, 3), !0, !0) : [];
      }
      function lo(n, t) {
        return n && n.length ? bu(n, mi(t, 3), !0) : [];
      }
      function so(n, t, r, e) {
        var u = null == n ? 0 : n.length;
        return u ? (r && "number" != typeof r && Ui(n, t, r) && (r = 0, e = u), ne(n, t, r, e)) : [];
      }
      function ho(n, t, r) {
        var e = null == n ? 0 : n.length;
        if (!e) return -1;
        var u = null == r ? 0 : kc(r);
        return u < 0 && (u = Gl(e + u, 0)), g(n, mi(t, 3), u);
      }
      function po(n, t, r) {
        var e = null == n ? 0 : n.length;
        if (!e) return -1;
        var u = e - 1;
        return r !== X && (u = kc(r), u = r < 0 ? Gl(e + u, 0) : Hl(u, e - 1)), g(n, mi(t, 3), u, !0);
      }
      function _o(n) {
        return (null == n ? 0 : n.length) ? ee(n, 1) : [];
      }
      function vo(n) {
        return (null == n ? 0 : n.length) ? ee(n, Sn) : [];
      }
      function go(n, t) {
        return (null == n ? 0 : n.length) ? (t = t === X ? 1 : kc(t), ee(n, t)) : [];
      }
      function yo(n) {
        for (var t = -1, r = null == n ? 0 : n.length, e = {}; ++t < r;) {
          var u = n[t];
          e[u[0]] = u[1];
        }
        return e;
      }
      function bo(n) {
        return n && n.length ? n[0] : X;
      }
      function wo(n, t, r) {
        var e = null == n ? 0 : n.length;
        if (!e) return -1;
        var u = null == r ? 0 : kc(r);
        return u < 0 && (u = Gl(e + u, 0)), y(n, t, u);
      }
      function mo(n) {
        return (null == n ? 0 : n.length) ? au(n, 0, -1) : [];
      }
      function xo(n, t) {
        return null == n ? "" : Kl.call(n, t);
      }
      function jo(n) {
        var t = null == n ? 0 : n.length;
        return t ? n[t - 1] : X;
      }
      function Ao(n, t, r) {
        var e = null == n ? 0 : n.length;
        if (!e) return -1;
        var u = e;
        return r !== X && (u = kc(r), u = u < 0 ? Gl(e + u, 0) : Hl(u, e - 1)), t === t ? K(n, t, u) : g(n, b, u, !0);
      }
      function ko(n, t) {
        return n && n.length ? Ge(n, kc(t)) : X;
      }
      function Oo(n, t) {
        return n && n.length && t && t.length ? Xe(n, t) : n;
      }
      function Io(n, t, r) {
        return n && n.length && t && t.length ? Xe(n, t, mi(r, 2)) : n;
      }
      function Ro(n, t, r) {
        return n && n.length && t && t.length ? Xe(n, t, X, r) : n;
      }
      function zo(n, t) {
        var r = [];
        if (!n || !n.length) return r;
        var e = -1,
          u = [],
          i = n.length;
        for (t = mi(t, 3); ++e < i;) {
          var o = n[e];
          t(o, e, n) && (r.push(o), u.push(e));
        }
        return nu(n, u), r;
      }
      function Eo(n) {
        return null == n ? n : Xl.call(n);
      }
      function So(n, t, r) {
        var e = null == n ? 0 : n.length;
        return e ? (r && "number" != typeof r && Ui(n, t, r) ? (t = 0, r = e) : (t = null == t ? 0 : kc(t), r = r === X ? e : kc(r)), au(n, t, r)) : [];
      }
      function Wo(n, t) {
        return su(n, t);
      }
      function Lo(n, t, r) {
        return hu(n, t, mi(r, 2));
      }
      function Co(n, t) {
        var r = null == n ? 0 : n.length;
        if (r) {
          var e = su(n, t);
          if (e < r && Gf(n[e], t)) return e;
        }
        return -1;
      }
      function Uo(n, t) {
        return su(n, t, !0);
      }
      function Bo(n, t, r) {
        return hu(n, t, mi(r, 2), !0);
      }
      function To(n, t) {
        if (null == n ? 0 : n.length) {
          var r = su(n, t, !0) - 1;
          if (Gf(n[r], t)) return r;
        }
        return -1;
      }
      function $o(n) {
        return n && n.length ? pu(n) : [];
      }
      function Do(n, t) {
        return n && n.length ? pu(n, mi(t, 2)) : [];
      }
      function Mo(n) {
        var t = null == n ? 0 : n.length;
        return t ? au(n, 1, t) : [];
      }
      function Fo(n, t, r) {
        return n && n.length ? (t = r || t === X ? 1 : kc(t), au(n, 0, t < 0 ? 0 : t)) : [];
      }
      function No(n, t, r) {
        var e = null == n ? 0 : n.length;
        return e ? (t = r || t === X ? 1 : kc(t), t = e - t, au(n, t < 0 ? 0 : t, e)) : [];
      }
      function Po(n, t) {
        return n && n.length ? bu(n, mi(t, 3), !1, !0) : [];
      }
      function qo(n, t) {
        return n && n.length ? bu(n, mi(t, 3)) : [];
      }
      function Zo(n) {
        return n && n.length ? gu(n) : [];
      }
      function Ko(n, t) {
        return n && n.length ? gu(n, mi(t, 2)) : [];
      }
      function Vo(n, t) {
        return t = "function" == typeof t ? t : X, n && n.length ? gu(n, X, t) : [];
      }
      function Go(n) {
        if (!n || !n.length) return [];
        var t = 0;
        return n = i(n, function (n) {
          if (Jf(n)) return t = Gl(n.length, t), !0;
        }), O(t, function (t) {
          return c(n, m(t));
        });
      }
      function Ho(t, r) {
        if (!t || !t.length) return [];
        var e = Go(t);
        return null == r ? e : c(e, function (t) {
          return n(r, X, t);
        });
      }
      function Jo(n, t) {
        return xu(n || [], t || [], Sr);
      }
      function Yo(n, t) {
        return xu(n || [], t || [], fu);
      }
      function Qo(n) {
        var t = Z(n);
        return t.__chain__ = !0, t;
      }
      function Xo(n, t) {
        return t(n), n;
      }
      function nf(n, t) {
        return t(n);
      }
      function tf() {
        return Qo(this);
      }
      function rf() {
        return new Y(this.value(), this.__chain__);
      }
      function ef() {
        this.__values__ === X && (this.__values__ = jc(this.value()));
        var n = this.__index__ >= this.__values__.length;
        return {
          done: n,
          value: n ? X : this.__values__[this.__index__++]
        };
      }
      function uf() {
        return this;
      }
      function of(n) {
        for (var t, r = this; r instanceof J;) {
          var e = eo(r);
          e.__index__ = 0, e.__values__ = X, t ? u.__wrapped__ = e : t = e;
          var u = e;
          r = r.__wrapped__;
        }
        return u.__wrapped__ = n, t;
      }
      function ff() {
        var n = this.__wrapped__;
        if (n instanceof Ct) {
          var t = n;
          return this.__actions__.length && (t = new Ct(this)), t = t.reverse(), t.__actions__.push({
            func: nf,
            args: [Eo],
            thisArg: X
          }), new Y(t, this.__chain__);
        }
        return this.thru(Eo);
      }
      function cf() {
        return wu(this.__wrapped__, this.__actions__);
      }
      function af(n, t, r) {
        var e = bh(n) ? u : Jr;
        return r && Ui(n, t, r) && (t = X), e(n, mi(t, 3));
      }
      function lf(n, t) {
        return (bh(n) ? i : te)(n, mi(t, 3));
      }
      function sf(n, t) {
        return ee(yf(n, t), 1);
      }
      function hf(n, t) {
        return ee(yf(n, t), Sn);
      }
      function pf(n, t, r) {
        return r = r === X ? 1 : kc(r), ee(yf(n, t), r);
      }
      function _f(n, t) {
        return (bh(n) ? r : ys)(n, mi(t, 3));
      }
      function vf(n, t) {
        return (bh(n) ? e : ds)(n, mi(t, 3));
      }
      function gf(n, t, r, e) {
        n = Hf(n) ? n : ra(n), r = r && !e ? kc(r) : 0;
        var u = n.length;
        return r < 0 && (r = Gl(u + r, 0)), dc(n) ? r <= u && n.indexOf(t, r) > -1 : !!u && y(n, t, r) > -1;
      }
      function yf(n, t) {
        return (bh(n) ? c : Pe)(n, mi(t, 3));
      }
      function df(n, t, r, e) {
        return null == n ? [] : (bh(t) || (t = null == t ? [] : [t]), r = e ? X : r, bh(r) || (r = null == r ? [] : [r]), He(n, t, r));
      }
      function bf(n, t, r) {
        var e = bh(n) ? l : j,
          u = arguments.length < 3;
        return e(n, mi(t, 4), r, u, ys);
      }
      function wf(n, t, r) {
        var e = bh(n) ? s : j,
          u = arguments.length < 3;
        return e(n, mi(t, 4), r, u, ds);
      }
      function mf(n, t) {
        return (bh(n) ? i : te)(n, Uf(mi(t, 3)));
      }
      function xf(n) {
        return (bh(n) ? Ir : iu)(n);
      }
      function jf(n, t, r) {
        return t = (r ? Ui(n, t, r) : t === X) ? 1 : kc(t), (bh(n) ? Rr : ou)(n, t);
      }
      function Af(n) {
        return (bh(n) ? zr : cu)(n);
      }
      function kf(n) {
        if (null == n) return 0;
        if (Hf(n)) return dc(n) ? V(n) : n.length;
        var t = zs(n);
        return t == Gn || t == tt ? n.size : Me(n).length;
      }
      function Of(n, t, r) {
        var e = bh(n) ? h : lu;
        return r && Ui(n, t, r) && (t = X), e(n, mi(t, 3));
      }
      function If(n, t) {
        if ("function" != typeof t) throw new pl(en);
        return n = kc(n), function () {
          if (--n < 1) return t.apply(this, arguments);
        };
      }
      function Rf(n, t, r) {
        return t = r ? X : t, t = n && null == t ? n.length : t, ai(n, mn, X, X, X, X, t);
      }
      function zf(n, t) {
        var r;
        if ("function" != typeof t) throw new pl(en);
        return n = kc(n), function () {
          return --n > 0 && (r = t.apply(this, arguments)), n <= 1 && (t = X), r;
        };
      }
      function Ef(n, t, r) {
        t = r ? X : t;
        var e = ai(n, yn, X, X, X, X, X, t);
        return e.placeholder = Ef.placeholder, e;
      }
      function Sf(n, t, r) {
        t = r ? X : t;
        var e = ai(n, dn, X, X, X, X, X, t);
        return e.placeholder = Sf.placeholder, e;
      }
      function Wf(n, t, r) {
        function e(t) {
          var r = h,
            e = p;
          return h = p = X, d = t, v = n.apply(e, r);
        }
        function u(n) {
          return d = n, g = Ws(f, t), b ? e(n) : v;
        }
        function i(n) {
          var r = n - y,
            e = n - d,
            u = t - r;
          return w ? Hl(u, _ - e) : u;
        }
        function o(n) {
          var r = n - y,
            e = n - d;
          return y === X || r >= t || r < 0 || w && e >= _;
        }
        function f() {
          var n = fh();
          return o(n) ? c(n) : (g = Ws(f, i(n)), X);
        }
        function c(n) {
          return g = X, m && h ? e(n) : (h = p = X, v);
        }
        function a() {
          g !== X && As(g), d = 0, h = y = p = g = X;
        }
        function l() {
          return g === X ? v : c(fh());
        }
        function s() {
          var n = fh(),
            r = o(n);
          if (h = arguments, p = this, y = n, r) {
            if (g === X) return u(y);
            if (w) return As(g), g = Ws(f, t), e(y);
          }
          return g === X && (g = Ws(f, t)), v;
        }
        var h,
          p,
          _,
          v,
          g,
          y,
          d = 0,
          b = !1,
          w = !1,
          m = !0;
        if ("function" != typeof n) throw new pl(en);
        return t = Ic(t) || 0, fc(r) && (b = !!r.leading, w = "maxWait" in r, _ = w ? Gl(Ic(r.maxWait) || 0, t) : _, m = "trailing" in r ? !!r.trailing : m), s.cancel = a, s.flush = l, s;
      }
      function Lf(n) {
        return ai(n, jn);
      }
      function Cf(n, t) {
        if ("function" != typeof n || null != t && "function" != typeof t) throw new pl(en);
        var r = function () {
          var e = arguments,
            u = t ? t.apply(this, e) : e[0],
            i = r.cache;
          if (i.has(u)) return i.get(u);
          var o = n.apply(this, e);
          return r.cache = i.set(u, o) || i, o;
        };
        return r.cache = new (Cf.Cache || sr)(), r;
      }
      function Uf(n) {
        if ("function" != typeof n) throw new pl(en);
        return function () {
          var t = arguments;
          switch (t.length) {
            case 0:
              return !n.call(this);
            case 1:
              return !n.call(this, t[0]);
            case 2:
              return !n.call(this, t[0], t[1]);
            case 3:
              return !n.call(this, t[0], t[1], t[2]);
          }
          return !n.apply(this, t);
        };
      }
      function Bf(n) {
        return zf(2, n);
      }
      function Tf(n, t) {
        if ("function" != typeof n) throw new pl(en);
        return t = t === X ? t : kc(t), uu(n, t);
      }
      function $f(t, r) {
        if ("function" != typeof t) throw new pl(en);
        return r = null == r ? 0 : Gl(kc(r), 0), uu(function (e) {
          var u = e[r],
            i = Ou(e, 0, r);
          return u && a(i, u), n(t, this, i);
        });
      }
      function Df(n, t, r) {
        var e = !0,
          u = !0;
        if ("function" != typeof n) throw new pl(en);
        return fc(r) && (e = "leading" in r ? !!r.leading : e, u = "trailing" in r ? !!r.trailing : u), Wf(n, t, {
          leading: e,
          maxWait: t,
          trailing: u
        });
      }
      function Mf(n) {
        return Rf(n, 1);
      }
      function Ff(n, t) {
        return ph(Au(t), n);
      }
      function Nf() {
        if (!arguments.length) return [];
        var n = arguments[0];
        return bh(n) ? n : [n];
      }
      function Pf(n) {
        return Fr(n, sn);
      }
      function qf(n, t) {
        return t = "function" == typeof t ? t : X, Fr(n, sn, t);
      }
      function Zf(n) {
        return Fr(n, an | sn);
      }
      function Kf(n, t) {
        return t = "function" == typeof t ? t : X, Fr(n, an | sn, t);
      }
      function Vf(n, t) {
        return null == t || Pr(n, t, Pc(t));
      }
      function Gf(n, t) {
        return n === t || n !== n && t !== t;
      }
      function Hf(n) {
        return null != n && oc(n.length) && !uc(n);
      }
      function Jf(n) {
        return cc(n) && Hf(n);
      }
      function Yf(n) {
        return n === !0 || n === !1 || cc(n) && we(n) == Nn;
      }
      function Qf(n) {
        return cc(n) && 1 === n.nodeType && !gc(n);
      }
      function Xf(n) {
        if (null == n) return !0;
        if (Hf(n) && (bh(n) || "string" == typeof n || "function" == typeof n.splice || mh(n) || Oh(n) || dh(n))) return !n.length;
        var t = zs(n);
        if (t == Gn || t == tt) return !n.size;
        if (Mi(n)) return !Me(n).length;
        for (var r in n) if (bl.call(n, r)) return !1;
        return !0;
      }
      function nc(n, t) {
        return Se(n, t);
      }
      function tc(n, t, r) {
        r = "function" == typeof r ? r : X;
        var e = r ? r(n, t) : X;
        return e === X ? Se(n, t, X, r) : !!e;
      }
      function rc(n) {
        if (!cc(n)) return !1;
        var t = we(n);
        return t == Zn || t == qn || "string" == typeof n.message && "string" == typeof n.name && !gc(n);
      }
      function ec(n) {
        return "number" == typeof n && Zl(n);
      }
      function uc(n) {
        if (!fc(n)) return !1;
        var t = we(n);
        return t == Kn || t == Vn || t == Fn || t == Xn;
      }
      function ic(n) {
        return "number" == typeof n && n == kc(n);
      }
      function oc(n) {
        return "number" == typeof n && n > -1 && n % 1 == 0 && n <= Wn;
      }
      function fc(n) {
        var t = typeof n;
        return null != n && ("object" == t || "function" == t);
      }
      function cc(n) {
        return null != n && "object" == typeof n;
      }
      function ac(n, t) {
        return n === t || Ce(n, t, ji(t));
      }
      function lc(n, t, r) {
        return r = "function" == typeof r ? r : X, Ce(n, t, ji(t), r);
      }
      function sc(n) {
        return vc(n) && n != +n;
      }
      function hc(n) {
        if (Es(n)) throw new fl(rn);
        return Ue(n);
      }
      function pc(n) {
        return null === n;
      }
      function _c(n) {
        return null == n;
      }
      function vc(n) {
        return "number" == typeof n || cc(n) && we(n) == Hn;
      }
      function gc(n) {
        if (!cc(n) || we(n) != Yn) return !1;
        var t = El(n);
        if (null === t) return !0;
        var r = bl.call(t, "constructor") && t.constructor;
        return "function" == typeof r && r instanceof r && dl.call(r) == jl;
      }
      function yc(n) {
        return ic(n) && n >= -Wn && n <= Wn;
      }
      function dc(n) {
        return "string" == typeof n || !bh(n) && cc(n) && we(n) == rt;
      }
      function bc(n) {
        return "symbol" == typeof n || cc(n) && we(n) == et;
      }
      function wc(n) {
        return n === X;
      }
      function mc(n) {
        return cc(n) && zs(n) == it;
      }
      function xc(n) {
        return cc(n) && we(n) == ot;
      }
      function jc(n) {
        if (!n) return [];
        if (Hf(n)) return dc(n) ? G(n) : Tu(n);
        if (Ul && n[Ul]) return D(n[Ul]());
        var t = zs(n);
        return (t == Gn ? M : t == tt ? P : ra)(n);
      }
      function Ac(n) {
        if (!n) return 0 === n ? n : 0;
        if (n = Ic(n), n === Sn || n === -Sn) {
          return (n < 0 ? -1 : 1) * Ln;
        }
        return n === n ? n : 0;
      }
      function kc(n) {
        var t = Ac(n),
          r = t % 1;
        return t === t ? r ? t - r : t : 0;
      }
      function Oc(n) {
        return n ? Mr(kc(n), 0, Un) : 0;
      }
      function Ic(n) {
        if ("number" == typeof n) return n;
        if (bc(n)) return Cn;
        if (fc(n)) {
          var t = "function" == typeof n.valueOf ? n.valueOf() : n;
          n = fc(t) ? t + "" : t;
        }
        if ("string" != typeof n) return 0 === n ? n : +n;
        n = R(n);
        var r = qt.test(n);
        return r || Kt.test(n) ? Xr(n.slice(2), r ? 2 : 8) : Pt.test(n) ? Cn : +n;
      }
      function Rc(n) {
        return $u(n, qc(n));
      }
      function zc(n) {
        return n ? Mr(kc(n), -Wn, Wn) : 0 === n ? n : 0;
      }
      function Ec(n) {
        return null == n ? "" : vu(n);
      }
      function Sc(n, t) {
        var r = gs(n);
        return null == t ? r : Cr(r, t);
      }
      function Wc(n, t) {
        return v(n, mi(t, 3), ue);
      }
      function Lc(n, t) {
        return v(n, mi(t, 3), oe);
      }
      function Cc(n, t) {
        return null == n ? n : bs(n, mi(t, 3), qc);
      }
      function Uc(n, t) {
        return null == n ? n : ws(n, mi(t, 3), qc);
      }
      function Bc(n, t) {
        return n && ue(n, mi(t, 3));
      }
      function Tc(n, t) {
        return n && oe(n, mi(t, 3));
      }
      function $c(n) {
        return null == n ? [] : fe(n, Pc(n));
      }
      function Dc(n) {
        return null == n ? [] : fe(n, qc(n));
      }
      function Mc(n, t, r) {
        var e = null == n ? X : _e(n, t);
        return e === X ? r : e;
      }
      function Fc(n, t) {
        return null != n && Ri(n, t, xe);
      }
      function Nc(n, t) {
        return null != n && Ri(n, t, je);
      }
      function Pc(n) {
        return Hf(n) ? Or(n) : Me(n);
      }
      function qc(n) {
        return Hf(n) ? Or(n, !0) : Fe(n);
      }
      function Zc(n, t) {
        var r = {};
        return t = mi(t, 3), ue(n, function (n, e, u) {
          Br(r, t(n, e, u), n);
        }), r;
      }
      function Kc(n, t) {
        var r = {};
        return t = mi(t, 3), ue(n, function (n, e, u) {
          Br(r, e, t(n, e, u));
        }), r;
      }
      function Vc(n, t) {
        return Gc(n, Uf(mi(t)));
      }
      function Gc(n, t) {
        if (null == n) return {};
        var r = c(di(n), function (n) {
          return [n];
        });
        return t = mi(t), Ye(n, r, function (n, r) {
          return t(n, r[0]);
        });
      }
      function Hc(n, t, r) {
        t = ku(t, n);
        var e = -1,
          u = t.length;
        for (u || (u = 1, n = X); ++e < u;) {
          var i = null == n ? X : n[no(t[e])];
          i === X && (e = u, i = r), n = uc(i) ? i.call(n) : i;
        }
        return n;
      }
      function Jc(n, t, r) {
        return null == n ? n : fu(n, t, r);
      }
      function Yc(n, t, r, e) {
        return e = "function" == typeof e ? e : X, null == n ? n : fu(n, t, r, e);
      }
      function Qc(n, t, e) {
        var u = bh(n),
          i = u || mh(n) || Oh(n);
        if (t = mi(t, 4), null == e) {
          var o = n && n.constructor;
          e = i ? u ? new o() : [] : fc(n) && uc(o) ? gs(El(n)) : {};
        }
        return (i ? r : ue)(n, function (n, r, u) {
          return t(e, n, r, u);
        }), e;
      }
      function Xc(n, t) {
        return null == n || yu(n, t);
      }
      function na(n, t, r) {
        return null == n ? n : du(n, t, Au(r));
      }
      function ta(n, t, r, e) {
        return e = "function" == typeof e ? e : X, null == n ? n : du(n, t, Au(r), e);
      }
      function ra(n) {
        return null == n ? [] : E(n, Pc(n));
      }
      function ea(n) {
        return null == n ? [] : E(n, qc(n));
      }
      function ua(n, t, r) {
        return r === X && (r = t, t = X), r !== X && (r = Ic(r), r = r === r ? r : 0), t !== X && (t = Ic(t), t = t === t ? t : 0), Mr(Ic(n), t, r);
      }
      function ia(n, t, r) {
        return t = Ac(t), r === X ? (r = t, t = 0) : r = Ac(r), n = Ic(n), Ae(n, t, r);
      }
      function oa(n, t, r) {
        if (r && "boolean" != typeof r && Ui(n, t, r) && (t = r = X), r === X && ("boolean" == typeof t ? (r = t, t = X) : "boolean" == typeof n && (r = n, n = X)), n === X && t === X ? (n = 0, t = 1) : (n = Ac(n), t === X ? (t = n, n = 0) : t = Ac(t)), n > t) {
          var e = n;
          n = t, t = e;
        }
        if (r || n % 1 || t % 1) {
          var u = Ql();
          return Hl(n + u * (t - n + Qr("1e-" + ((u + "").length - 1))), t);
        }
        return tu(n, t);
      }
      function fa(n) {
        return Qh(Ec(n).toLowerCase());
      }
      function ca(n) {
        return n = Ec(n), n && n.replace(Gt, ve).replace(Dr, "");
      }
      function aa(n, t, r) {
        n = Ec(n), t = vu(t);
        var e = n.length;
        r = r === X ? e : Mr(kc(r), 0, e);
        var u = r;
        return r -= t.length, r >= 0 && n.slice(r, u) == t;
      }
      function la(n) {
        return n = Ec(n), n && At.test(n) ? n.replace(xt, ge) : n;
      }
      function sa(n) {
        return n = Ec(n), n && Wt.test(n) ? n.replace(St, "\\$&") : n;
      }
      function ha(n, t, r) {
        n = Ec(n), t = kc(t);
        var e = t ? V(n) : 0;
        if (!t || e >= t) return n;
        var u = (t - e) / 2;
        return ri(Nl(u), r) + n + ri(Fl(u), r);
      }
      function pa(n, t, r) {
        n = Ec(n), t = kc(t);
        var e = t ? V(n) : 0;
        return t && e < t ? n + ri(t - e, r) : n;
      }
      function _a(n, t, r) {
        n = Ec(n), t = kc(t);
        var e = t ? V(n) : 0;
        return t && e < t ? ri(t - e, r) + n : n;
      }
      function va(n, t, r) {
        return r || null == t ? t = 0 : t && (t = +t), Yl(Ec(n).replace(Lt, ""), t || 0);
      }
      function ga(n, t, r) {
        return t = (r ? Ui(n, t, r) : t === X) ? 1 : kc(t), eu(Ec(n), t);
      }
      function ya() {
        var n = arguments,
          t = Ec(n[0]);
        return n.length < 3 ? t : t.replace(n[1], n[2]);
      }
      function da(n, t, r) {
        return r && "number" != typeof r && Ui(n, t, r) && (t = r = X), (r = r === X ? Un : r >>> 0) ? (n = Ec(n), n && ("string" == typeof t || null != t && !Ah(t)) && (t = vu(t), !t && T(n)) ? Ou(G(n), 0, r) : n.split(t, r)) : [];
      }
      function ba(n, t, r) {
        return n = Ec(n), r = null == r ? 0 : Mr(kc(r), 0, n.length), t = vu(t), n.slice(r, r + t.length) == t;
      }
      function wa(n, t, r) {
        var e = Z.templateSettings;
        r && Ui(n, t, r) && (t = X), n = Ec(n), t = Sh({}, t, e, li);
        var u,
          i,
          o = Sh({}, t.imports, e.imports, li),
          f = Pc(o),
          c = E(o, f),
          a = 0,
          l = t.interpolate || Ht,
          s = "__p += '",
          h = sl((t.escape || Ht).source + "|" + l.source + "|" + (l === It ? Ft : Ht).source + "|" + (t.evaluate || Ht).source + "|$", "g"),
          p = "//# sourceURL=" + (bl.call(t, "sourceURL") ? (t.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++Zr + "]") + "\n";
        n.replace(h, function (t, r, e, o, f, c) {
          return e || (e = o), s += n.slice(a, c).replace(Jt, U), r && (u = !0, s += "' +\n__e(" + r + ") +\n'"), f && (i = !0, s += "';\n" + f + ";\n__p += '"), e && (s += "' +\n((__t = (" + e + ")) == null ? '' : __t) +\n'"), a = c + t.length, t;
        }), s += "';\n";
        var _ = bl.call(t, "variable") && t.variable;
        if (_) {
          if (Dt.test(_)) throw new fl(un);
        } else s = "with (obj) {\n" + s + "\n}\n";
        s = (i ? s.replace(dt, "") : s).replace(bt, "$1").replace(wt, "$1;"), s = "function(" + (_ || "obj") + ") {\n" + (_ ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (u ? ", __e = _.escape" : "") + (i ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + s + "return __p\n}";
        var v = Xh(function () {
          return cl(f, p + "return " + s).apply(X, c);
        });
        if (v.source = s, rc(v)) throw v;
        return v;
      }
      function ma(n) {
        return Ec(n).toLowerCase();
      }
      function xa(n) {
        return Ec(n).toUpperCase();
      }
      function ja(n, t, r) {
        if (n = Ec(n), n && (r || t === X)) return R(n);
        if (!n || !(t = vu(t))) return n;
        var e = G(n),
          u = G(t);
        return Ou(e, W(e, u), L(e, u) + 1).join("");
      }
      function Aa(n, t, r) {
        if (n = Ec(n), n && (r || t === X)) return n.slice(0, H(n) + 1);
        if (!n || !(t = vu(t))) return n;
        var e = G(n);
        return Ou(e, 0, L(e, G(t)) + 1).join("");
      }
      function ka(n, t, r) {
        if (n = Ec(n), n && (r || t === X)) return n.replace(Lt, "");
        if (!n || !(t = vu(t))) return n;
        var e = G(n);
        return Ou(e, W(e, G(t))).join("");
      }
      function Oa(n, t) {
        var r = An,
          e = kn;
        if (fc(t)) {
          var u = "separator" in t ? t.separator : u;
          r = "length" in t ? kc(t.length) : r, e = "omission" in t ? vu(t.omission) : e;
        }
        n = Ec(n);
        var i = n.length;
        if (T(n)) {
          var o = G(n);
          i = o.length;
        }
        if (r >= i) return n;
        var f = r - V(e);
        if (f < 1) return e;
        var c = o ? Ou(o, 0, f).join("") : n.slice(0, f);
        if (u === X) return c + e;
        if (o && (f += c.length - f), Ah(u)) {
          if (n.slice(f).search(u)) {
            var a,
              l = c;
            for (u.global || (u = sl(u.source, Ec(Nt.exec(u)) + "g")), u.lastIndex = 0; a = u.exec(l);) var s = a.index;
            c = c.slice(0, s === X ? f : s);
          }
        } else if (n.indexOf(vu(u), f) != f) {
          var h = c.lastIndexOf(u);
          h > -1 && (c = c.slice(0, h));
        }
        return c + e;
      }
      function Ia(n) {
        return n = Ec(n), n && jt.test(n) ? n.replace(mt, ye) : n;
      }
      function Ra(n, t, r) {
        return n = Ec(n), t = r ? X : t, t === X ? $(n) ? Q(n) : _(n) : n.match(t) || [];
      }
      function za(t) {
        var r = null == t ? 0 : t.length,
          e = mi();
        return t = r ? c(t, function (n) {
          if ("function" != typeof n[1]) throw new pl(en);
          return [e(n[0]), n[1]];
        }) : [], uu(function (e) {
          for (var u = -1; ++u < r;) {
            var i = t[u];
            if (n(i[0], this, e)) return n(i[1], this, e);
          }
        });
      }
      function Ea(n) {
        return Nr(Fr(n, an));
      }
      function Sa(n) {
        return function () {
          return n;
        };
      }
      function Wa(n, t) {
        return null == n || n !== n ? t : n;
      }
      function La(n) {
        return n;
      }
      function Ca(n) {
        return De("function" == typeof n ? n : Fr(n, an));
      }
      function Ua(n) {
        return qe(Fr(n, an));
      }
      function Ba(n, t) {
        return Ze(n, Fr(t, an));
      }
      function Ta(n, t, e) {
        var u = Pc(t),
          i = fe(t, u);
        null != e || fc(t) && (i.length || !u.length) || (e = t, t = n, n = this, i = fe(t, Pc(t)));
        var o = !(fc(e) && "chain" in e && !e.chain),
          f = uc(n);
        return r(i, function (r) {
          var e = t[r];
          n[r] = e, f && (n.prototype[r] = function () {
            var t = this.__chain__;
            if (o || t) {
              var r = n(this.__wrapped__);
              return (r.__actions__ = Tu(this.__actions__)).push({
                func: e,
                args: arguments,
                thisArg: n
              }), r.__chain__ = t, r;
            }
            return e.apply(n, a([this.value()], arguments));
          });
        }), n;
      }
      function $a() {
        return re._ === this && (re._ = Al), this;
      }
      function Da() {}
      function Ma(n) {
        return n = kc(n), uu(function (t) {
          return Ge(t, n);
        });
      }
      function Fa(n) {
        return Bi(n) ? m(no(n)) : Qe(n);
      }
      function Na(n) {
        return function (t) {
          return null == n ? X : _e(n, t);
        };
      }
      function Pa() {
        return [];
      }
      function qa() {
        return !1;
      }
      function Za() {
        return {};
      }
      function Ka() {
        return "";
      }
      function Va() {
        return !0;
      }
      function Ga(n, t) {
        if (n = kc(n), n < 1 || n > Wn) return [];
        var r = Un,
          e = Hl(n, Un);
        t = mi(t), n -= Un;
        for (var u = O(e, t); ++r < n;) t(r);
        return u;
      }
      function Ha(n) {
        return bh(n) ? c(n, no) : bc(n) ? [n] : Tu(Cs(Ec(n)));
      }
      function Ja(n) {
        var t = ++wl;
        return Ec(n) + t;
      }
      function Ya(n) {
        return n && n.length ? Yr(n, La, me) : X;
      }
      function Qa(n, t) {
        return n && n.length ? Yr(n, mi(t, 2), me) : X;
      }
      function Xa(n) {
        return w(n, La);
      }
      function nl(n, t) {
        return w(n, mi(t, 2));
      }
      function tl(n) {
        return n && n.length ? Yr(n, La, Ne) : X;
      }
      function rl(n, t) {
        return n && n.length ? Yr(n, mi(t, 2), Ne) : X;
      }
      function el(n) {
        return n && n.length ? k(n, La) : 0;
      }
      function ul(n, t) {
        return n && n.length ? k(n, mi(t, 2)) : 0;
      }
      x = null == x ? re : be.defaults(re.Object(), x, be.pick(re, qr));
      var il = x.Array,
        ol = x.Date,
        fl = x.Error,
        cl = x.Function,
        al = x.Math,
        ll = x.Object,
        sl = x.RegExp,
        hl = x.String,
        pl = x.TypeError,
        _l = il.prototype,
        vl = cl.prototype,
        gl = ll.prototype,
        yl = x["__core-js_shared__"],
        dl = vl.toString,
        bl = gl.hasOwnProperty,
        wl = 0,
        ml = function () {
          var n = /[^.]+$/.exec(yl && yl.keys && yl.keys.IE_PROTO || "");
          return n ? "Symbol(src)_1." + n : "";
        }(),
        xl = gl.toString,
        jl = dl.call(ll),
        Al = re._,
        kl = sl("^" + dl.call(bl).replace(St, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"),
        Ol = ie ? x.Buffer : X,
        Il = x.Symbol,
        Rl = x.Uint8Array,
        zl = Ol ? Ol.allocUnsafe : X,
        El = F(ll.getPrototypeOf, ll),
        Sl = ll.create,
        Wl = gl.propertyIsEnumerable,
        Ll = _l.splice,
        Cl = Il ? Il.isConcatSpreadable : X,
        Ul = Il ? Il.iterator : X,
        Bl = Il ? Il.toStringTag : X,
        Tl = function () {
          try {
            var n = Ai(ll, "defineProperty");
            return n({}, "", {}), n;
          } catch (n) {}
        }(),
        $l = x.clearTimeout !== re.clearTimeout && x.clearTimeout,
        Dl = ol && ol.now !== re.Date.now && ol.now,
        Ml = x.setTimeout !== re.setTimeout && x.setTimeout,
        Fl = al.ceil,
        Nl = al.floor,
        Pl = ll.getOwnPropertySymbols,
        ql = Ol ? Ol.isBuffer : X,
        Zl = x.isFinite,
        Kl = _l.join,
        Vl = F(ll.keys, ll),
        Gl = al.max,
        Hl = al.min,
        Jl = ol.now,
        Yl = x.parseInt,
        Ql = al.random,
        Xl = _l.reverse,
        ns = Ai(x, "DataView"),
        ts = Ai(x, "Map"),
        rs = Ai(x, "Promise"),
        es = Ai(x, "Set"),
        us = Ai(x, "WeakMap"),
        is = Ai(ll, "create"),
        os = us && new us(),
        fs = {},
        cs = to(ns),
        as = to(ts),
        ls = to(rs),
        ss = to(es),
        hs = to(us),
        ps = Il ? Il.prototype : X,
        _s = ps ? ps.valueOf : X,
        vs = ps ? ps.toString : X,
        gs = function () {
          function n() {}
          return function (t) {
            if (!fc(t)) return {};
            if (Sl) return Sl(t);
            n.prototype = t;
            var r = new n();
            return n.prototype = X, r;
          };
        }();
      Z.templateSettings = {
        escape: kt,
        evaluate: Ot,
        interpolate: It,
        variable: "",
        imports: {
          _: Z
        }
      }, Z.prototype = J.prototype, Z.prototype.constructor = Z, Y.prototype = gs(J.prototype), Y.prototype.constructor = Y, Ct.prototype = gs(J.prototype), Ct.prototype.constructor = Ct, Xt.prototype.clear = nr, Xt.prototype.delete = tr, Xt.prototype.get = rr, Xt.prototype.has = er, Xt.prototype.set = ur, ir.prototype.clear = or, ir.prototype.delete = fr, ir.prototype.get = cr, ir.prototype.has = ar, ir.prototype.set = lr, sr.prototype.clear = hr, sr.prototype.delete = pr, sr.prototype.get = _r, sr.prototype.has = vr, sr.prototype.set = gr, yr.prototype.add = yr.prototype.push = dr, yr.prototype.has = br, wr.prototype.clear = mr, wr.prototype.delete = xr, wr.prototype.get = jr, wr.prototype.has = Ar, wr.prototype.set = kr;
      var ys = Pu(ue),
        ds = Pu(oe, !0),
        bs = qu(),
        ws = qu(!0),
        ms = os ? function (n, t) {
          return os.set(n, t), n;
        } : La,
        xs = Tl ? function (n, t) {
          return Tl(n, "toString", {
            configurable: !0,
            enumerable: !1,
            value: Sa(t),
            writable: !0
          });
        } : La,
        js = uu,
        As = $l || function (n) {
          return re.clearTimeout(n);
        },
        ks = es && 1 / P(new es([, -0]))[1] == Sn ? function (n) {
          return new es(n);
        } : Da,
        Os = os ? function (n) {
          return os.get(n);
        } : Da,
        Is = Pl ? function (n) {
          return null == n ? [] : (n = ll(n), i(Pl(n), function (t) {
            return Wl.call(n, t);
          }));
        } : Pa,
        Rs = Pl ? function (n) {
          for (var t = []; n;) a(t, Is(n)), n = El(n);
          return t;
        } : Pa,
        zs = we;
      (ns && zs(new ns(new ArrayBuffer(1))) != ct || ts && zs(new ts()) != Gn || rs && zs(rs.resolve()) != Qn || es && zs(new es()) != tt || us && zs(new us()) != it) && (zs = function (n) {
        var t = we(n),
          r = t == Yn ? n.constructor : X,
          e = r ? to(r) : "";
        if (e) switch (e) {
          case cs:
            return ct;
          case as:
            return Gn;
          case ls:
            return Qn;
          case ss:
            return tt;
          case hs:
            return it;
        }
        return t;
      });
      var Es = yl ? uc : qa,
        Ss = Qi(ms),
        Ws = Ml || function (n, t) {
          return re.setTimeout(n, t);
        },
        Ls = Qi(xs),
        Cs = Pi(function (n) {
          var t = [];
          return 46 === n.charCodeAt(0) && t.push(""), n.replace(Et, function (n, r, e, u) {
            t.push(e ? u.replace(Mt, "$1") : r || n);
          }), t;
        }),
        Us = uu(function (n, t) {
          return Jf(n) ? Hr(n, ee(t, 1, Jf, !0)) : [];
        }),
        Bs = uu(function (n, t) {
          var r = jo(t);
          return Jf(r) && (r = X), Jf(n) ? Hr(n, ee(t, 1, Jf, !0), mi(r, 2)) : [];
        }),
        Ts = uu(function (n, t) {
          var r = jo(t);
          return Jf(r) && (r = X), Jf(n) ? Hr(n, ee(t, 1, Jf, !0), X, r) : [];
        }),
        $s = uu(function (n) {
          var t = c(n, ju);
          return t.length && t[0] === n[0] ? ke(t) : [];
        }),
        Ds = uu(function (n) {
          var t = jo(n),
            r = c(n, ju);
          return t === jo(r) ? t = X : r.pop(), r.length && r[0] === n[0] ? ke(r, mi(t, 2)) : [];
        }),
        Ms = uu(function (n) {
          var t = jo(n),
            r = c(n, ju);
          return t = "function" == typeof t ? t : X, t && r.pop(), r.length && r[0] === n[0] ? ke(r, X, t) : [];
        }),
        Fs = uu(Oo),
        Ns = gi(function (n, t) {
          var r = null == n ? 0 : n.length,
            e = Tr(n, t);
          return nu(n, c(t, function (n) {
            return Ci(n, r) ? +n : n;
          }).sort(Lu)), e;
        }),
        Ps = uu(function (n) {
          return gu(ee(n, 1, Jf, !0));
        }),
        qs = uu(function (n) {
          var t = jo(n);
          return Jf(t) && (t = X), gu(ee(n, 1, Jf, !0), mi(t, 2));
        }),
        Zs = uu(function (n) {
          var t = jo(n);
          return t = "function" == typeof t ? t : X, gu(ee(n, 1, Jf, !0), X, t);
        }),
        Ks = uu(function (n, t) {
          return Jf(n) ? Hr(n, t) : [];
        }),
        Vs = uu(function (n) {
          return mu(i(n, Jf));
        }),
        Gs = uu(function (n) {
          var t = jo(n);
          return Jf(t) && (t = X), mu(i(n, Jf), mi(t, 2));
        }),
        Hs = uu(function (n) {
          var t = jo(n);
          return t = "function" == typeof t ? t : X, mu(i(n, Jf), X, t);
        }),
        Js = uu(Go),
        Ys = uu(function (n) {
          var t = n.length,
            r = t > 1 ? n[t - 1] : X;
          return r = "function" == typeof r ? (n.pop(), r) : X, Ho(n, r);
        }),
        Qs = gi(function (n) {
          var t = n.length,
            r = t ? n[0] : 0,
            e = this.__wrapped__,
            u = function (t) {
              return Tr(t, n);
            };
          return !(t > 1 || this.__actions__.length) && e instanceof Ct && Ci(r) ? (e = e.slice(r, +r + (t ? 1 : 0)), e.__actions__.push({
            func: nf,
            args: [u],
            thisArg: X
          }), new Y(e, this.__chain__).thru(function (n) {
            return t && !n.length && n.push(X), n;
          })) : this.thru(u);
        }),
        Xs = Fu(function (n, t, r) {
          bl.call(n, r) ? ++n[r] : Br(n, r, 1);
        }),
        nh = Ju(ho),
        th = Ju(po),
        rh = Fu(function (n, t, r) {
          bl.call(n, r) ? n[r].push(t) : Br(n, r, [t]);
        }),
        eh = uu(function (t, r, e) {
          var u = -1,
            i = "function" == typeof r,
            o = Hf(t) ? il(t.length) : [];
          return ys(t, function (t) {
            o[++u] = i ? n(r, t, e) : Ie(t, r, e);
          }), o;
        }),
        uh = Fu(function (n, t, r) {
          Br(n, r, t);
        }),
        ih = Fu(function (n, t, r) {
          n[r ? 0 : 1].push(t);
        }, function () {
          return [[], []];
        }),
        oh = uu(function (n, t) {
          if (null == n) return [];
          var r = t.length;
          return r > 1 && Ui(n, t[0], t[1]) ? t = [] : r > 2 && Ui(t[0], t[1], t[2]) && (t = [t[0]]), He(n, ee(t, 1), []);
        }),
        fh = Dl || function () {
          return re.Date.now();
        },
        ch = uu(function (n, t, r) {
          var e = _n;
          if (r.length) {
            var u = N(r, wi(ch));
            e |= bn;
          }
          return ai(n, e, t, r, u);
        }),
        ah = uu(function (n, t, r) {
          var e = _n | vn;
          if (r.length) {
            var u = N(r, wi(ah));
            e |= bn;
          }
          return ai(t, e, n, r, u);
        }),
        lh = uu(function (n, t) {
          return Gr(n, 1, t);
        }),
        sh = uu(function (n, t, r) {
          return Gr(n, Ic(t) || 0, r);
        });
      Cf.Cache = sr;
      var hh = js(function (t, r) {
          r = 1 == r.length && bh(r[0]) ? c(r[0], z(mi())) : c(ee(r, 1), z(mi()));
          var e = r.length;
          return uu(function (u) {
            for (var i = -1, o = Hl(u.length, e); ++i < o;) u[i] = r[i].call(this, u[i]);
            return n(t, this, u);
          });
        }),
        ph = uu(function (n, t) {
          return ai(n, bn, X, t, N(t, wi(ph)));
        }),
        _h = uu(function (n, t) {
          return ai(n, wn, X, t, N(t, wi(_h)));
        }),
        vh = gi(function (n, t) {
          return ai(n, xn, X, X, X, t);
        }),
        gh = ii(me),
        yh = ii(function (n, t) {
          return n >= t;
        }),
        dh = Re(function () {
          return arguments;
        }()) ? Re : function (n) {
          return cc(n) && bl.call(n, "callee") && !Wl.call(n, "callee");
        },
        bh = il.isArray,
        wh = ce ? z(ce) : ze,
        mh = ql || qa,
        xh = ae ? z(ae) : Ee,
        jh = le ? z(le) : Le,
        Ah = se ? z(se) : Be,
        kh = he ? z(he) : Te,
        Oh = pe ? z(pe) : $e,
        Ih = ii(Ne),
        Rh = ii(function (n, t) {
          return n <= t;
        }),
        zh = Nu(function (n, t) {
          if (Mi(t) || Hf(t)) return $u(t, Pc(t), n), X;
          for (var r in t) bl.call(t, r) && Sr(n, r, t[r]);
        }),
        Eh = Nu(function (n, t) {
          $u(t, qc(t), n);
        }),
        Sh = Nu(function (n, t, r, e) {
          $u(t, qc(t), n, e);
        }),
        Wh = Nu(function (n, t, r, e) {
          $u(t, Pc(t), n, e);
        }),
        Lh = gi(Tr),
        Ch = uu(function (n, t) {
          n = ll(n);
          var r = -1,
            e = t.length,
            u = e > 2 ? t[2] : X;
          for (u && Ui(t[0], t[1], u) && (e = 1); ++r < e;) for (var i = t[r], o = qc(i), f = -1, c = o.length; ++f < c;) {
            var a = o[f],
              l = n[a];
            (l === X || Gf(l, gl[a]) && !bl.call(n, a)) && (n[a] = i[a]);
          }
          return n;
        }),
        Uh = uu(function (t) {
          return t.push(X, si), n(Mh, X, t);
        }),
        Bh = Xu(function (n, t, r) {
          null != t && "function" != typeof t.toString && (t = xl.call(t)), n[t] = r;
        }, Sa(La)),
        Th = Xu(function (n, t, r) {
          null != t && "function" != typeof t.toString && (t = xl.call(t)), bl.call(n, t) ? n[t].push(r) : n[t] = [r];
        }, mi),
        $h = uu(Ie),
        Dh = Nu(function (n, t, r) {
          Ke(n, t, r);
        }),
        Mh = Nu(function (n, t, r, e) {
          Ke(n, t, r, e);
        }),
        Fh = gi(function (n, t) {
          var r = {};
          if (null == n) return r;
          var e = !1;
          t = c(t, function (t) {
            return t = ku(t, n), e || (e = t.length > 1), t;
          }), $u(n, di(n), r), e && (r = Fr(r, an | ln | sn, hi));
          for (var u = t.length; u--;) yu(r, t[u]);
          return r;
        }),
        Nh = gi(function (n, t) {
          return null == n ? {} : Je(n, t);
        }),
        Ph = ci(Pc),
        qh = ci(qc),
        Zh = Vu(function (n, t, r) {
          return t = t.toLowerCase(), n + (r ? fa(t) : t);
        }),
        Kh = Vu(function (n, t, r) {
          return n + (r ? "-" : "") + t.toLowerCase();
        }),
        Vh = Vu(function (n, t, r) {
          return n + (r ? " " : "") + t.toLowerCase();
        }),
        Gh = Ku("toLowerCase"),
        Hh = Vu(function (n, t, r) {
          return n + (r ? "_" : "") + t.toLowerCase();
        }),
        Jh = Vu(function (n, t, r) {
          return n + (r ? " " : "") + Qh(t);
        }),
        Yh = Vu(function (n, t, r) {
          return n + (r ? " " : "") + t.toUpperCase();
        }),
        Qh = Ku("toUpperCase"),
        Xh = uu(function (t, r) {
          try {
            return n(t, X, r);
          } catch (n) {
            return rc(n) ? n : new fl(n);
          }
        }),
        np = gi(function (n, t) {
          return r(t, function (t) {
            t = no(t), Br(n, t, ch(n[t], n));
          }), n;
        }),
        tp = Yu(),
        rp = Yu(!0),
        ep = uu(function (n, t) {
          return function (r) {
            return Ie(r, n, t);
          };
        }),
        up = uu(function (n, t) {
          return function (r) {
            return Ie(n, r, t);
          };
        }),
        ip = ti(c),
        op = ti(u),
        fp = ti(h),
        cp = ui(),
        ap = ui(!0),
        lp = ni(function (n, t) {
          return n + t;
        }, 0),
        sp = fi("ceil"),
        hp = ni(function (n, t) {
          return n / t;
        }, 1),
        pp = fi("floor"),
        _p = ni(function (n, t) {
          return n * t;
        }, 1),
        vp = fi("round"),
        gp = ni(function (n, t) {
          return n - t;
        }, 0);
      return Z.after = If, Z.ary = Rf, Z.assign = zh, Z.assignIn = Eh, Z.assignInWith = Sh, Z.assignWith = Wh, Z.at = Lh, Z.before = zf, Z.bind = ch, Z.bindAll = np, Z.bindKey = ah, Z.castArray = Nf, Z.chain = Qo, Z.chunk = uo, Z.compact = io, Z.concat = oo, Z.cond = za, Z.conforms = Ea, Z.constant = Sa, Z.countBy = Xs, Z.create = Sc, Z.curry = Ef, Z.curryRight = Sf, Z.debounce = Wf, Z.defaults = Ch, Z.defaultsDeep = Uh, Z.defer = lh, Z.delay = sh, Z.difference = Us, Z.differenceBy = Bs, Z.differenceWith = Ts, Z.drop = fo, Z.dropRight = co, Z.dropRightWhile = ao, Z.dropWhile = lo, Z.fill = so, Z.filter = lf, Z.flatMap = sf, Z.flatMapDeep = hf, Z.flatMapDepth = pf, Z.flatten = _o, Z.flattenDeep = vo, Z.flattenDepth = go, Z.flip = Lf, Z.flow = tp, Z.flowRight = rp, Z.fromPairs = yo, Z.functions = $c, Z.functionsIn = Dc, Z.groupBy = rh, Z.initial = mo, Z.intersection = $s, Z.intersectionBy = Ds, Z.intersectionWith = Ms, Z.invert = Bh, Z.invertBy = Th, Z.invokeMap = eh, Z.iteratee = Ca, Z.keyBy = uh, Z.keys = Pc, Z.keysIn = qc, Z.map = yf, Z.mapKeys = Zc, Z.mapValues = Kc, Z.matches = Ua, Z.matchesProperty = Ba, Z.memoize = Cf, Z.merge = Dh, Z.mergeWith = Mh, Z.method = ep, Z.methodOf = up, Z.mixin = Ta, Z.negate = Uf, Z.nthArg = Ma, Z.omit = Fh, Z.omitBy = Vc, Z.once = Bf, Z.orderBy = df, Z.over = ip, Z.overArgs = hh, Z.overEvery = op, Z.overSome = fp, Z.partial = ph, Z.partialRight = _h, Z.partition = ih, Z.pick = Nh, Z.pickBy = Gc, Z.property = Fa, Z.propertyOf = Na, Z.pull = Fs, Z.pullAll = Oo, Z.pullAllBy = Io, Z.pullAllWith = Ro, Z.pullAt = Ns, Z.range = cp, Z.rangeRight = ap, Z.rearg = vh, Z.reject = mf, Z.remove = zo, Z.rest = Tf, Z.reverse = Eo, Z.sampleSize = jf, Z.set = Jc, Z.setWith = Yc, Z.shuffle = Af, Z.slice = So, Z.sortBy = oh, Z.sortedUniq = $o, Z.sortedUniqBy = Do, Z.split = da, Z.spread = $f, Z.tail = Mo, Z.take = Fo, Z.takeRight = No, Z.takeRightWhile = Po, Z.takeWhile = qo, Z.tap = Xo, Z.throttle = Df, Z.thru = nf, Z.toArray = jc, Z.toPairs = Ph, Z.toPairsIn = qh, Z.toPath = Ha, Z.toPlainObject = Rc, Z.transform = Qc, Z.unary = Mf, Z.union = Ps, Z.unionBy = qs, Z.unionWith = Zs, Z.uniq = Zo, Z.uniqBy = Ko, Z.uniqWith = Vo, Z.unset = Xc, Z.unzip = Go, Z.unzipWith = Ho, Z.update = na, Z.updateWith = ta, Z.values = ra, Z.valuesIn = ea, Z.without = Ks, Z.words = Ra, Z.wrap = Ff, Z.xor = Vs, Z.xorBy = Gs, Z.xorWith = Hs, Z.zip = Js, Z.zipObject = Jo, Z.zipObjectDeep = Yo, Z.zipWith = Ys, Z.entries = Ph, Z.entriesIn = qh, Z.extend = Eh, Z.extendWith = Sh, Ta(Z, Z), Z.add = lp, Z.attempt = Xh, Z.camelCase = Zh, Z.capitalize = fa, Z.ceil = sp, Z.clamp = ua, Z.clone = Pf, Z.cloneDeep = Zf, Z.cloneDeepWith = Kf, Z.cloneWith = qf, Z.conformsTo = Vf, Z.deburr = ca, Z.defaultTo = Wa, Z.divide = hp, Z.endsWith = aa, Z.eq = Gf, Z.escape = la, Z.escapeRegExp = sa, Z.every = af, Z.find = nh, Z.findIndex = ho, Z.findKey = Wc, Z.findLast = th, Z.findLastIndex = po, Z.findLastKey = Lc, Z.floor = pp, Z.forEach = _f, Z.forEachRight = vf, Z.forIn = Cc, Z.forInRight = Uc, Z.forOwn = Bc, Z.forOwnRight = Tc, Z.get = Mc, Z.gt = gh, Z.gte = yh, Z.has = Fc, Z.hasIn = Nc, Z.head = bo, Z.identity = La, Z.includes = gf, Z.indexOf = wo, Z.inRange = ia, Z.invoke = $h, Z.isArguments = dh, Z.isArray = bh, Z.isArrayBuffer = wh, Z.isArrayLike = Hf, Z.isArrayLikeObject = Jf, Z.isBoolean = Yf, Z.isBuffer = mh, Z.isDate = xh, Z.isElement = Qf, Z.isEmpty = Xf, Z.isEqual = nc, Z.isEqualWith = tc, Z.isError = rc, Z.isFinite = ec, Z.isFunction = uc, Z.isInteger = ic, Z.isLength = oc, Z.isMap = jh, Z.isMatch = ac, Z.isMatchWith = lc, Z.isNaN = sc, Z.isNative = hc, Z.isNil = _c, Z.isNull = pc, Z.isNumber = vc, Z.isObject = fc, Z.isObjectLike = cc, Z.isPlainObject = gc, Z.isRegExp = Ah, Z.isSafeInteger = yc, Z.isSet = kh, Z.isString = dc, Z.isSymbol = bc, Z.isTypedArray = Oh, Z.isUndefined = wc, Z.isWeakMap = mc, Z.isWeakSet = xc, Z.join = xo, Z.kebabCase = Kh, Z.last = jo, Z.lastIndexOf = Ao, Z.lowerCase = Vh, Z.lowerFirst = Gh, Z.lt = Ih, Z.lte = Rh, Z.max = Ya, Z.maxBy = Qa, Z.mean = Xa, Z.meanBy = nl, Z.min = tl, Z.minBy = rl, Z.stubArray = Pa, Z.stubFalse = qa, Z.stubObject = Za, Z.stubString = Ka, Z.stubTrue = Va, Z.multiply = _p, Z.nth = ko, Z.noConflict = $a, Z.noop = Da, Z.now = fh, Z.pad = ha, Z.padEnd = pa, Z.padStart = _a, Z.parseInt = va, Z.random = oa, Z.reduce = bf, Z.reduceRight = wf, Z.repeat = ga, Z.replace = ya, Z.result = Hc, Z.round = vp, Z.runInContext = p, Z.sample = xf, Z.size = kf, Z.snakeCase = Hh, Z.some = Of, Z.sortedIndex = Wo, Z.sortedIndexBy = Lo, Z.sortedIndexOf = Co, Z.sortedLastIndex = Uo, Z.sortedLastIndexBy = Bo, Z.sortedLastIndexOf = To, Z.startCase = Jh, Z.startsWith = ba, Z.subtract = gp, Z.sum = el, Z.sumBy = ul, Z.template = wa, Z.times = Ga, Z.toFinite = Ac, Z.toInteger = kc, Z.toLength = Oc, Z.toLower = ma, Z.toNumber = Ic, Z.toSafeInteger = zc, Z.toString = Ec, Z.toUpper = xa, Z.trim = ja, Z.trimEnd = Aa, Z.trimStart = ka, Z.truncate = Oa, Z.unescape = Ia, Z.uniqueId = Ja, Z.upperCase = Yh, Z.upperFirst = Qh, Z.each = _f, Z.eachRight = vf, Z.first = bo, Ta(Z, function () {
        var n = {};
        return ue(Z, function (t, r) {
          bl.call(Z.prototype, r) || (n[r] = t);
        }), n;
      }(), {
        chain: !1
      }), Z.VERSION = nn, r(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function (n) {
        Z[n].placeholder = Z;
      }), r(["drop", "take"], function (n, t) {
        Ct.prototype[n] = function (r) {
          r = r === X ? 1 : Gl(kc(r), 0);
          var e = this.__filtered__ && !t ? new Ct(this) : this.clone();
          return e.__filtered__ ? e.__takeCount__ = Hl(r, e.__takeCount__) : e.__views__.push({
            size: Hl(r, Un),
            type: n + (e.__dir__ < 0 ? "Right" : "")
          }), e;
        }, Ct.prototype[n + "Right"] = function (t) {
          return this.reverse()[n](t).reverse();
        };
      }), r(["filter", "map", "takeWhile"], function (n, t) {
        var r = t + 1,
          e = r == Rn || r == En;
        Ct.prototype[n] = function (n) {
          var t = this.clone();
          return t.__iteratees__.push({
            iteratee: mi(n, 3),
            type: r
          }), t.__filtered__ = t.__filtered__ || e, t;
        };
      }), r(["head", "last"], function (n, t) {
        var r = "take" + (t ? "Right" : "");
        Ct.prototype[n] = function () {
          return this[r](1).value()[0];
        };
      }), r(["initial", "tail"], function (n, t) {
        var r = "drop" + (t ? "" : "Right");
        Ct.prototype[n] = function () {
          return this.__filtered__ ? new Ct(this) : this[r](1);
        };
      }), Ct.prototype.compact = function () {
        return this.filter(La);
      }, Ct.prototype.find = function (n) {
        return this.filter(n).head();
      }, Ct.prototype.findLast = function (n) {
        return this.reverse().find(n);
      }, Ct.prototype.invokeMap = uu(function (n, t) {
        return "function" == typeof n ? new Ct(this) : this.map(function (r) {
          return Ie(r, n, t);
        });
      }), Ct.prototype.reject = function (n) {
        return this.filter(Uf(mi(n)));
      }, Ct.prototype.slice = function (n, t) {
        n = kc(n);
        var r = this;
        return r.__filtered__ && (n > 0 || t < 0) ? new Ct(r) : (n < 0 ? r = r.takeRight(-n) : n && (r = r.drop(n)), t !== X && (t = kc(t), r = t < 0 ? r.dropRight(-t) : r.take(t - n)), r);
      }, Ct.prototype.takeRightWhile = function (n) {
        return this.reverse().takeWhile(n).reverse();
      }, Ct.prototype.toArray = function () {
        return this.take(Un);
      }, ue(Ct.prototype, function (n, t) {
        var r = /^(?:filter|find|map|reject)|While$/.test(t),
          e = /^(?:head|last)$/.test(t),
          u = Z[e ? "take" + ("last" == t ? "Right" : "") : t],
          i = e || /^find/.test(t);
        u && (Z.prototype[t] = function () {
          var t = this.__wrapped__,
            o = e ? [1] : arguments,
            f = t instanceof Ct,
            c = o[0],
            l = f || bh(t),
            s = function (n) {
              var t = u.apply(Z, a([n], o));
              return e && h ? t[0] : t;
            };
          l && r && "function" == typeof c && 1 != c.length && (f = l = !1);
          var h = this.__chain__,
            p = !!this.__actions__.length,
            _ = i && !h,
            v = f && !p;
          if (!i && l) {
            t = v ? t : new Ct(this);
            var g = n.apply(t, o);
            return g.__actions__.push({
              func: nf,
              args: [s],
              thisArg: X
            }), new Y(g, h);
          }
          return _ && v ? n.apply(this, o) : (g = this.thru(s), _ ? e ? g.value()[0] : g.value() : g);
        });
      }), r(["pop", "push", "shift", "sort", "splice", "unshift"], function (n) {
        var t = _l[n],
          r = /^(?:push|sort|unshift)$/.test(n) ? "tap" : "thru",
          e = /^(?:pop|shift)$/.test(n);
        Z.prototype[n] = function () {
          var n = arguments;
          if (e && !this.__chain__) {
            var u = this.value();
            return t.apply(bh(u) ? u : [], n);
          }
          return this[r](function (r) {
            return t.apply(bh(r) ? r : [], n);
          });
        };
      }), ue(Ct.prototype, function (n, t) {
        var r = Z[t];
        if (r) {
          var e = r.name + "";
          bl.call(fs, e) || (fs[e] = []), fs[e].push({
            name: t,
            func: r
          });
        }
      }), fs[Qu(X, vn).name] = [{
        name: "wrapper",
        func: X
      }], Ct.prototype.clone = $t, Ct.prototype.reverse = Yt, Ct.prototype.value = Qt, Z.prototype.at = Qs, Z.prototype.chain = tf, Z.prototype.commit = rf, Z.prototype.next = ef, Z.prototype.plant = of, Z.prototype.reverse = ff, Z.prototype.toJSON = Z.prototype.valueOf = Z.prototype.value = cf, Z.prototype.first = Z.prototype.head, Ul && (Z.prototype[Ul] = uf), Z;
    },
    be = de();
  "function" == typeof define && "object" == typeof define.amd && define.amd ? (re._ = be, define('taoQtiItem/portableLib/lodash', [], function () {
    return be;
  })) : ue ? ((ue.exports = be)._ = be, ee._ = be) : re._ = be;
}).call(this);
define('text!audioRecordingInteraction/runtime/media/beep.txt', [], function () {
  return 'data:audio/mpeg;base64,//uQBAAOwgwLTxHpGbBBgWniPSM2DxSNNk4ky0m4k6fNthjRABajnWlSQsLQIwtmgSBvZIECBAxkRBAYLg4CCwfD8Tg+8uD74IH4gOVBjDHxOficP6f8oYrD+D+D78/UcyGCH/6QAWo51pUkLC0CMLZoEgb2SBAgQMZEQQGC4OAgsHw/E4PvLg++CB+IDlQYwx8Tn4nD+n/KGKw/g/g+/P1HMhgh/+kFhACGomCQoAGueTepgcDiMJIgw26ylztACNCdMlEoaRSsPl0KFiTKFCH18pZgaRk8446kFekgJtcyqqiGTNVXxUio4KC/BBXZBSmxo3mwr4o1+gX6wUnwmK9ME/CCn8hHdjFPQgv4grsQUVsKBeBQV8IKfiFHdBRYBLSbiekJBoAIHU+OFQDocmQrz4Kjoy990UQqtcDLmc8zJd9mxGXumqkM9UU37NVVGTNb/gZGZu5mUbhIK7IKU2NG8lCvijX6BfrBQXhMV6YJ+EFP5CO7GKehBfxBXYgorYUC8Cgr4QU/EKO6Ci0xBTUUDAAkIAAQAAAAAAAAAAAA//uSBAAIgvZFzus9OMBZiJn8Z6cZC30pNuz4owlQJSh10wk0AAAYMbIJMtAdKgCBRJ7qHcVtmioMBAsjwFNpBUEzURgKeygxuUCY2UAaWuFTTZwhbHRb3bkePeP9C/L9SXKdTOj9ur5w+dqZoT6EOhHQ99jWqfyo/WYtchyiCgvI0kgAAIDZoBeCyKgxdk4yDjKLTM8DA4NUmnkj0drRGAp7QtygTGygDS1wqabOELY6Le7cjx716Py/UlynUzo/bq+cPnamaE+hDoR0PfY1qn8qfmLXIcogoLy1JIRAABMAsqBAACWHmGcvDsY3QJhgggLgIAhTdx2WOXEMsUYTDrpCAuyoGkws2QAD6BmoW+gvoYdqM5BfQVfE0520FeM8X6vxDx3EX0P3bm6e3V+vYc3KHZ/tflHsoyFkEEuBfrDFbyIBDZf0jLoEgUD6xIfl4QTBKn5YBXGCE8frz8Dr+AB0G1Bvz8zaguQ+hX1TnbQTwXi+r8J43CvofuNqBcI/G6vwfjMoUcXpNqZGpiCmooGABIQAAgAAAAAAAAAAAAAAAP/7kgQADMLHIUuTn0CwWeSpcnPoFgiwcR5P7ETBKQyjif4ImJARgxEAAoIRGZhzmmCZIuJgAIHeFAE4GgDoEABkKEg2OAmaq8i18FHX5JvyKrQsMO5WLyb/Zvha9Ta8o7UDUFXFTqg7EVbiNboaiJ6j0FYlcWPQ7R/33yUrICMGIgAFBCIzMOc0wTJFxMABA7woAnA0AdAgAMhQkGxwEzVXkWvgo6/JN+RVaFhh3KxeTfwzfC16m15R3wzeprip1QdiKtya3Q1ETywdgrErix5Qdt/+ekpU/QAMDMAYTATQJwwHgFJMEhEojT3rmow20KWOy7TL2YVKyI/DDUIIhIBkf/3//zWvugejvqUW0m0Uf9X/T/////R///v6L5AAwO4BzMBdAtjAjAXswU0VMNak04DD6wvg2dEzHJ6EY1HieEEUHC4OBMj//v+RKsxu7XQPi6w3EzhQCq31f/o///V9/R+j//6ExBTUUDAAkIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/+5IEAA3RwxxHk7+YmEpjiMJ/IjQIPHEaTv6CQOwOY8nf0EwuAAMGBMMaB9Mvz8N3vJOBTj8zFxAf0wTcCoMB2ANQFbAZUga0AZAhYcaM3///fU9qzJO1nW5pRQLAAGAZAPxgUwGOYJODAGFoC0p35OpKZEkF+mDsggxgXgC6e4Bqtm64aiJihTnG0Xt//6P5ttbiFlHAVP/s0+27///by1O3//7eXHgzYFcypF40wKc7zk48iRdQMkPBNDB9gFMaBvgPMwAwDwEk4CSQEApRX0O/+r/X6jXN2qnz/c7///////o///9nQfhlAHpj6IRnIPJx+4BzUSPkY3qBzGC+AHJEClAcg8AQoBoXAiIC9Jivt/+r6KSjN09RrptZ3K660HhqYgpqKBgASEAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//uSBAAN0h8cxxP8KTRIgvjCf6ImCZhxGE/sRoERjiNJ/giYWQADACgAwHAghggoCSYVYDHHZgnzRj/AHIfFKps4iGbSKYnH5hQPBcGjgCy42v/7a35PQHNEMpkHf//9/////93//9awAAYAsAMAIFkMFbAZzDgAg4+hNREMpeBMjlUdTRQYjJUYTDsWzCQMASDYwBlrnXr/k/0+PIxR3+3/766NP/9/0Z+72W1/+v2loYEMALGA/gQ5gjgKcYXmJ2nj5YnJkb4WGYQQCIGB7gS5zT4a0qGal5jAoYCBxWiV3J9v3t859bhFlc9RA8jXZ/+n9///+7qr/7P/9TMGA5ACBgNYDmYHsCRGFJiJ517FZqY+OE0nxnUbVQJoI1GTCMYrE5hAHFl5beKeT/83pWf6a+wuxu///////3dX///+pMQU1FAwAJCAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/7kgQACZJGHEcb/BEwQIOY4n+CJgiYcR9P5KaBBw5j5fyU1UowAADASAEcwBgCaMB5BYzBaBXQ2bHNMMSwC5DfcRNAJAyyVTDIvMYAwDC8MAl/2//5N/Vm6AJmFNqUZYkSAv//R////////774AAwEgBHMAYAmjAeQWMwWgV0NmxzTDEsAuQ33ETQCQMslUwyLzGAMAwvDAJf9v/+T07NJQLmbsNXv//93///6QGMjBgAYCcYAsBMg0FeMA8EpzD7MUUwG8LpFAQYCgOZxWHMMTlk0pQPLagop2V0EJ3R3Rr+So9N4adGLRXHyMwz///btAq7DAAwE4wBYCZBoK8YB0JTmH2YopgN4XSKAgwFAczisOYYnLJpSgeW1BRTsroHCHdFkIYXpkqYlHYe9vcGbj0BBMQU1FAwAJCAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/+5IEAAnR8xzJU/sROErDiON/giYJIHMUD+hGgSiOYoH9CNAAAoHJAAADAOgDUwCsBSMBUAuTA5QvwzCR3uMMjBkjkocyUyEAKNAwcGl6lc57IZ3ev/T2pKtbCN37icVYdUnEAAAYDsA2mAugUBgUAKSYMmKNGpAZNRirYVwcIe5lEzAAOhwuAQ9AwmCADT4ke713/TZ2ms9bCKDjocphNVH//////++j///39BgPoFAYG8BpmDCgyBhywsWezL6YmW+BZJhQYHUYIcAintImndmbaGOPmBHQxm1icrdv/zP67fH6Hxv/7rt6///HcrRvv///r8eYD6BQGBvAaZgwoMgYcsLFnsy+mJlvgWSYUGB1GCHAIp7SJp3Zm2hjj5gR0MZtYnX/p/R/Xb4/Q///O3b133/92/r999ez//XphdMQU1FAwAJCAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//uSBAAN0kkcRZP7EaBEYQigd/sSBkRhHE5+gmD/C+MJ39BIGQADAiAFEwLsA4MFWAXTDawUI9qBgQMpDALg4SgMEHAHzhEAyg8MBLyUaIAm3eap2z/6ffX1FUO3YT1K//7N/s///+r/t9H2dRk8MJmyIxsUN5/Suh/HDbUZdmAcBgqYYJeATnOJxmSUYKdkpEOB9u9xbbXKq9ueugHo/Xu9Pqntn//2XdWxPynos7LJQICYRGUhAa7P5/byHGVmtBjAAKQYKmA4mBNAJAHNZgZ9KBiiQAoMLoF5m/X///7HqqzISEQfGOgZGfZXnSk+HbRotRj6QNkYOCBNmBoAMwHtlgbFyBlkAGDGgIAF5m/X///89Fc92//+/o//////u/69CYgpqKBgASEAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/7kgQADdKEB0QDf9ggT8IIgH9iNAWQcShvaOSg7oOixb/wCjHF43XhMEgCAjDDx7c/ir0TMj5EZTCGAaIwQsDnOmujimQ1MzMuFDFQPMoTJS1kszks+VfAt9MbF0rVst7Eb573f+ixa3KbTS2tOrb6dmGeowBwBeMB1A4TBIAgIww8e3P4q9EzI+RGUwhgGiMELA5zpro4pkNTMzLhQxUDr+RUX3/hrcPZ8rgz0/qOU+tiNV/c1n/QvtVlv8WyXen5zeWl2AEAJJQIgaDGYFAzBwb+2GEEHUZWOYIwAQ6gaZjQwQf//5n/a1USjI9yXlyGZLYrYGAWgwJgYgrQbVvj4GDyBmhoGRmRkkY/KphkOgowCQzIgRIjLvRRTo2CI5TV///93////////QmIKaigYAEhAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/+5IEAA+SjQ7Eg3/gED/jmWpvxhfKxEEMD/REwU0D4YG/9Ag09yNUtTAjwW4wVoUPMwI9pTGlAw853DDOh1MKhYBBUxCDAMKS3z7OzEo7HKCnsT85as5VatwSGjQGCQSFgcc47HmYbV/7LNHsT//f//d3f/9AABNuRgAAF1gYEmBlhlGuZEFpJiPA8mBGAwWVcqHXGgUKaTiymvNjZqTWeFoJqSoiKNFCzCaCDqoi0xdq2EL50wKwCdMDnAxjBjgXkw6sWmNH++8DM6wig68Ls0rCYyKAYRCEYCCKYChICATjdbv0ZPwXSlV5Z7C3LIs6tfGyo7a9mmxNDeon9r+045uhElpLa23Mv6iR1k6fPjGDHAu5h1YtMaP994GZ1hFB14XZpWExkUAwiEIwGEUwDCQEAnG6yNTucu3kUzeeXnnb+rxW9rKxdT9Ca/3vudp5VFZJ6FV6nnmPvqpiltyYgpqKBgASEAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//uSBAAN0p4HQou/2JBJwrhxf4ImjGh5CA/wpMF0iCEB3/BAQAxlDgy+BMWtY+WL83c+NbMssBbDCfwIEwSQBeOVbTP08wpABJCIg6ofcmSsaFHJS0Ovc4XsRKOQmJKUfZcY+ijl920VZ9fTrToY9tb6sqrF1JcvwDARwCQwIwAHGgiIwrwCNNb1bPTIlgRI/OXTbRCM2k0xWNzAAqC4TFAJUz99W/QEV9SPcVQgVQqC6DE69f/9vX//p6rfo//o/rMAgAGjAawHcwOYEUMKLDfzbXhmYxnML7PNRA2OkzPBsMfEYxaIzCwMBwDdTRVoIChwHU6mPxndHar2avZ2qbcfIvnNQ9QEK2blvCtCHodH9HbQlrDfFpviyHp9giyOeosctbzCAGjGsdzOZFDovfzbXhmYxnML7PNRA2OkzPBsMfEYxaIzCwMBwDdTXN4ZVLG5Xvv6z//uUjZN3MmFU0vWc3j/Zhhc9iAdyuko5u00x03xM492oe9dlJatlrFoFxqYgpqKBgASEAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/7kgQAAAKEJUcVdGAAQ+SZBq6MAA0sqz+5DAARsJVndyWAAgGQAuqKAEYLiuITOP/ayMDy8MGANMAgISrU3ZJCopSWLFTmwW1AggwARueiUAEFvzqIXX//+ue5+Vd4Bi3mDYjPzlNQY+GOUd/+H+Xf/+GOoAgvSAl6loYFh6KkweGwcYCkUYFAGCAAYGy91JFOWMMKnNgt0RMInT0SoILf+ohdf/y7XeO/OucDh9EcD8pviB3lHcMAAAMqpVvSWStsBAEAACQgdspojQ03he8MYVJwGkBm+t3gk01JCpKtLSY/0cqYLhSBjjT42K+r9TjA0kEN1Yk+buO8dYf/cF/IrKUsyVuX3v//X/h/f+UVJfLLM9e/gsJRGJD/+kyFVCxEAABgxKFVutxtgEAgAAOqB1p5TQ2AuVJwLWA0FScHRB0vps+IGgIqAreOGP9IEgxYgMCT28cK+r9zilYkAIGgcX53jvHXP/8G+VMyl4mVN3u/v8O/h/f+GJiXw5OyKi/gsJRGJD/+kyDIiFhGmIKaigYAEhAACAAAAAAAAAAAAAD/+5IEAA/ytSBBBzDAAFakCCDmGAAAAAGkAAAAIAAANIAAAARoQgJABAGA8fMkkyMjJ6ExEkGoNQqyJEijMzX8mkSJEjppEijlEiU5///3mc9HEiUlgaDv4iBpYKh1YKgr4KxKCp2JXFga9lQNA0oGnlTvyMShuJXf8RNCEBIAIAwHj5kkmRkZPQmIkg1BqFWRIkUZma/k0iRIkdNIkUcokSnP//+8zno4kSksDQd/EQNLBUOrBUFfBWJQVOxK4sDXsqBoGlA08qd+RiUNxK7/iJMQU1FAwAJCAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA';
});
define('audioRecordingInteraction/runtime/js/uiElements', ['taoQtiItem/portableLib/jquery_2_1_1', 'taoQtiItem/portableLib/lodash', 'taoQtiItem/portableLib/OAT/util/event', 'text!audioRecordingInteraction/runtime/media/beep.txt'], function ($, _, event, beepSoundDataUrl) {
  'use strict';
  var controlStates = {
    DISABLED: 'disabled',
    ENABLED: 'enabled',
    ACTIVE: 'active'
  };
  function controlFactory(config) {
    var state,
      control,
      $control = $('<button>', {
        class: 'audiorec-control',
        'data-identifier': config.id,
        html: config.label
      });
    $control.appendTo(config.container);
    setState(config.defaultState || controlStates.DISABLED);
    function setState(newState) {
      $control.removeClass(state);
      state = newState;
      $control.addClass(state);
    }
    control = {
      is: function is(queriedState) {
        return state === queriedState;
      },
      enable: function enable() {
        setState(controlStates.ENABLED);
      },
      disable: function disable() {
        setState(controlStates.DISABLED);
      },
      activate: function activate() {
        setState(controlStates.ACTIVE);
      },
      getState: function getState() {
        return state;
      },
      setState: setState,
      updateState: function updateState() {
        this.trigger('updatestate');
      },
      updateLabel: function updateLabel(label) {
        $control.html(label);
      },
      destroy: function destroy() {
        $control.off('.audioPCI');
        $control.remove();
        $control = null;
      },
      getDOMElement() {
        return $control ? $control.get(0) : null;
      }
    };
    event.addEventMgr(control);
    $control.on('click.audioPCI', function () {
      control.trigger('click');
    });
    return control;
  }
  function progressBarFactory($container, config) {
    var progressBar,
      $progressBar = $('<progress>', {
        value: '0'
      }),
      currentClass;
    progressBar = {
      setMax: function setMax(max) {
        $progressBar.attr('max', max);
      },
      setValue: function setValue(value) {
        $progressBar.attr('value', value);
        $progressBar.text(value);
      },
      setStyle: function setStyle(className) {
        $progressBar.removeClass(currentClass);
        currentClass = className;
        $progressBar.addClass(currentClass);
      },
      reset: function reset() {
        this.setValue(0);
        this.setStyle('');
        if (config.maxRecordingTime) {
          this.setMax(config.maxRecordingTime);
        }
      }
    };
    $container.empty();
    $container.append($progressBar);
    return progressBar;
  }
  function inputMeterFactory(config) {
    var inputMeter, canvas, canvasCtx;
    var grey = '#cccccc',
      green = '#00aa00',
      orange = '#ff9300',
      red = '#ff0000';
    var ledHeight = 3,
      ledWidth = 10,
      ledPadding = 0,
      ledColors = [green, green, green, green, green, green, orange, orange, orange, orange, red, red, red],
      ledNumbers = ledColors.length,
      width = ledWidth,
      height = ledHeight * ledNumbers + ledPadding * (ledNumbers - 1);
    var scaledLevel;
    canvas = document.createElement('canvas');
    canvas.height = height;
    canvas.width = width;
    config.$container.empty();
    config.$container.append($(canvas));
    canvasCtx = canvas.getContext('2d');
    function drawLed(index, color) {
      var x = 0,
        y = (ledHeight + ledPadding) * (ledNumbers - (index + 1));
      canvasCtx.fillStyle = color;
      canvasCtx.fillRect(x, y, ledWidth, ledHeight);
    }
    inputMeter = {
      draw: function draw(level) {
        var currentColor, i;
        scaledLevel = Math.floor(level / config.maxLevel * height);
        for (i = 0; i < ledNumbers; i += 1) {
          currentColor = grey;
          if (i === 0 && scaledLevel > 0 || scaledLevel > config.maxLevel / ledNumbers * i) {
            currentColor = ledColors[i];
          }
          drawLed(i, currentColor);
        }
      },
      destroy: function destroy() {
        canvasCtx = null;
        canvas = null;
        config.$container.empty();
      }
    };
    inputMeter.draw(0);
    return inputMeter;
  }
  function countdownPieChartFactory(config) {
    var countdownPieChart;
    var $container = config.$container;
    var delay = config.delayInSeconds - 1;
    var $countdownPieChart = $('<div class="countdown-pie-container countdown-pie-animated">' + '<div class="countdown-pie-circle">' + '<div class="countdown-pie countdown-pie-spinner countdown-pie-animated"></div>' + '<div class="countdown-pie countdown-pie-filler countdown-pie-animated"></div>' + '<div class="countdown-pie-mask countdown-pie-animated"></div>' + '</div>' + '</div>');
    var displayed = true;
    countdownPieChart = {
      isDisplayed: function isDisplayed() {
        return displayed;
      },
      start: function start() {
        $countdownPieChart.css('animation-play-state', 'running');
        $countdownPieChart.find('.countdown-pie-animated').css('animation-play-state', 'running');
      },
      destroy: function destroy() {
        displayed = false;
        $container.empty();
      }
    };
    $countdownPieChart.css('animation-duration', delay + 's');
    $countdownPieChart.find('.countdown-pie-animated').css('animation-duration', delay + 's');
    $container.empty();
    $container.append($countdownPieChart);
    return countdownPieChart;
  }
  function beepPlayerFactory() {
    const timeoutMs = 2000;
    const soundUrl = beepSoundDataUrl;
    let beepPlayer;
    let audioEl = new Audio();
    let playedToTheEndPromise;
    function createDeferredPromise() {
      const deferred = {};
      deferred.promise = new Promise((resolve, reject) => {
        deferred.resolve = resolve;
        deferred.reject = reject;
      });
      return deferred;
    }
    function playSound() {
      if (playedToTheEndPromise) {
        playedToTheEndPromise.reject();
      }
      playedToTheEndPromise = createDeferredPromise();
      return Promise.resolve().then(() => {
        if (!audioEl) {
          playedToTheEndPromise.reject();
          return;
        }
        audioEl.pause();
        audioEl.src = soundUrl;
        audioEl.currentTime = 0;
        audioEl.muted = false;
        audioEl.onended = () => {
          clearTimeout(timeoutId);
          if (playedToTheEndPromise) {
            playedToTheEndPromise.resolve();
          }
        };
        audioEl.onerror = err => {
          clearTimeout(timeoutId);
          if (playedToTheEndPromise) {
            playedToTheEndPromise.reject(err);
          }
        };
        const timeoutId = setTimeout(() => {
          if (playedToTheEndPromise) {
            playedToTheEndPromise.reject(new Error('beep was not played in time'));
          }
        }, timeoutMs);
        return audioEl.play();
      }).then(() => playedToTheEndPromise.promise).catch(function onError(err) {
        if (err) {
          console.error(err);
        }
      }).finally(() => {
        playedToTheEndPromise = null;
      });
    }
    function playSilentSound() {
      if (!playedToTheEndPromise && audioEl) {
        audioEl.src = soundUrl;
        audioEl.muted = true;
        audioEl.play().catch(() => {});
      }
    }
    document.body.addEventListener('click', playSilentSound, {
      once: true
    });
    beepPlayer = {
      playStartSound: function playStartSound() {
        this.isPlayingStartSound = true;
        return playSound().then(() => {
          this.isPlayingStartSound = false;
        });
      },
      playEndSound: function playEndSound() {
        this.isPlayingEndSound = true;
        return playSound().then(() => {
          if (!this.isPlayingStartSound) {
            return playSound();
          }
        }).then(() => {
          this.isPlayingEndSound = false;
          this.trigger('beep-endsound-played');
        });
      },
      getIsPlayingEndSound: function getIsPlayingEndSound() {
        return this.isPlayingEndSound;
      },
      destroy: function destroy() {
        document.body.removeEventListener('click', playSilentSound);
        if (playedToTheEndPromise) {
          playedToTheEndPromise.reject();
        }
        if (audioEl) {
          audioEl.pause();
          audioEl = null;
        }
      }
    };
    event.addEventMgr(beepPlayer);
    return beepPlayer;
  }
  return {
    controlFactory: controlFactory,
    progressBarFactory: progressBarFactory,
    inputMeterFactory: inputMeterFactory,
    countdownPieChartFactory: countdownPieChartFactory,
    beepPlayerFactory: beepPlayerFactory
  };
});
define('text!audioRecordingInteraction/runtime/img/mic.svg', [], function () {
  return '<svg xmlns:svg="http://www.w3.org/2000/svg"\n     xmlns="http://www.w3.org/2000/svg"\n     viewBox="0 0 16 16">\n    <path d="M7.5 11c1.381 0 2.5-1.119 2.5-2.5v-6c0-1.381-1.119-2.5-2.5-2.5s-2.5 1.119-2.5 2.5v6c0 1.381 1.119 2.5 2.5 2.5zM11 7v1.5c0 1.933-1.567 3.5-3.5 3.5s-3.5-1.567-3.5-3.5v-1.5h-1v1.5c0 2.316 1.75 4.223 4 4.472v2.028h-2v1h5v-1h-2v-2.028c2.25-0.249 4-2.156 4-4.472v-1.5h-1z"/>\n</svg>\n';
});
define('text!audioRecordingInteraction/runtime/img/play.svg', [], function () {
  return '<svg xmlns="http://www.w3.org/2000/svg" title="play" viewBox="0 0 32 32">\n    <path d="M6 4l20 12-20 12z"></path>\n</svg>\n';
});
define('text!audioRecordingInteraction/runtime/img/record.svg', [], function () {
  return '<svg xmlns="http://www.w3.org/2000/svg" title="record" viewBox="0 0 32 32">\n    <circle cx="16" cy="16" r="12"/>\n</svg>\n';
});
define('text!audioRecordingInteraction/runtime/img/reset.svg', [], function () {
  return '<svg xmlns="http://www.w3.org/2000/svg" title="reset" viewBox="0 0 32 32">\n    <path d="M23.808 32c3.554-6.439 4.153-16.26-9.808-15.932v7.932l-12-12 12-12v7.762c16.718-0.436 18.58 14.757 9.808 24.238z"></path>\n</svg>\n';
});
define('text!audioRecordingInteraction/runtime/img/stop.svg', [], function () {
  return '<svg xmlns="http://www.w3.org/2000/svg" title="stop" viewBox="0 0 32 32">\n    <path d="M4 4h24v24h-24z"></path>\n</svg>\n';
});
define('css!audioRecordingInteraction/runtime/css/audioRecordingInteraction', [], function () {});
define('audioRecordingInteraction/runtime/audioRecordingInteraction', ['qtiCustomInteractionContext', 'taoQtiItem/portableLib/jquery_2_1_1', 'taoQtiItem/portableLib/OAT/util/event', 'audioRecordingInteraction/runtime/js/player', 'audioRecordingInteraction/runtime/js/recorder', 'audioRecordingInteraction/runtime/js/uiElements', 'text!audioRecordingInteraction/runtime/img/mic.svg', 'text!audioRecordingInteraction/runtime/img/play.svg', 'text!audioRecordingInteraction/runtime/img/record.svg', 'text!audioRecordingInteraction/runtime/img/reset.svg', 'text!audioRecordingInteraction/runtime/img/stop.svg', 'css!audioRecordingInteraction/runtime/css/audioRecordingInteraction'], function (qtiCustomInteractionContext, $, event, playerFactory, recorderFactory, uiElements, micIcon, playIcon, recordIcon, resetIcon, stopIcon) {
  'use strict';

  var _typeIdentifier = 'audioRecordingInteraction';
  var audioRecordingInteractionFactory;
  function toBoolean(value, defaultValue) {
    if (typeof value === 'undefined') {
      return defaultValue;
    } else if (value === '') {
      return false;
    } else {
      return value === true || value === 'true';
    }
  }
  function toInteger(value, defaultValue) {
    return typeof value === 'undefined' || value === '' ? defaultValue : parseInt(value, 10);
  }
  function getFileName(filePrefix, blob) {
    return filePrefix + '_' + window.Date.now() + '.' + blob.type.split(';')[0].split('/')[1];
  }
  audioRecordingInteractionFactory = function (dispatchInteractiontraceEvent) {
    return {
      _filePrefix: 'audioRecording',
      _recording: null,
      _recordsAttempts: 0,
      _isAutoPlayingBack: false,
      _delayCallback: null,
      getState: function getState() {
        return this.getSerializedState();
      },
      oncompleted: function oncompleted() {
        this.destroy();
      },
      getResponse: function getResponse() {
        var response = null;
        if (this.getRecording()) {
          response = {
            file: this.getRecording()
          };
        }
        return {
          base: response
        };
      },
      destroy: function destroy() {
        var self = this;
        var promises = [];
        if (self.recorder && self.recorder.is('recording')) {
          promises.push(self.stopRecording());
        }
        if (self.player && self.player.is('playing')) {
          promises.push(self.stopPlayback());
        }
        promises.push(self.destroyControls());
        if (self.inputMeter) {
          promises.push(self.inputMeter.destroy());
        }
        if (self.player) {
          promises.push(self.player.unload());
        }
        if (self.recorder) {
          promises.push(self.recorder.destroy());
        }
        if (self.beepPlayer) {
          promises.push(self.beepPlayer.destroy());
        }
        promises.push(self.resetResponse());
        self._cleanDelayCallback();
        return Promise.all(promises).then(function () {
          self.inputMeter = null;
          self.progressBar = null;
          self.player = null;
          self.recorder = null;
          self.beepPlayer = null;
        });
      },
      getTypeIdentifier: function getTypeIdentifier() {
        return _typeIdentifier;
      },
      initialize: function initialize(id, dom, config, assetManager) {
        var self = this;
        event.addEventMgr(this);
        this.id = id;
        this.assetManager = assetManager;
        this.$container = $(dom);
        this.render(config);
        this.on('configChange', function (newConfig) {
          self.render(newConfig);
        });
      },
      setResponse: function setResponse(response) {
        var recording = response && response.base && response.base.file;
        if (recording) {
          this.updateResponse(recording);
          this.player.loadFromBase64(recording.data, recording.mime);
        }
      },
      resetResponse: function resetResponse() {
        this.updateResponse(null);
      },
      setSerializedState: function setSerializedState(state) {
        this.setResponse(state && state.response || state);
      },
      getSerializedState: function getSerializedState() {
        return this.getResponse();
      },
      inQtiCreator: function inQtiCreator() {
        if (typeof this._inQtiCreator === 'undefined' && this.$container) {
          this._inQtiCreator = this.$container.hasClass('tao-qti-creator-context') || this.$container.find('.tao-qti-creator-context').length > 0;
        }
        return this._inQtiCreator;
      },
      _cleanDelayCallback: function _cleanDelayCallback() {
        if (this._delayCallback) {
          clearTimeout(this._delayCallback);
          this._delayCallback = null;
        }
      },
      getDelayInSeconds: function getDelayInSeconds() {
        return this.config.delayMinutes * 60 + this.config.delaySeconds;
      },
      render: function render(config) {
        this.$controlsContainer = this.$container.find('.audio-rec > .controls');
        this.$progressContainer = this.$container.find('.audio-rec > .progress');
        this.$meterContainer = this.$container.find('.audio-rec > .input-meter');
        this._recording = null;
        this._recordsAttempts = 0;
        this.config = {};
        this.controls = {};
        this.initConfig(config);
        this.initRecorder();
        this.initPlayer();
        this.initProgressBar();
        this.initMeter();
        this.initControls();
        this.initBeepPlayer();
        this.updateResetCount();
        this.initRecording();
        if (this.config.enableDomEvents) {
          this.$container.get(0).addEventListener('config-change', _ref => {
            let {
              detail: newConfig
            } = _ref;
            this.render(newConfig);
          });
          const dispatchRecorderStop = () => {
            this.$container.get(0).dispatchEvent(new CustomEvent('recorder-stop', {
              recordsAttempts: this._recordsAttempts
            }));
          };
          if (this.beepPlayer) {
            this.beepPlayer.on('beep-endsound-played.dispatchrecorderstop', () => {
              dispatchRecorderStop();
            });
          } else {
            this.recorder.on('stop', () => {
              dispatchRecorderStop();
            });
          }
          this.player.on('playbackend', () => {
            this.$container.get(0).dispatchEvent(new CustomEvent('playback-end'));
          });
        }
      },
      initConfig: function init(config) {
        this.config = {
          isReviewMode: toBoolean(config.isReviewMode, false),
          allowPlayback: toBoolean(config.allowPlayback, true),
          hideStopButton: toBoolean(config.hideStopButton, false),
          autoStart: toBoolean(config.autoStart, false),
          hideRecordButton: toBoolean(config.hideRecordButton, false),
          autoPlayback: toBoolean(config.autoPlayback, false),
          playSound: toBoolean(config.playSound, false),
          delaySeconds: toInteger(config.delaySeconds, 0),
          delayMinutes: toInteger(config.delayMinutes, 0),
          maxRecords: toInteger(config.maxRecords, 3),
          maxRecordingTime: toInteger(config.maxRecordingTime, 120),
          isCompressed: toBoolean(config.isCompressed, true),
          audioBitrate: toInteger(config.audioBitrate, 20000),
          isStereo: toBoolean(config.isStereo, false),
          media: config.media || {},
          displayDownloadLink: toBoolean(config.displayDownloadLink, false),
          updateResponsePartially: toBoolean(config.updateResponsePartially, true),
          partialUpdateInterval: toInteger(config.partialUpdateInterval, 1000),
          enableDomEvents: toBoolean(config.enableDomEvents, false)
        };
      },
      initRecorder: function initRecorder() {
        var self = this;
        this.recorder = recorderFactory(this.config);
        this.recorder.on('cancel', function () {
          self.progressBar.reset();
          self.$meterContainer.removeClass('record');
        });
        this.recorder.on('recordingavailable', function (blob, durationMs) {
          var recordingUrl = window.URL && window.URL.createObjectURL && window.URL.createObjectURL(blob),
            filename = getFileName(self._filePrefix, blob),
            filesize = blob.size;
          self.getBase64Recoding(blob, filename).then(function (recording) {
            self._recordsAttempts++;
            self.updateResponse(recording);
            if (!self.progressBar || !self.player) {
              return;
            }
            self.progressBar.reset();
            self.$meterContainer.removeClass('record');
            self.player.unload();
            if (self.config.autoPlayback) {
              self.player.on('oncanplay', function () {
                self.player.off('oncanplay');
                function doPlayRecording() {
                  self._isAutoPlayingBack = true;
                  self.playRecording();
                  dispatchInteractiontraceEvent({
                    domEventType: 'play',
                    autostart: true
                  });
                }
                if (self.beepPlayer && self.beepPlayer.getIsPlayingEndSound()) {
                  self.beepPlayer.on('beep-endsound-played.autoplayback', () => {
                    self.beepPlayer.off('beep-endsound-played.autoplayback');
                    doPlayRecording();
                  });
                } else {
                  doPlayRecording();
                }
              });
            }
            self.player.loadFromBase64(recording.data, recording.mime);
            self.displayDownloadLink(recordingUrl, filename, filesize, durationMs);
          }).catch(function () {
            self.resetRecording();
          });
        });
        this.recorder.on('partialrecordingavailable', function (blob) {
          var filename = getFileName(self._filePrefix, blob);
          self.getBase64Recoding(blob, filename).then(function (recording) {
            self.updateResponse(recording);
          }).catch(function () {
            self.resetRecording();
          });
        });
        this.recorder.on('statechange', function () {
          self.updateControls();
        });
        this.recorder.on('timeupdate', function (currentTime) {
          self.progressBar.setValue(currentTime);
        });
        this.recorder.on('levelUpdate', function (level) {
          self.inputMeter.draw(level);
        });
        this.recorder.on('stop', function () {
          if (self.beepPlayer) {
            self.beepPlayer.playEndSound().then(() => {
              self.updateControls();
            });
          }
        });
      },
      initPlayer: function initPlayer() {
        var self = this;
        this.player = playerFactory();
        this.player.on('statechange', function () {
          self.updateControls();
        });
        this.player.on('playbackend', function () {
          dispatchInteractiontraceEvent({
            domEventType: 'ended'
          });
          self.progressBar.setStyle('');
          self._isAutoPlayingBack = false;
        });
        this.player.on('timeupdate', function (currentTime) {
          self.progressBar.setValue(currentTime);
        });
        this.player.on('durationchange', function (durationSeconds) {
          self.progressBar.setMax(durationSeconds);
        });
      },
      initProgressBar: function initProgressBar() {
        this.progressBar = uiElements.progressBarFactory(this.$progressContainer, this.config);
      },
      initMeter: function initMeter() {
        var $micIcon = this.$meterContainer.find('.mic');
        $micIcon.empty();
        $micIcon.append(micIcon);
        this.inputMeter = uiElements.inputMeterFactory({
          $container: this.$meterContainer.find('.leds'),
          maxLevel: 100
        });
      },
      initBeepPlayer: function initBeepPlayer() {
        if (this.config.playSound === true && this.config.isReviewMode !== true) {
          this.beepPlayer = uiElements.beepPlayerFactory();
        }
      },
      initRecording: function initRecording() {
        var delayInSeconds = this.getDelayInSeconds();
        var self = this;
        this.ctrCache = {};
        if (this.config.autoStart !== true || this.config.isReviewMode === true) {
          return;
        }
        if (delayInSeconds === 0 && !this.inQtiCreator()) {
          this.startRecording();
          dispatchInteractiontraceEvent({
            domEventType: 'record',
            autostart: true
          });
          return;
        }
        Object.keys(this.controls || {}).forEach(function (id) {
          var ctr = self.controls[id];
          self.ctrCache[id] = ctr.getState();
          ctr.disable();
        });
        if (delayInSeconds > 0 && !this.inQtiCreator()) {
          this.initCountdown();
        }
        if (!this.inQtiCreator()) {
          this.initDelay();
        }
      },
      initDelay: function initDelay() {
        var self = this;
        this._cleanDelayCallback();
        this.askPermissionAccessMic(function () {
          self.countdown.start();
          self._delayCallback = setTimeout(function () {
            self.countdown.destroy();
            Object.keys(this.controls || {}).forEach(function (id) {
              var ctr = self.controls[id];
              ctr.setState(self.ctrCache[id]);
            });
            self._cleanDelayCallback();
            self.startRecording();
            dispatchInteractiontraceEvent({
              domEventType: 'record',
              autostart: true,
              delay: self.getDelayInSeconds()
            });
          }, self.getDelayInSeconds() * 1000);
        });
      },
      initCountdown: function initCountdown() {
        if (this.config.autoStart === true) {
          this.countdown = uiElements.countdownPieChartFactory({
            $container: this.$meterContainer.find('.countdown-pie-chart'),
            delayInSeconds: this.getDelayInSeconds()
          });
        }
      },
      askPermissionAccessMic: function askPermissionAccessMic(callback) {
        if (this.recorder && this.recorder.is('created')) {
          this.recorder.init().then(function () {
            callback();
          }).catch(function (err) {
            console.error(err);
          });
        }
        if (this.recorder && this.recorder.is('idle')) {
          callback();
        }
      },
      startRecording: function startRecording() {
        var self = this;
        if (this.recorder.isNeedInit()) {
          this.recorder.init().then(function () {
            return playBeepAndStartRecording();
          }).catch(function (err) {
            console.error(err);
          });
        } else {
          playBeepAndStartRecording();
        }
        function playBeepAndStartRecording() {
          if (self.beepPlayer) {
            return self.beepPlayer.playStartSound().then(startForReal);
          }
          startForReal();
        }
        function startForReal() {
          self.resetRecording();
          self.recorder.start();
          if (self.config.maxRecordingTime) {
            self.$meterContainer.addClass('record');
            self.progressBar.setStyle('record');
            self.progressBar.setMax(self.config.maxRecordingTime);
          }
          self.updateControls();
        }
      },
      stopRecording: function stopRecording() {
        this.recorder.stop();
        this.updateControls();
      },
      stopPlayback: function stopPlayback() {
        this.player.stop();
        this.updateControls();
      },
      setRecording: function setRecording(data) {
        this._recording = data;
      },
      getRecording: function getRecording() {
        return this._recording;
      },
      playRecording: function playRecording() {
        if (this.player) {
          this.player.play();
          this.progressBar.setStyle('playback');
          this.updateControls();
        }
      },
      pausePlayback: function pausePlayback() {
        this.player.pause();
        this.updateControls();
      },
      resetRecording: function resetRecording() {
        this.player.unload();
        this.updateResponse(null);
        this.updateControls();
        this.progressBar.reset();
        this.$meterContainer.removeClass('record');
        if (this.recorder.is('recording')) {
          this.recorder.cancel();
        }
      },
      getBase64Recoding: function getBase64Recoding(blob, filename) {
        return new Promise(function (resolve) {
          var reader = new FileReader();
          reader.readAsDataURL(blob);
          reader.onloadend = function onLoadEnd(e) {
            var base64Raw = e.target.result,
              commaPosition = base64Raw.indexOf(','),
              base64Data = base64Raw.substring(commaPosition + 1),
              recording = {
                mime: blob.type,
                name: filename,
                data: base64Data
              };
            resolve(recording);
          };
        });
      },
      updateResponse: function updateResponse(recording) {
        this.setRecording(recording);
        if (typeof this.trigger === 'function') {
          this.trigger('responseChange');
        }
      },
      updateResetCount: function updateResetCount() {
        var remaining = this.config.maxRecords - this._recordsAttempts - 1,
          resetLabel = resetIcon,
          canRecordAgain;
        if (this.config.maxRecords > 1) {
          resetLabel += ' (' + remaining + ')';
        }
        if (this.controls.reset) {
          this.controls.reset.updateLabel(resetLabel);
        }
        canRecordAgain = this.config.maxRecords === 0 || remaining >= 0;
        this.$container.find('.audio-rec').attr('data-disabled', !canRecordAgain);
      },
      displayDownloadLink: function displayDownloadLink(url, filename, filesize, durationMs) {
        var downloadLink;
        if (this.config.displayDownloadLink === true) {
          downloadLink = document.createElement('a');
          document.body.appendChild(downloadLink);
          document.body.appendChild(document.createElement('br'));
          downloadLink.text = 'download ' + this._recordsAttempts + ' - ' + Math.round(filesize / 1000) + 'KB - ' + Math.round(durationMs / 1000) + 's';
          downloadLink.download = filename;
          downloadLink.href = url;
        }
      },
      initControls: function initControls() {
        var self = this,
          record,
          stop,
          play,
          reset;
        this.$controlsContainer.empty();
        this.controls = {};
        if (this.config.hideRecordButton !== true && this.config.isReviewMode !== true) {
          record = uiElements.controlFactory({
            id: 'record',
            label: recordIcon,
            container: this.$controlsContainer
          });
          record.on('click', function () {
            if (this.is('enabled')) {
              self.startRecording();
              dispatchInteractiontraceEvent({
                domEventType: 'record',
                target: record.getDOMElement()
              });
            }
          }.bind(record));
          record.on('updatestate', function () {
            if (self.player.is('created') && !self.recorder.is('recording') && !self.getRecording()) {
              this.enable();
            } else {
              this.disable();
            }
          }.bind(record));
          this.controls.record = record;
        }
        if (this.config.hideStopButton !== true || this.config.isReviewMode === true) {
          stop = uiElements.controlFactory({
            id: 'stop',
            label: stopIcon,
            container: this.$controlsContainer
          });
          stop.on('click', function () {
            if (this.is('enabled')) {
              if (self.recorder.is('recording')) {
                self.stopRecording();
                dispatchInteractiontraceEvent({
                  domEventType: 'stop',
                  target: stop.getDOMElement()
                });
              } else if (self.player.is('playing')) {
                self.stopPlayback();
                dispatchInteractiontraceEvent({
                  domEventType: 'stop',
                  target: stop.getDOMElement()
                });
              }
            }
          }.bind(stop));
          stop.on('updatestate', function () {
            if (self.player.is('playing') && !self._isAutoPlayingBack || self.recorder.is('recording')) {
              this.enable();
            } else {
              this.disable();
            }
          }.bind(stop));
          this.controls.stop = stop;
        }
        if (this.config.allowPlayback === true || this.config.isReviewMode === true) {
          play = uiElements.controlFactory({
            id: 'play',
            label: playIcon,
            container: this.$controlsContainer
          });
          play.on('click', function () {
            if (this.is('enabled')) {
              self.playRecording();
              dispatchInteractiontraceEvent({
                domEventType: 'play',
                target: play.getDOMElement()
              });
            }
          }.bind(play));
          play.on('updatestate', function () {
            if ((self.player.is('idle') || self.getRecording() && !self._isAutoPlayingBack) && !(self.beepPlayer && self.beepPlayer.getIsPlayingEndSound())) {
              this.enable();
            } else {
              this.disable();
            }
          }.bind(play));
          this.controls.play = play;
        }
        if (this.config.maxRecords !== 1 && this.config.isReviewMode !== true) {
          reset = uiElements.controlFactory({
            id: 'reset',
            label: resetIcon,
            container: this.$controlsContainer
          });
          reset.on('click', function () {
            if (this.is('enabled')) {
              self.resetRecording();
              self.updateResetCount();
              dispatchInteractiontraceEvent({
                domEventType: 'reset',
                target: reset.getDOMElement()
              });
              if (self.config.hideRecordButton === true) {
                self.startRecording();
                dispatchInteractiontraceEvent({
                  domEventType: 'record',
                  autostart: true
                });
              }
            }
          }.bind(reset));
          reset.on('updatestate', function () {
            if (self.config.maxRecords > 1 && self.config.maxRecords === self._recordsAttempts) {
              this.disable();
            } else if (self.player.is('idle') && !(self.beepPlayer && self.beepPlayer.getIsPlayingEndSound())) {
              this.enable();
            } else {
              this.disable();
            }
          }.bind(reset));
          this.controls.reset = reset;
        }
        self.updateControls();
      },
      updateControls: function updateControls() {
        var self = this;
        if (this._delayCallback || this.countdown && this.countdown.isDisplayed()) {
          return;
        }
        Object.keys(this.controls || {}).forEach(function (id) {
          self.controls[id].updateState();
        });
      },
      destroyControls: function destroyControls() {
        var self = this;
        Object.keys(this.controls || {}).forEach(function (id) {
          self.controls[id].destroy();
        });
        this.controls = null;
      }
    };
  };
  qtiCustomInteractionContext.register({
    typeIdentifier: _typeIdentifier,
    getInstance: function getInstance(dom, config, state) {
      const dispatchInteractiontraceEvent = detail => {
        const interactiontraceEvent = new CustomEvent('interactiontrace', {
          detail,
          bubbles: true
        });
        dom.dispatchEvent(interactiontraceEvent);
      };
      var response = config.boundTo;
      var responseIdentifier = Object.keys(response)[0];
      var audioRecordingInteraction = audioRecordingInteractionFactory(dispatchInteractiontraceEvent);
      if (config.properties && config.properties.media && typeof config.properties.media === 'string') {
        config.properties.media = JSON.parse(config.properties.media);
      }
      audioRecordingInteraction.initialize(responseIdentifier, dom, config.properties, config.assetManager);
      audioRecordingInteraction.setResponse(response[responseIdentifier]);
      audioRecordingInteraction.setSerializedState(state);
      if (typeof config.onready === 'function') {
        config.onready(audioRecordingInteraction, audioRecordingInteraction.getState());
      }
    }
  });
});
(function (c) {
  var d = document,
    a = 'appendChild',
    i = 'styleSheet',
    s = d.createElement('style');
  s.type = 'text/css';
  d.getElementsByTagName('head')[0][a](s);
  s[i] ? s[i].cssText = c : s[a](d.createTextNode(c));
})('.qti-customInteraction .audioRecordingInteraction{padding:10px}.qti-customInteraction .audioRecordingInteraction .audio-rec{text-align:left}.qti-customInteraction .audioRecordingInteraction .input-meter{border:2px solid #d7dadd;border-radius:10px;width:58px;padding:10px;margin-top:2px;display:flex;position:relative;float:left;margin-right:10px;margin-left:0}[dir=rtl] .qti-customInteraction .audioRecordingInteraction .input-meter{flex-direction:row-reverse}.qti-customInteraction .audioRecordingInteraction .input-meter.record{border-color:#c96b2b;background-color:#faf0ea}.qti-customInteraction .audioRecordingInteraction .input-meter.record .mic path{fill:#c96b2b}.qti-customInteraction .audioRecordingInteraction .input-meter .leds{flex:0 0 10px}.qti-customInteraction .audioRecordingInteraction .input-meter .mic{flex:0 0 28px}.qti-customInteraction .audioRecordingInteraction .input-meter .mic svg{height:28px;width:28px;margin-top:10px}.qti-customInteraction .audioRecordingInteraction .input-meter .mic path{fill:#afb4bb}.qti-customInteraction .audioRecordingInteraction .audiorec-control{border-radius:3px;font-size:14px !important;cursor:pointer;text-decoration:none !important;vertical-align:middle;outline:0;overflow:visible;border:none;line-height:initial;padding:8px 16px;font-weight:normal;font-style:normal;text-align:center;height:auto;margin:10px 10px 10px 0;display:flex}[dir=rtl] .qti-customInteraction .audioRecordingInteraction .audiorec-control{flex-direction:row-reverse}.qti-customInteraction .audioRecordingInteraction .audiorec-control.disabled{background-color:#afb4bb;text-shadow:1px 1px 0 rgba(255,255,255,.8) !important;cursor:not-allowed !important;opacity:.55 !important;color:#000 !important;fill:#000 !important}.qti-customInteraction .audioRecordingInteraction .audiorec-control.enabled{background-color:#266d9c;color:#fff;fill:#fff;text-shadow:1px 1px 0 #0b4a74;cursor:pointer !important}.qti-customInteraction .audioRecordingInteraction .audiorec-control.enabled:hover{opacity:.85}.qti-customInteraction .audioRecordingInteraction .audiorec-control:active,.qti-customInteraction .audioRecordingInteraction .audiorec-control.active{background-color:#c96b2b;color:#fff;fill:#fff;text-shadow:1px 1px 0 #9c480f;cursor:not-allowed !important}.qti-customInteraction .audioRecordingInteraction .audiorec-control svg{width:16px;height:16px}.qti-customInteraction .audioRecordingInteraction .controls{display:flex}.qti-customInteraction .audioRecordingInteraction .controls,body [dir=ltr] .qti-customInteraction .audioRecordingInteraction .controls{flex-direction:row;justify-content:flex-start}[dir=rtl] .qti-customInteraction .audioRecordingInteraction .controls{flex-direction:row-reverse}.qti-customInteraction .audioRecordingInteraction progress{-webkit-appearance:none;-moz-appearance:none;width:75%;height:10px;border-radius:5px;border:#aeb3bb 2px solid;color:#afb4bb}.qti-customInteraction .audioRecordingInteraction progress,body [dir=ltr] .qti-customInteraction .audioRecordingInteraction progress{transform:scaleX(1)}[dir=rtl] .qti-customInteraction .audioRecordingInteraction progress{transform:scaleX(-1)}.qti-customInteraction .audioRecordingInteraction progress::-webkit-progress-value{background-color:#afb4bb}.qti-customInteraction .audioRecordingInteraction progress::-moz-progress-bar{background-color:#afb4bb}.qti-customInteraction .audioRecordingInteraction progress::-webkit-progress-bar{background-color:#d7dadd}.qti-customInteraction .audioRecordingInteraction progress.record{border:#c35a13 2px solid;color:#f9efe7}.qti-customInteraction .audioRecordingInteraction progress.record::-webkit-progress-value{background-color:#c35a13}.qti-customInteraction .audioRecordingInteraction progress.record::-moz-progress-bar{background-color:#c35a13}.qti-customInteraction .audioRecordingInteraction progress.record::-webkit-progress-bar{background-color:#fcf7f3}.qti-customInteraction .audioRecordingInteraction progress.playback{border:#568eb2 2px solid;color:#eef4f7}.qti-customInteraction .audioRecordingInteraction progress.playback::-webkit-progress-value{background-color:#568eb2}.qti-customInteraction .audioRecordingInteraction progress.playback::-moz-progress-bar{background-color:#568eb2}.qti-customInteraction .audioRecordingInteraction progress.playback::-webkit-progress-bar{background-color:#f7fafb}.qti-customInteraction .audioRecordingInteraction .countdown-pie-chart{position:absolute;top:0;left:0;width:calc(100% + 4px);height:calc(100% + 4px);margin:-2px}.qti-customInteraction .audioRecordingInteraction .countdown-pie-chart .countdown-pie-container{width:100%;height:100%;border-radius:10px;background-color:rgba(175,180,187,.45);-webkit-animation:disable;-moz-animation:disable;-ms-animation:disable;-o-animation:disable;animation:disable;animation:disable 15s steps(1, end) 1 forwards paused}.qti-customInteraction .audioRecordingInteraction .countdown-pie-chart .countdown-pie-container .countdown-pie-circle{width:52px;height:52px;position:relative;top:50%;left:50%;transform:translate(-50%, -50%);background:#266d9c;border-radius:50%}.qti-customInteraction .audioRecordingInteraction .countdown-pie-chart .countdown-pie-container .countdown-pie-circle .countdown-pie{width:50%;height:100%;transform-origin:100% 50%;position:absolute;background:#fff}.qti-customInteraction .audioRecordingInteraction .countdown-pie-chart .countdown-pie-container .countdown-pie-circle .countdown-pie-spinner{border-radius:100% 0 0 100%/50% 0 0 50%;z-index:20;border-right:none;animation:rota 15s linear 1 forwards paused}.qti-customInteraction .audioRecordingInteraction .countdown-pie-chart .countdown-pie-container .countdown-pie-circle:hover .countdown-pie-spinner,.qti-customInteraction .audioRecordingInteraction .countdown-pie-chart .countdown-pie-container .countdown-pie-circle:hover .countdown-pie-filler,.qti-customInteraction .audioRecordingInteraction .countdown-pie-chart .countdown-pie-container .countdown-pie-circle:hover .countdown-pie-mask{cursor:not-allowed}.qti-customInteraction .audioRecordingInteraction .countdown-pie-chart .countdown-pie-container .countdown-pie-circle .countdown-pie-filler{border-radius:0 100% 100% 0/0 50% 50% 0;left:50%;opacity:0;z-index:100;border-left:none;animation:opa 15s steps(1, end) 1 reverse forwards paused}.qti-customInteraction .audioRecordingInteraction .countdown-pie-chart .countdown-pie-container .countdown-pie-circle .countdown-pie-mask{width:50%;height:100%;position:absolute;background:inherit;opacity:1;z-index:300;border-bottom-left-radius:104px;border-top-left-radius:104px;border-right:0;animation:opa 15s steps(1, end) 1 forwards paused}@keyframes rota{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes opa{0%{opacity:1}50%,100%{opacity:0}}@keyframes disable{0%,99%{opacity:1}100%{opacity:0}}.modal{background-color:#cfdfe9;border:1px solid #266d9c;box-shadow:3px 3px 5px #666;height:auto;opacity:0;top:-100%;padding:40px;position:fixed;z-index:105002;margin:auto;left:0;right:0;overflow-x:hidden;overflow-y:auto;max-width:100vw;max-height:calc(100vh - 40px)}.modal:focus{outline:none}.modal .modal-close{position:absolute;right:12px;top:10px;cursor:pointer;font-weight:bold;color:#222}[dir=rtl] .modal .modal-close{right:auto;left:12px}.modal .modal-close:hover{opacity:.6}.modal .modal-close .icon-close{font-size:20px;font-size:2rem}.modal button.modal-close{color:#222 !important;background-color:rgba(0,0,0,0);padding:0;height:20px}.modal button.modal-close .icon-close{padding:0}.modal .modal-close:focus{outline:3px solid #276d9b;outline-offset:3px}.modal .modal-body h4{font-size:16px;font-size:1.6rem;margin-top:0;margin-bottom:8px}.modal .modal-body .content,.modal .modal-body .message{margin-bottom:8px}.modal[class^=icon-]:before,.modal[class*=\" icon-\"]:before{font-size:30px;font-size:3rem;color:#0e5d91;position:absolute}.modal[class^=icon-].info:before,.modal[class*=\" icon-\"].info:before{color:#0e5d91}.modal[class^=icon-] .modal-body,.modal[class*=\" icon-\"] .modal-body{font-family:\"Source Sans Pro\",sans-serif;line-height:1.4;margin-left:4.5rem}.modal-bg{background:none repeat scroll 0 0 #000;opacity:.45;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=45)\";filter:alpha(opacity=45);display:none;position:fixed;height:100%;width:100%;left:0;top:0;z-index:100001;overflow:hidden}\n\n/*# sourceMappingURL=audioRecordingInteraction.css.map */');
define(['audioRecordingInteraction/runtime/audioRecordingInteraction'], function (IMSPCI) {
  return IMSPCI;
});