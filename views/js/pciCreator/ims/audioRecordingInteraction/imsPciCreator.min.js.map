{"version":3,"sources":["../../../qtiItemPci/views/js/pciCreator/ims/audioRecordingInteraction/creator/tpl/propertiesForm!tpl","../../../qtiItemPci/views/js/pciCreator/ims/audioRecordingInteraction/creator/widget/states/Question.js","../../../qtiItemPci/views/js/pciCreator/ims/audioRecordingInteraction/creator/widget/states/states.js","../../../qtiItemPci/views/js/pciCreator/ims/audioRecordingInteraction/creator/css/audioRecordingInteraction!css","../../../qtiItemPci/views/js/pciCreator/ims/audioRecordingInteraction/creator/widget/Widget.js","../../../qtiItemPci/views/js/pciCreator/ims/audioRecordingInteraction/creator/tpl/markup!tpl","../../../qtiItemPci/views/js/pciCreator/ims/audioRecordingInteraction/imsPciCreator.js","../../../../../../../../../onLayerEnd0.js"],"names":["define","hb","template","Handlebars","depth0","helpers","partials","data","program1","program3","program5","this","compilerInfo","merge","stack1","helper","options","buffer","helperMissing","escapeExpression","self","__","hash","call","identifier","serial","allowPlayback","inverse","noop","fn","program","hideStopButton","autoStart","unless","delayMinutes","delaySeconds","hideRecordButton","sequential","autoPlayback","playSound","maxRecords","maxRecordingTime","maximumRecordingTimeLimit","isCompressed","audioBitrate","isStereo","displayDownloadLink","partialUpdateInterval","_","$","module","stateFactory","Question","formElement","pciMediaManagerFactory","simpleEditor","formTpl","configChangeCallBack","interaction","value","name","prop","triggerPci","getProperties","toBoolean","defaultValue","AudioRecordingInteractionStateQuestion","extend","$container","widget","destroy","prototype","initForm","$compressedOptions","$uncompressedOptions","$autoStartSubOptions","$sequentialOption","$hideRecordOption","_widget","$form","element","response","getResponseDeclaration","pciMediaManager","html","defaults","config","attr","hasClass","updateResponsePartially","parseInt","enableDomEvents","find","initWidget","setChangeCallbacks","assign","i","id","boundInteraction","show","hide","toggleClass","parseFloat","getChangeCallbacks","init","factory","states","createBundle","arguments","Widget","AudioRecordingInteractionWidget","clone","initCreator","$interaction","registerStates","length","addClass","ciRegistry","markupTpl","audioRecordingInteractionCreator","getTypeIdentifier","getWidget","defaultProperties","beforeStateInit","event","pci","typeIdentifier","getDefaultProperties","forEach","properties","isReviewMode","media","autostart","replayTimeout","maxPlays","afterCreate","getMarkupTemplate","getMarkupData","defaultData","c","d","document","a","s","createElement","type","getElementsByTagName","cssText","createTextNode","IMSPCI"],"mappings":"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","file":"imsPciCreator.min.js","sourcesContent":["\ndefine('tpl!audioRecordingInteraction/creator/tpl/propertiesForm', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \"checked=\\\"checked\\\"\";\n  }\n\nfunction program3(depth0,data) {\n  \n  \n  return \"style=\\\"display:none\\\"\";\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  return \" selected=\\\"selected\\\"\";\n  }\n\n  buffer += \"<div class=\\\"panel\\\">\\n    <label for=\\\"response-identifier\\\" class=\\\"has-icon\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Response identifier\", options) : helperMissing.call(depth0, \"__\", \"Response identifier\", options)))\n    + \"</label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content:first\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <div class=\\\"tooltip-content\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options) : helperMissing.call(depth0, \"__\", \"The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore (\\\"_\\\") and contain only Letters, underscores, hyphens (\\\"-\\\"), period (\\\".\\\", a.k.a. full-stop), Digits, CombiningChars and Extenders.\", options)))\n    + \"</div>\\n\\n    <input id=\\\"response-identifier\\\"\\n           type=\\\"text\\\"\\n           name=\\\"identifier\\\"\\n           value=\\\"\";\n  if (helper = helpers.identifier) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.identifier); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\\n           placeholder=\\\"e.g. RESPONSE\\\"\\n           data-validate=\\\"$notEmpty; $qtiIdentifier; $availableIdentifier(serial=\";\n  if (helper = helpers.serial) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.serial); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \");\\\">\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"allowPlayback\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.allowPlayback), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow playback\", options) : helperMissing.call(depth0, \"__\", \"Allow playback\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Give the possibility to the test taker to playback its own recording.\", options) : helperMissing.call(depth0, \"__\", \"Give the possibility to the test taker to playback its own recording.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"hideStopButton\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hideStopButton), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Hide stop button\", options) : helperMissing.call(depth0, \"__\", \"Hide stop button\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Hide the stop button from test takers.\", options) : helperMissing.call(depth0, \"__\", \"Hide the stop button from test takers.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\" data-role=\\\"autoStartOption\\\">\\n    <label>\\n        <input name=\\\"autoStart\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.autoStart), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Auto start recording\", options) : helperMissing.call(depth0, \"__\", \"Auto start recording\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Recording starts automatically once test taker give microphone use authorisation.\", options) : helperMissing.call(depth0, \"__\", \"Recording starts automatically once test taker give microphone use authorisation.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel subpanel\\\" data-role=\\\"autoStartSubOptions\\\" \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.autoStart), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\n    <div data-role=\\\"delayOptions\\\">\\n        <div class=\\\"panel\\\">\\n            <label for=\\\"delay-minutes\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Min:\", options) : helperMissing.call(depth0, \"__\", \"Min:\", options)))\n    + \"</label>\\n            <input id=\\\"delay-minutes\\\" name=\\\"delayMinutes\\\" value=\\\"\";\n  if (helper = helpers.delayMinutes) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.delayMinutes); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" data-max=\\\"20\\\" type=\\\"text\\\" />\\n            <label for=\\\"delay-seconds\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Sec:\", options) : helperMissing.call(depth0, \"__\", \"Sec:\", options)))\n    + \"</label>\\n            <input id=\\\"delay-seconds\\\" name=\\\"delaySeconds\\\" value=\\\"\";\n  if (helper = helpers.delaySeconds) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.delaySeconds); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-increment=\\\"15\\\" data-min=\\\"0\\\" data-max=\\\"45\\\" type=\\\"text\\\" />\\n        </div>\\n    </div>\\n\\n    <div data-role=\\\"hideRecordOption\\\">\\n        <div class=\\\"panel\\\">\\n            <label>\\n                <input name=\\\"hideRecordButton\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.hideRecordButton), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n                <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Hide record button\", options) : helperMissing.call(depth0, \"__\", \"Hide record button\", options)))\n    + \"\\n            </label>\\n            <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <span class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Hide the record button from test takers.\", options) : helperMissing.call(depth0, \"__\", \"Hide the record button from test takers.\", options)))\n    + \"\\n            </span>\\n        </div>\\n    </div>\\n\\n    <div data-role=\\\"sequentialOption\\\">\\n        <div class=\\\"panel\\\">\\n            <label>\\n                <input name=\\\"sequential\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.sequential), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n                <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Sequential\", options) : helperMissing.call(depth0, \"__\", \"Sequential\", options)))\n    + \"\\n            </label>\\n            <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n            <span class=\\\"tooltip-content\\\">\\n                \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Indicates that the audio forms part of a sequence with other sequential interactions. The advancing of the sequence is handled by the delivery engine. Delays are also respected.\", options) : helperMissing.call(depth0, \"__\", \"Indicates that the audio forms part of a sequence with other sequential interactions. The advancing of the sequence is handled by the delivery engine. Delays are also respected.\", options)))\n    + \"\\n            </span>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"autoPlayback\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.autoPlayback), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Auto playback recording\", options) : helperMissing.call(depth0, \"__\", \"Auto playback recording\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Recorded audio is automatically played back after recording stops. During playback, no user interaction is possible and all buttons are disabled.\", options) : helperMissing.call(depth0, \"__\", \"Recorded audio is automatically played back after recording stops. During playback, no user interaction is possible and all buttons are disabled.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"playSound\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.playSound), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Play sound\", options) : helperMissing.call(depth0, \"__\", \"Play sound\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Play a sound at the start and end of recording.\", options) : helperMissing.call(depth0, \"__\", \"Play a sound at the start and end of recording.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label for=\\\"max-records\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Max attempts:\", options) : helperMissing.call(depth0, \"__\", \"Max attempts:\", options)))\n    + \"</label>\\n    <input id=\\\"max-records\\\" name=\\\"maxRecords\\\" value=\\\"\";\n  if (helper = helpers.maxRecords) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maxRecords); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"1\\\" data-min=\\\"0\\\" type=\\\"text\\\" disabled />\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Maximum number of recording attempts allowed to the test taker. Set to 0 to allow unlimited attempts. With a limit of 3, the test taker will be able to click 2 times on the reset button.\", options) : helperMissing.call(depth0, \"__\", \"Maximum number of recording attempts allowed to the test taker. Set to 0 to allow unlimited attempts. With a limit of 3, the test taker will be able to click 2 times on the reset button.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label for=\\\"max-recording-time\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Time limit:\", options) : helperMissing.call(depth0, \"__\", \"Time limit:\", options)))\n    + \"</label>\\n    <input id=\\\"max-recording-time\\\" name=\\\"maxRecordingTime\\\" value=\\\"\";\n  if (helper = helpers.maxRecordingTime) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maxRecordingTime); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"5\\\" data-min=\\\"5\\\" data-max=\\\"\";\n  if (helper = helpers.maximumRecordingTimeLimit) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maximumRecordingTimeLimit); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" type=\\\"text\\\" />\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In seconds. Maximum recording time allowed (cannot be less than 5 seconds). Recording will automatically stop once reached.\", options) : helperMissing.call(depth0, \"__\", \"In seconds. Maximum recording time allowed (cannot be less than 5 seconds). Recording will automatically stop once reached.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<hr />\\n<div class=\\\"panel\\\">\\n    <label for=\\\"is-compressed\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Recording format\", options) : helperMissing.call(depth0, \"__\", \"Recording format\", options)))\n    + \"</label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"With compressed recording, the audio is saved as a webm or ogg file (smaller size). With uncompressed, as a lossless Wav file (much bigger size).\", options) : helperMissing.call(depth0, \"__\", \"With compressed recording, the audio is saved as a webm or ogg file (smaller size). With uncompressed, as a lossless Wav file (much bigger size).\", options)))\n    + \"\\n    </span>\\n    <select id=\\\"is-compressed\\\" name=\\\"isCompressed\\\">\\n        <option value=\\\"true\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Compressed\", options) : helperMissing.call(depth0, \"__\", \"Compressed\", options)))\n    + \"</option>\\n        <option value=\\\"false\\\"\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Uncompressed\", options) : helperMissing.call(depth0, \"__\", \"Uncompressed\", options)))\n    + \"</option>\\n    </select>\\n</div>\\n\\n<div data-role=\\\"compressedOptions\\\" \";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\n    <div class=\\\"panel\\\">\\n        <label for=\\\"audio-bitrate\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Audio bitrate:\", options) : helperMissing.call(depth0, \"__\", \"Audio bitrate:\", options)))\n    + \"</label>\\n        <input id=\\\"audio-bitrate\\\" name=\\\"audioBitrate\\\" value=\\\"\";\n  if (helper = helpers.audioBitrate) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.audioBitrate); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"1000\\\" data-min=\\\"8000\\\" type=\\\"text\\\" />\\n        <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n        <span class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In bps (bits per second). Set the tradeoff between audio quality and filesize. With the default value (20.000bps), a 2minutes recording weights roughly 300KB.\", options) : helperMissing.call(depth0, \"__\", \"In bps (bits per second). Set the tradeoff between audio quality and filesize. With the default value (20.000bps), a 2minutes recording weights roughly 300KB.\", options)))\n    + \"\\n        </span>\\n    </div>\\n</div>\\n\\n<div data-role=\\\"uncompressedOptions\\\"  \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isCompressed), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\n    <div class=\\\"panel\\\">\\n        <label for=\\\"is-stereo\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Channels\", options) : helperMissing.call(depth0, \"__\", \"Channels\", options)))\n    + \"</label>\\n        <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n        <span class=\\\"tooltip-content\\\">\\n            \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Number of channels for the recording. Allow to cut the record size in half if used in mono.\", options) : helperMissing.call(depth0, \"__\", \"Number of channels for the recording. Allow to cut the record size in half if used in mono.\", options)))\n    + \"\\n        </span>\\n        <select id=\\\"is-stereo\\\" name=\\\"isStereo\\\">\\n            <option value=\\\"false\\\"\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.isStereo), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Mono\", options) : helperMissing.call(depth0, \"__\", \"Mono\", options)))\n    + \"</option>\\n            <option value=\\\"true\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.isStereo), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Stereo\", options) : helperMissing.call(depth0, \"__\", \"Stereo\", options)))\n    + \"</option>\\n        </select>\\n    </div>\\n</div>\\n\\n<hr />\\n\\n<h3 class=\\\"txt-error\\\"><strong><span class=\\\"icon-warning\\\"></span> \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"For tests only\", options) : helperMissing.call(depth0, \"__\", \"For tests only\", options)))\n    + \"</strong></h3>\\n\\n<div class=\\\"panel\\\">\\n    <label>\\n        <input name=\\\"displayDownloadLink\\\" type=\\\"checkbox\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.displayDownloadLink), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"/>\\n        <span class=\\\"icon-checkbox\\\"></span>\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Allow download\", options) : helperMissing.call(depth0, \"__\", \"Allow download\", options)))\n    + \"\\n    </label>\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"This is for testing purposes only. Displays a link to download the recorded file once the recording stops. This shouldn't be used in a delivery context, as it would allow the test taker to download its own recording.\", options) : helperMissing.call(depth0, \"__\", \"This is for testing purposes only. Displays a link to download the recorded file once the recording stops. This shouldn't be used in a delivery context, as it would allow the test taker to download its own recording.\", options)))\n    + \"\\n    </span>\\n</div>\\n\\n<div class=\\\"panel\\\">\\n    <label for=\\\"partial-update-interval\\\" class=\\\"spinner\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Update interval:\", options) : helperMissing.call(depth0, \"__\", \"Update interval:\", options)))\n    + \"</label>\\n    <input id=\\\"partial-update-interval\\\" name=\\\"partialUpdateInterval\\\" value=\\\"\";\n  if (helper = helpers.partialUpdateInterval) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.partialUpdateInterval); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"large\\\" data-increment=\\\"1\\\" data-min=\\\"1\\\" data-max=\\\"60\\\" type=\\\"text\\\" />\\n    <span class=\\\"icon-help tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <span class=\\\"tooltip-content\\\">\\n        \"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"In seconds. The time interval between partial updates of the recording.\", options) : helperMissing.call(depth0, \"__\", \"In seconds. The time interval between partial updates of the recording.\", options)))\n    + \"\\n    </span>\\n</div>\";\n  return buffer;\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2023 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/creator/widget/states/Question',[\n    'lodash',\n    'i18n',\n    'jquery',\n    'module',\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/states/Question',\n    'taoQtiItem/qtiCreator/widgets/helpers/formElement',\n    'taoQtiItem/qtiCreator/widgets/helpers/pciMediaManager/pciMediaManager',\n    'taoQtiItem/qtiCreator/editor/simpleContentEditableElement',\n    'tpl!audioRecordingInteraction/creator/tpl/propertiesForm'\n], function (_, __, $, module, stateFactory, Question, formElement, pciMediaManagerFactory, simpleEditor, formTpl) {\n    'use strict';\n\n    var AudioRecordingInteractionStateQuestion = stateFactory.extend(\n        Question,\n        function create() {},\n        function destroy() {\n            var $container = this.widget.$container;\n\n            simpleEditor.destroy($container);\n        }\n    );\n\n    /**\n     * Change callback of form values\n     * @param {Object} interaction\n     * @param {*} value\n     * @param {String} name\n     */\n    function configChangeCallBack(interaction, value, name) {\n        interaction.prop(name, value);\n        interaction.triggerPci('configChange', [interaction.getProperties()]);\n    }\n\n    /**\n     * Type casting helpers for PCI parameters\n     * @param {String, boolean} value\n     * @param {String, boolean} defaultValue\n     * @returns {boolean}\n     */\n    function toBoolean(value, defaultValue) {\n        if (typeof value === 'undefined') {\n            return defaultValue;\n        } else if (value === '') {\n            return false;\n        } else {\n            return value === true || value === 'true';\n        }\n    }\n\n    AudioRecordingInteractionStateQuestion.prototype.initForm = function initForm() {\n        var _widget = this.widget,\n            $form = _widget.$form,\n            interaction = _widget.element,\n            response = interaction.getResponseDeclaration(),\n            $compressedOptions,\n            $uncompressedOptions,\n            $autoStartSubOptions,\n            $sequentialOption,\n            $delayOptions,\n            $hideRecordOption;\n\n        var pciMediaManager = pciMediaManagerFactory(_widget);\n\n        //render the form using the form template\n        $form.html(\n            formTpl(\n                _.defaults({}, module.config(), {\n                    serial: response.serial,\n                    identifier: interaction.attr('responseIdentifier'),\n\n                    allowPlayback: toBoolean(interaction.prop('allowPlayback'), true),\n                    hideStopButton: toBoolean(interaction.prop('hideStopButton'), false),\n                    autoStart: toBoolean(interaction.prop('autoStart'), false),\n                    sequential: !!interaction.hasClass('sequential'),\n                    hideRecordButton: toBoolean(interaction.prop('hideRecordButton'), false),\n                    autoPlayback: toBoolean(interaction.prop('autoPlayback'), false),\n                    playSound: toBoolean(interaction.prop('playSound'), false),\n\n                    delayMinutes: interaction.prop('delayMinutes'),\n                    delaySeconds: interaction.prop('delaySeconds'),\n\n                    maxRecords: interaction.prop('maxRecords'),\n                    maxRecordingTime: interaction.prop('maxRecordingTime'),\n\n                    isCompressed: toBoolean(interaction.prop('isCompressed'), true),\n                    audioBitrate: interaction.prop('audioBitrate'),\n                    isStereo: toBoolean(interaction.prop('isStereo'), false),\n\n                    updateResponsePartially: toBoolean(interaction.prop('updateResponsePartially'), true),\n                    partialUpdateInterval: parseInt(interaction.prop('partialUpdateInterval'), 10) / 1000,\n\n                    displayDownloadLink: toBoolean(interaction.prop('displayDownloadLink'), false),\n\n                    enableDomEvents: toBoolean(interaction.prop('enableDomEvents'), false)\n                })\n            )\n        );\n\n        $compressedOptions = $form.find('[data-role=\"compressedOptions\"]');\n        $uncompressedOptions = $form.find('[data-role=\"uncompressedOptions\"]');\n\n        $autoStartSubOptions = $form.find('[data-role=\"autoStartSubOptions\"]');\n        $sequentialOption = $form.find('[data-role=\"sequentialOption\"]');\n        $delayOptions = $form.find('[data-role=\"delayOptions\"]');\n        $hideRecordOption = $form.find('[data-role=\"hideRecordOption\"]');\n\n        //init form javascript\n        formElement.initWidget($form);\n\n        //init data change callbacks\n        formElement.setChangeCallbacks(\n            $form,\n            interaction,\n            _.assign(\n                {\n                    identifier: function identifier(i, value) {\n                        response.id(value);\n                        interaction.attr('responseIdentifier', value);\n                    },\n\n                    allowPlayback: configChangeCallBack,\n                    hideStopButton: configChangeCallBack,\n\n                    autoStart: function autoStart(boundInteraction, value, name) {\n                        if (value) {\n                            $autoStartSubOptions.show();\n                        } else {\n                            $autoStartSubOptions.hide();\n\n                            $hideRecordOption.find('input[name=\"hideRecordButton\"]').prop('checked', false);\n                            configChangeCallBack(boundInteraction, false, 'hideRecordButton');\n\n                            $sequentialOption.find('input[name=\"sequential\"]').prop('checked', false);\n                            $form.find('input[name=\"maxRecords\"]').prop('disabled', false);\n                            interaction.toggleClass('sequential', false);\n                            configChangeCallBack(boundInteraction, false, 'enableDomEvents');\n                        }\n                        configChangeCallBack(boundInteraction, value, name);\n                    },\n                    sequential: function sequential(boundInteraction, value) {\n                        if (value) {\n                            $form.find('input[name=\"maxRecords\"]').prop('value', 1).prop('disabled', true);\n                            configChangeCallBack(boundInteraction, 1, 'maxRecords');\n                        } else {\n                            $form.find('input[name=\"maxRecords\"]').prop('disabled', false);\n                        }\n                        interaction.toggleClass('sequential', value);\n                        configChangeCallBack(boundInteraction, value, 'enableDomEvents');\n                    },\n                    hideRecordButton: configChangeCallBack,\n                    autoPlayback: configChangeCallBack,\n                    playSound: configChangeCallBack,\n\n                    delayMinutes: configChangeCallBack,\n                    delaySeconds: configChangeCallBack,\n\n                    maxRecords: configChangeCallBack,\n                    maxRecordingTime: configChangeCallBack,\n\n                    isCompressed: function isCompressed(boundInteraction, value, name) {\n                        if (value === 'true') {\n                            $uncompressedOptions.hide();\n                            $compressedOptions.show();\n                        } else {\n                            $uncompressedOptions.show();\n                            $compressedOptions.hide();\n                        }\n                        configChangeCallBack(boundInteraction, value, name);\n                    },\n                    audioBitrate: configChangeCallBack,\n                    isStereo: configChangeCallBack,\n\n                    partialUpdateInterval: function partialUpdateInterval(boundInteraction, value, name) {\n                        value = parseFloat(value) * 1000;\n                        configChangeCallBack(boundInteraction, value, name);\n                    },\n\n                    displayDownloadLink: configChangeCallBack\n                },\n                pciMediaManager.getChangeCallbacks()\n            )\n        );\n\n        if (!interaction.hasClass('sequential')) {\n            $form.find('input[name=\"maxRecords\"]').prop('disabled', false);\n        }\n\n        pciMediaManager.init();\n    };\n\n    return AudioRecordingInteractionStateQuestion;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2022 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/creator/widget/states/states',[\n    'taoQtiItem/qtiCreator/widgets/states/factory',\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states',\n    'audioRecordingInteraction/creator/widget/states/Question'\n], function (factory, states) {\n    'use strict';\n\n    return factory.createBundle(states, arguments, ['answer', 'correct', 'map']);\n});\n\n","\ndefine('css!audioRecordingInteraction/creator/css/audioRecordingInteraction',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2022 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/creator/widget/Widget',[\n    'taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget',\n    'audioRecordingInteraction/creator/widget/states/states',\n    'css!audioRecordingInteraction/creator/css/audioRecordingInteraction'\n], function (Widget, states) {\n    'use strict';\n\n    var AudioRecordingInteractionWidget = Widget.clone();\n\n    AudioRecordingInteractionWidget.initCreator = function () {\n        var $interaction;\n\n        this.registerStates(states);\n\n        Widget.initCreator.call(this);\n\n        $interaction = this.$container.find('.audioRecordingInteraction');\n        if ($interaction.length) {\n            $interaction.addClass('tao-qti-creator-context');\n        }\n    };\n\n    return AudioRecordingInteractionWidget;\n});\n\n","\ndefine('tpl!audioRecordingInteraction/creator/tpl/markup', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"audioRecordingInteraction\\\">\\n    <div class=\\\"audio-rec\\\">\\n        <div class=\\\"input-meter\\\">\\n            <div class=\\\"countdown-pie-chart\\\"> </div>\\n            <div class=\\\"leds\\\"> </div>\\n            <div class=\\\"mic\\\"> </div>\\n        </div>\\n        <div class=\\\"progress\\\"> </div>\\n        <div class=\\\"controls\\\"> </div>\\n    </div>\\n</div>\";\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017-2021 (original work) Open Assessment Technologies SA;\n */\ndefine('audioRecordingInteraction/imsPciCreator',[\n    'lodash',\n    'taoQtiItem/qtiCreator/editor/customInteractionRegistry',\n    'audioRecordingInteraction/creator/widget/Widget',\n    'tpl!audioRecordingInteraction/creator/tpl/markup'\n], function (_, ciRegistry, Widget, markupTpl) {\n    'use strict';\n\n    var _typeIdentifier = 'audioRecordingInteraction';\n\n    var audioRecordingInteractionCreator = {\n        /**\n         * (required) Get the typeIdentifier of the custom interaction\n         *\n         * @returns {String}\n         */\n        getTypeIdentifier: function getTypeIdentifier() {\n            return _typeIdentifier;\n        },\n        /**\n         * (required) Get the widget prototype\n         * Used in the renderer\n         *\n         * @returns {Object} Widget\n         */\n        getWidget: function getWidget() {\n            var defaultProperties;\n            Widget.beforeStateInit(function (event, pci) {\n                if (pci.typeIdentifier && pci.typeIdentifier === _typeIdentifier) {\n                    // ensure all the properties get a default value\n                    defaultProperties = audioRecordingInteractionCreator.getDefaultProperties();\n                    _.forEach(defaultProperties, function (value, name) {\n                        if (typeof pci.properties[name] === 'undefined') {\n                            pci.properties[name] = value;\n                        }\n                    });\n                }\n            });\n            return Widget;\n        },\n        /**\n         * (optional) Get the default properties values of the pci.\n         * Used on new pci instance creation\n         *\n         * @returns {Object}\n         */\n        getDefaultProperties: function getDefaultProperties() {\n            return {\n                isReviewMode: false,\n                allowPlayback: true,\n                hideStopButton: false,\n                autoStart: false,\n                hideRecordButton: false,\n                autoPlayback: false,\n                playSound: false,\n\n                delayMinutes: 0,\n                delaySeconds: 0,\n\n                maxRecords: 2,\n                maxRecordingTime: 120,\n\n                isCompressed: true,\n                audioBitrate: 20000,\n                isStereo: false,\n\n                media: {\n                    autostart: true,\n                    replayTimeout: 5,\n                    maxPlays: 2\n                },\n\n                displayDownloadLink: false,\n                updateResponsePartially: true,\n                partialUpdateInterval: 1000\n            };\n        },\n        /**\n         * (optional) Callback to execute on the\n         * Used on new pci instance creation\n         *\n         * @returns {Object}\n         */\n        afterCreate: function afterCreate() {\n            //do some stuff\n        },\n        /**\n         * (required) Gives the qti pci xml template\n         *\n         * @returns {function} handlebar template\n         */\n        getMarkupTemplate: function getMarkupTemplate() {\n            return markupTpl;\n        },\n        /**\n         * (optional) Allows passing additional data to xml template\n         *\n         * @param {Object} pci\n         * @param {Object} defaultData\n         * @returns {Object} handlebar template\n         */\n        getMarkupData: function getMarkupData(pci, defaultData) {\n            return defaultData;\n        }\n    };\n\n    //since we assume we are in a tao context, there is no use to expose the a global object for lib registration\n    //all libs should be declared here\n    return audioRecordingInteractionCreator;\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.item-editor-interaction-related .panel[data-role=\\\"autoStartOption\\\"]+.panel.panel[data-role=\\\"autoStartSubOptions\\\"]{margin-top:-15px}.item-editor-interaction-related div[data-role=\\\"delayOptions\\\"] .panel label{padding-left:5px}\\n\\n/*# sourceMappingURL=audioRecordingInteraction.css.map */');\n"]}